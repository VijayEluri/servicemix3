<?xml version="1.0" encoding="UTF-8"?>
<!--
    Licensed to the Apache Software Foundation (ASF) under one or more
    contributor license agreements.  See the NOTICE file distributed with
    this work for additional information regarding copyright ownership.
    The ASF licenses this file to You under the Apache License, Version 2.0
    (the "License"); you may not use this file except in compliance with
    the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.
-->
<repository lastmodified="20071203194254.669" name="ServiceMixRepository">
  <resource id="0" presentationname="OPS4J Pax Web Extender Service" symbolicname="org.ops4j.pax.web.extender" uri="http://repository.ops4j.org/maven2/org/ops4j/pax/web/pax-web-extender/0.1.0/pax-web-extender-0.1.0.jar" version="0.1.0">
    <description>
      Pax Web Extender facilitates easy servlet registration
    </description>
    <size>
      14827
    </size>
    <license>
      http://www.apache.org/licenses/LICENSE-2.0.html
    </license>
    <documentation>
      http://www.ops4j.org/
    </documentation>
    <capability name="bundle">
      <p n="manifestversion" v="2"/>
      <p n="presentationname" v="OPS4J Pax Web Extender Service"/>
      <p n="symbolicname" v="org.ops4j.pax.web.extender"/>
      <p n="version" t="version" v="0.1.0"/>
    </capability>
    <capability name="package">
      <p n="package" v="org.ops4j.pax.web.extender"/>
      <p n="version" t="version" v="0.1.0"/>
    </capability>
    <require extend="false" filter="(&amp;(package=javax.servlet)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">
      Import package javax.servlet
    </require>
    <require extend="false" filter="(&amp;(package=javax.servlet.http)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">
      Import package javax.servlet.http
    </require>
    <require extend="false" filter="(&amp;(package=org.apache.commons.logging)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">
      Import package org.apache.commons.logging
    </require>
    <require extend="false" filter="(&amp;(package=org.ops4j.pax.web.extender)(version&gt;=0.1.0))" multiple="false" name="package" optional="false">
      Import package org.ops4j.pax.web.extender ;version=0.1.0
    </require>
    <require extend="false" filter="(&amp;(package=org.osgi.framework)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">
      Import package org.osgi.framework
    </require>
    <require extend="false" filter="(&amp;(package=org.osgi.service.http)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">
      Import package org.osgi.service.http
    </require>
    <require extend="false" filter="(&amp;(package=org.osgi.util.tracker)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">
      Import package org.osgi.util.tracker
    </require>
  </resource>
  <resource id="1" presentationname="OPS4J Pax Web - Service" symbolicname="org.ops4j.pax.web.pax.web.service" uri="http://repository.ops4j.org/maven2/org/ops4j/pax/web/pax-web-service/0.2.1/pax-web-service-0.2.1.jar" version="0.2.1">
    <description>
      Pax Web is a OSGi Http Service based on Jetty 6
    </description>
    <size>
      752769
    </size>
    <license>
      http://www.apache.org/licenses/LICENSE-2.0.html
    </license>
    <documentation>
      http://www.ops4j.org/
    </documentation>
    <capability name="bundle">
      <p n="manifestversion" v="2"/>
      <p n="presentationname" v="OPS4J Pax Web - Service"/>
      <p n="symbolicname" v="org.ops4j.pax.web.pax.web.service"/>
      <p n="version" t="version" v="0.2.1"/>
    </capability>
    <capability name="package">
      <p n="package" v="javax.servlet.http"/>
      <p n="uses:" v="javax.servlet"/>
      <p n="version" t="version" v="2.5.0"/>
    </capability>
    <capability name="package">
      <p n="package" v="javax.servlet"/>
      <p n="version" t="version" v="2.5.0"/>
    </capability>
    <capability name="package">
      <p n="package" v="javax.servlet.resources"/>
      <p n="version" t="version" v="2.5.0"/>
    </capability>
    <capability name="package">
      <p n="package" v="javax.servlet.jsp.resources"/>
      <p n="version" t="version" v="2.5.0"/>
    </capability>
    <capability name="package">
      <p n="package" v="org.ops4j.pax.web.service"/>
      <p n="uses:" v="org.osgi.service.http,org.osgi.framework,org.apache.commons.logging,org.osgi.util.tracker,org.ops4j.pax.web.service.internal,org.osgi.service.cm"/>
      <p n="version" t="version" v="0.2.1"/>
    </capability>
    <require extend="false" filter="(&amp;(package=javax.net.ssl)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">
      Import package javax.net.ssl
    </require>
    <require extend="false" filter="(&amp;(package=javax.security.cert)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">
      Import package javax.security.cert
    </require>
    <require extend="false" filter="(&amp;(package=javax.servlet)(version&gt;=2.5.0))" multiple="false" name="package" optional="false">
      Import package javax.servlet ;version=2.5.0
    </require>
    <require extend="false" filter="(&amp;(package=javax.servlet.http)(version&gt;=2.5.0))" multiple="false" name="package" optional="false">
      Import package javax.servlet.http ;version=2.5.0
    </require>
    <require extend="false" filter="(&amp;(package=javax.servlet.jsp.resources)(version&gt;=2.5.0))" multiple="false" name="package" optional="false">
      Import package javax.servlet.jsp.resources ;version=2.5.0
    </require>
    <require extend="false" filter="(&amp;(package=javax.servlet.resources)(version&gt;=2.5.0))" multiple="false" name="package" optional="false">
      Import package javax.servlet.resources ;version=2.5.0
    </require>
    <require extend="false" filter="(&amp;(package=javax.xml.parsers)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">
      Import package javax.xml.parsers
    </require>
    <require extend="false" filter="(&amp;(package=org.apache.commons.logging)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">
      Import package org.apache.commons.logging
    </require>
    <require extend="false" filter="(&amp;(package=org.ops4j.pax.web.service)(version&gt;=0.2.1))" multiple="false" name="package" optional="false">
      Import package org.ops4j.pax.web.service ;version=0.2.1
    </require>
    <require extend="false" filter="(&amp;(package=org.osgi.framework)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">
      Import package org.osgi.framework
    </require>
    <require extend="false" filter="(&amp;(package=org.osgi.service.cm)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">
      Import package org.osgi.service.cm
    </require>
    <require extend="false" filter="(&amp;(package=org.osgi.service.http)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">
      Import package org.osgi.service.http
    </require>
    <require extend="false" filter="(&amp;(package=org.osgi.util.tracker)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">
      Import package org.osgi.util.tracker
    </require>
    <require extend="false" filter="(&amp;(package=org.xml.sax)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">
      Import package org.xml.sax
    </require>
    <require extend="false" filter="(&amp;(package=org.xml.sax.helpers)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">
      Import package org.xml.sax.helpers
    </require>
  </resource>
  <resource id="2" presentationname="spring-aop" symbolicname="org.springframework.bundle.spring.aop" uri="http://repo1.maven.org/maven2/org/springframework/spring-aop/2.5/spring-aop-2.5.jar" version="2.5.0">
    <description>
      Spring Framework
    </description>
    <size>
      322942
    </size>
    <capability name="bundle">
      <p n="manifestversion" v="2"/>
      <p n="presentationname" v="spring-aop"/>
      <p n="symbolicname" v="org.springframework.bundle.spring.aop"/>
      <p n="version" t="version" v="2.5.0"/>
    </capability>
    <capability name="package">
      <p n="package" v="org.springframework.aop.support"/>
      <p n="uses:" v="org.apache.commons.logging,org.springframework.aop,org.aopalliance.intercept,org.springframework.util,org.aopalliance.aop,org.springframework.core,org.springframework.beans.factory"/>
      <p n="version" t="version" v="2.5.0"/>
    </capability>
    <capability name="package">
      <p n="package" v="org.springframework.aop.aspectj.autoproxy"/>
      <p n="uses:" v="org.springframework.core,org.aspectj.util,org.springframework.aop.framework.autoproxy,org.springframework.aop,org.springframework.util,org.springframework.aop.aspectj,org.aopalliance.aop"/>
      <p n="version" t="version" v="2.5.0"/>
    </capability>
    <capability name="package">
      <p n="package" v="org.springframework.aop.framework.adapter"/>
      <p n="uses:" v="org.springframework.aop.support,org.apache.commons.logging,org.aopalliance.intercept,org.springframework.aop,org.springframework.util,org.springframework.beans,org.springframework.beans.factory.config,org.aopalliance.aop"/>
      <p n="version" t="version" v="2.5.0"/>
    </capability>
    <capability name="package">
      <p n="package" v="org.springframework.aop.target"/>
      <p n="uses:" v="org.springframework.aop.support,org.apache.commons.logging,org.springframework.aop,org.apache.commons.pool.impl,org.springframework.util,org.apache.commons.pool,org.springframework.beans,org.springframework.beans.factory.config,org.springframework.core,org.springframework.beans.factory"/>
      <p n="version" t="version" v="2.5.0"/>
    </capability>
    <capability name="package">
      <p n="package" v="org.springframework.aop.interceptor"/>
      <p n="uses:" v="org.springframework.aop.support,org.apache.commons.logging,org.aopalliance.intercept,org.springframework.aop,org.springframework.util,org.aopalliance.aop,com.jamonapi,org.springframework.core,org.springframework.beans.factory"/>
      <p n="version" t="version" v="2.5.0"/>
    </capability>
    <capability name="package">
      <p n="package" v="org.springframework.aop"/>
      <p n="uses:" v="org.springframework.core,org.aopalliance.intercept,org.aopalliance.aop"/>
      <p n="version" t="version" v="2.5.0"/>
    </capability>
    <capability name="package">
      <p n="package" v="org.springframework.aop.scope"/>
      <p n="uses:" v="org.springframework.aop.support,org.springframework.aop.target,org.springframework.aop,org.springframework.util,org.springframework.beans,org.springframework.beans.factory.config,org.aopalliance.aop,org.springframework.beans.factory.support,org.springframework.aop.framework.autoproxy,org.springframework.aop.framework,org.springframework.beans.factory"/>
      <p n="version" t="version" v="2.5.0"/>
    </capability>
    <capability name="package">
      <p n="package" v="org.springframework.aop.target.dynamic"/>
      <p n="uses:" v="org.apache.commons.logging,org.springframework.aop,org.springframework.util,org.springframework.beans.factory"/>
      <p n="version" t="version" v="2.5.0"/>
    </capability>
    <capability name="package">
      <p n="package" v="org.springframework.aop.aspectj"/>
      <p n="uses:" v="org.springframework.aop.support,org.apache.commons.logging,org.springframework.aop.interceptor,org.aspectj.weaver,org.aopalliance.intercept,org.springframework.aop,org.aspectj.bridge,org.aspectj.weaver.tools,org.aspectj.lang,org.springframework.core,org.aspectj.weaver.patterns,org.springframework.aop.framework.autoproxy,org.aspectj.weaver.ast,org.springframework.beans.factory,org.aspectj.runtime.internal,org.springframework.util,org.aopalliance.aop,org.aspectj.lang.reflect,org.aspectj.weaver.internal.tools,org.springframework.aop.framework,org.aspectj.weaver.reflect"/>
      <p n="version" t="version" v="2.5.0"/>
    </capability>
    <capability name="package">
      <p n="package" v="org.springframework.aop.support.annotation"/>
      <p n="uses:" v="org.springframework.aop.support,org.springframework.aop,org.springframework.util,org.springframework.core.annotation"/>
      <p n="version" t="version" v="2.5.0"/>
    </capability>
    <capability name="package">
      <p n="package" v="org.springframework.aop.framework.autoproxy.target"/>
      <p n="uses:" v="org.springframework.beans.factory.support,org.springframework.aop.target,org.apache.commons.logging,org.springframework.aop.framework.autoproxy,org.springframework.aop,org.springframework.beans.factory.config,org.springframework.beans.factory"/>
      <p n="version" t="version" v="2.5.0"/>
    </capability>
    <capability name="package">
      <p n="package" v="org.springframework.aop.config"/>
      <p n="uses:" v="org.springframework.aop.support,org.springframework.aop.aspectj.autoproxy,org.springframework.util,org.springframework.aop.scope,org.springframework.beans,org.springframework.aop.aspectj,org.springframework.beans.factory.xml,org.springframework.beans.factory.config,org.springframework.beans.factory.parsing,org.springframework.util.xml,org.w3c.dom,org.springframework.beans.factory.support,org.springframework.core,org.springframework.aop.framework.autoproxy,org.springframework.aop.framework,org.springframework.beans.factory"/>
      <p n="version" t="version" v="2.5.0"/>
    </capability>
    <capability name="package">
      <p n="package" v="org.springframework.aop.framework.autoproxy"/>
      <p n="uses:" v="org.springframework.aop.support,org.springframework.aop.target,org.apache.commons.logging,org.springframework.aop.framework.adapter,org.springframework.aop,org.springframework.util,org.springframework.beans,org.springframework.beans.factory.config,org.aopalliance.aop,org.springframework.core,org.springframework.aop.framework,org.springframework.beans.factory"/>
      <p n="version" t="version" v="2.5.0"/>
    </capability>
    <capability name="package">
      <p n="package" v="org.springframework.aop.framework"/>
      <p n="uses:" v="org.springframework.aop.support,org.apache.commons.logging,org.springframework.aop.target,org.springframework.aop.framework.adapter,org.aopalliance.intercept,net.sf.cglib.proxy,org.springframework.aop,org.springframework.util,org.springframework.beans,org.aopalliance.aop,org.springframework.core,net.sf.cglib.transform.impl,net.sf.cglib.core,org.springframework.beans.factory"/>
      <p n="version" t="version" v="2.5.0"/>
    </capability>
    <capability name="package">
      <p n="package" v="org.springframework.aop.aspectj.annotation"/>
      <p n="uses:" v="org.springframework.aop.support,org.springframework.aop.aspectj.autoproxy,org.apache.commons.logging,org.springframework.aop,org.springframework.util,org.springframework.aop.aspectj,org.springframework.beans.factory.config,org.aopalliance.aop,org.springframework.core.annotation,org.aspectj.lang.annotation,org.springframework.core,org.aspectj.lang.reflect,org.springframework.aop.framework,org.springframework.beans.factory"/>
      <p n="version" t="version" v="2.5.0"/>
    </capability>
    <require extend="false" filter="(&amp;(package=com.jamonapi)(version&gt;=0.0.0))" multiple="false" name="package" optional="true">
      Import package com.jamonapi
    </require>
    <require extend="false" filter="(&amp;(package=net.sf.cglib.core)(version&gt;=0.0.0))" multiple="false" name="package" optional="true">
      Import package net.sf.cglib.core
    </require>
    <require extend="false" filter="(&amp;(package=net.sf.cglib.proxy)(version&gt;=0.0.0))" multiple="false" name="package" optional="true">
      Import package net.sf.cglib.proxy
    </require>
    <require extend="false" filter="(&amp;(package=net.sf.cglib.transform.impl)(version&gt;=0.0.0))" multiple="false" name="package" optional="true">
      Import package net.sf.cglib.transform.impl
    </require>
    <require extend="false" filter="(&amp;(package=org.aopalliance.aop)(version&gt;=0.0.0))" multiple="false" name="package" optional="true">
      Import package org.aopalliance.aop
    </require>
    <require extend="false" filter="(&amp;(package=org.aopalliance.intercept)(version&gt;=0.0.0))" multiple="false" name="package" optional="true">
      Import package org.aopalliance.intercept
    </require>
    <require extend="false" filter="(&amp;(package=org.apache.commons.logging)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">
      Import package org.apache.commons.logging
    </require>
    <require extend="false" filter="(&amp;(package=org.apache.commons.pool)(version&gt;=0.0.0))" multiple="false" name="package" optional="true">
      Import package org.apache.commons.pool
    </require>
    <require extend="false" filter="(&amp;(package=org.apache.commons.pool.impl)(version&gt;=0.0.0))" multiple="false" name="package" optional="true">
      Import package org.apache.commons.pool.impl
    </require>
    <require extend="false" filter="(&amp;(package=org.aspectj.bridge)(version&gt;=0.0.0))" multiple="false" name="package" optional="true">
      Import package org.aspectj.bridge
    </require>
    <require extend="false" filter="(&amp;(package=org.aspectj.lang)(version&gt;=0.0.0))" multiple="false" name="package" optional="true">
      Import package org.aspectj.lang
    </require>
    <require extend="false" filter="(&amp;(package=org.aspectj.lang.annotation)(version&gt;=0.0.0))" multiple="false" name="package" optional="true">
      Import package org.aspectj.lang.annotation
    </require>
    <require extend="false" filter="(&amp;(package=org.aspectj.lang.reflect)(version&gt;=0.0.0))" multiple="false" name="package" optional="true">
      Import package org.aspectj.lang.reflect
    </require>
    <require extend="false" filter="(&amp;(package=org.aspectj.runtime.internal)(version&gt;=0.0.0))" multiple="false" name="package" optional="true">
      Import package org.aspectj.runtime.internal
    </require>
    <require extend="false" filter="(&amp;(package=org.aspectj.util)(version&gt;=0.0.0))" multiple="false" name="package" optional="true">
      Import package org.aspectj.util
    </require>
    <require extend="false" filter="(&amp;(package=org.aspectj.weaver)(version&gt;=0.0.0))" multiple="false" name="package" optional="true">
      Import package org.aspectj.weaver
    </require>
    <require extend="false" filter="(&amp;(package=org.aspectj.weaver.ast)(version&gt;=0.0.0))" multiple="false" name="package" optional="true">
      Import package org.aspectj.weaver.ast
    </require>
    <require extend="false" filter="(&amp;(package=org.aspectj.weaver.internal.tools)(version&gt;=0.0.0))" multiple="false" name="package" optional="true">
      Import package org.aspectj.weaver.internal.tools
    </require>
    <require extend="false" filter="(&amp;(package=org.aspectj.weaver.patterns)(version&gt;=0.0.0))" multiple="false" name="package" optional="true">
      Import package org.aspectj.weaver.patterns
    </require>
    <require extend="false" filter="(&amp;(package=org.aspectj.weaver.reflect)(version&gt;=0.0.0))" multiple="false" name="package" optional="true">
      Import package org.aspectj.weaver.reflect
    </require>
    <require extend="false" filter="(&amp;(package=org.aspectj.weaver.tools)(version&gt;=0.0.0))" multiple="false" name="package" optional="true">
      Import package org.aspectj.weaver.tools
    </require>
    <require extend="false" filter="(&amp;(package=org.springframework.aop)(version&gt;=2.5.0))" multiple="false" name="package" optional="true">
      Import package org.springframework.aop ;version=2.5.0
    </require>
    <require extend="false" filter="(&amp;(package=org.springframework.aop.aspectj)(version&gt;=2.5.0))" multiple="false" name="package" optional="true">
      Import package org.springframework.aop.aspectj ;version=2.5.0
    </require>
    <require extend="false" filter="(&amp;(package=org.springframework.aop.aspectj.annotation)(version&gt;=2.5.0))" multiple="false" name="package" optional="true">
      Import package org.springframework.aop.aspectj.annotation ;version=2.5.0
    </require>
    <require extend="false" filter="(&amp;(package=org.springframework.aop.aspectj.autoproxy)(version&gt;=2.5.0))" multiple="false" name="package" optional="true">
      Import package org.springframework.aop.aspectj.autoproxy ;version=2.5.0
    </require>
    <require extend="false" filter="(&amp;(package=org.springframework.aop.config)(version&gt;=2.5.0))" multiple="false" name="package" optional="true">
      Import package org.springframework.aop.config ;version=2.5.0
    </require>
    <require extend="false" filter="(&amp;(package=org.springframework.aop.framework)(version&gt;=2.5.0))" multiple="false" name="package" optional="true">
      Import package org.springframework.aop.framework ;version=2.5.0
    </require>
    <require extend="false" filter="(&amp;(package=org.springframework.aop.framework.adapter)(version&gt;=2.5.0))" multiple="false" name="package" optional="true">
      Import package org.springframework.aop.framework.adapter ;version=2.5.0
    </require>
    <require extend="false" filter="(&amp;(package=org.springframework.aop.framework.autoproxy)(version&gt;=2.5.0))" multiple="false" name="package" optional="true">
      Import package org.springframework.aop.framework.autoproxy
       ;version=2.5.0
    </require>
    <require extend="false" filter="(&amp;(package=org.springframework.aop.framework.autoproxy.target)(version&gt;=2.5.0))" multiple="false" name="package" optional="true">
      Import package org.springframework.aop.framework.autoproxy.target
       ;version=2.5.0
    </require>
    <require extend="false" filter="(&amp;(package=org.springframework.aop.interceptor)(version&gt;=2.5.0))" multiple="false" name="package" optional="true">
      Import package org.springframework.aop.interceptor ;version=2.5.0
    </require>
    <require extend="false" filter="(&amp;(package=org.springframework.aop.scope)(version&gt;=2.5.0))" multiple="false" name="package" optional="true">
      Import package org.springframework.aop.scope ;version=2.5.0
    </require>
    <require extend="false" filter="(&amp;(package=org.springframework.aop.support)(version&gt;=2.5.0))" multiple="false" name="package" optional="true">
      Import package org.springframework.aop.support ;version=2.5.0
    </require>
    <require extend="false" filter="(&amp;(package=org.springframework.aop.support.annotation)(version&gt;=2.5.0))" multiple="false" name="package" optional="true">
      Import package org.springframework.aop.support.annotation ;version=2.5.0
    </require>
    <require extend="false" filter="(&amp;(package=org.springframework.aop.target)(version&gt;=2.5.0))" multiple="false" name="package" optional="true">
      Import package org.springframework.aop.target ;version=2.5.0
    </require>
    <require extend="false" filter="(&amp;(package=org.springframework.aop.target.dynamic)(version&gt;=2.5.0))" multiple="false" name="package" optional="true">
      Import package org.springframework.aop.target.dynamic ;version=2.5.0
    </require>
    <require extend="false" filter="(&amp;(package=org.springframework.beans)(version&gt;=0.0.0))" multiple="false" name="package" optional="true">
      Import package org.springframework.beans
    </require>
    <require extend="false" filter="(&amp;(package=org.springframework.beans.factory)(version&gt;=0.0.0))" multiple="false" name="package" optional="true">
      Import package org.springframework.beans.factory
    </require>
    <require extend="false" filter="(&amp;(package=org.springframework.beans.factory.config)(version&gt;=0.0.0))" multiple="false" name="package" optional="true">
      Import package org.springframework.beans.factory.config
    </require>
    <require extend="false" filter="(&amp;(package=org.springframework.beans.factory.parsing)(version&gt;=0.0.0))" multiple="false" name="package" optional="true">
      Import package org.springframework.beans.factory.parsing
    </require>
    <require extend="false" filter="(&amp;(package=org.springframework.beans.factory.support)(version&gt;=0.0.0))" multiple="false" name="package" optional="true">
      Import package org.springframework.beans.factory.support
    </require>
    <require extend="false" filter="(&amp;(package=org.springframework.beans.factory.xml)(version&gt;=0.0.0))" multiple="false" name="package" optional="true">
      Import package org.springframework.beans.factory.xml
    </require>
    <require extend="false" filter="(&amp;(package=org.springframework.core)(version&gt;=0.0.0))" multiple="false" name="package" optional="true">
      Import package org.springframework.core
    </require>
    <require extend="false" filter="(&amp;(package=org.springframework.core.annotation)(version&gt;=0.0.0))" multiple="false" name="package" optional="true">
      Import package org.springframework.core.annotation
    </require>
    <require extend="false" filter="(&amp;(package=org.springframework.util)(version&gt;=0.0.0))" multiple="false" name="package" optional="true">
      Import package org.springframework.util
    </require>
    <require extend="false" filter="(&amp;(package=org.springframework.util.xml)(version&gt;=0.0.0))" multiple="false" name="package" optional="true">
      Import package org.springframework.util.xml
    </require>
    <require extend="false" filter="(&amp;(package=org.w3c.dom)(version&gt;=0.0.0))" multiple="false" name="package" optional="true">
      Import package org.w3c.dom
    </require>
  </resource>
  <resource id="3" presentationname="spring-beans" symbolicname="org.springframework.bundle.spring.beans" uri="http://repo1.maven.org/maven2/org/springframework/spring-beans/2.5/spring-beans-2.5.jar" version="2.5.0">
    <description>
      Spring Framework
    </description>
    <size>
      461339
    </size>
    <capability name="bundle">
      <p n="manifestversion" v="2"/>
      <p n="presentationname" v="spring-beans"/>
      <p n="symbolicname" v="org.springframework.bundle.spring.beans"/>
      <p n="version" t="version" v="2.5.0"/>
    </capability>
    <capability name="package">
      <p n="package" v="org.springframework.beans.factory.serviceloader"/>
      <p n="uses:" v="org.springframework.util,org.springframework.beans.factory.config,org.springframework.beans.factory"/>
      <p n="version" t="version" v="2.5.0"/>
    </capability>
    <capability name="package">
      <p n="package" v="org.springframework.beans.annotation"/>
      <p n="uses:" v="org.springframework.util,org.springframework.beans"/>
      <p n="version" t="version" v="2.5.0"/>
    </capability>
    <capability name="package">
      <p n="package" v="org.springframework.beans.support"/>
      <p n="uses:" v="org.apache.commons.logging,org.springframework.util,org.springframework.core.io,org.springframework.beans,org.springframework.core.io.support,org.springframework.beans.propertyeditors"/>
      <p n="version" t="version" v="2.5.0"/>
    </capability>
    <capability name="package">
      <p n="package" v="org.springframework.beans.factory.generic"/>
      <p n="uses:" v="org.springframework.util,org.springframework.beans,org.springframework.beans.factory"/>
      <p n="version" t="version" v="2.5.0"/>
    </capability>
    <capability name="package">
      <p n="package" v="org.springframework.beans.factory.annotation"/>
      <p n="uses:" v="org.apache.commons.logging,org.springframework.util,org.springframework.beans,org.springframework.beans.factory.config,org.springframework.core.annotation,org.springframework.beans.factory.support,org.springframework.beans.factory.wiring,org.springframework.core,org.springframework.core.type,org.springframework.beans.factory"/>
      <p n="version" t="version" v="2.5.0"/>
    </capability>
    <capability name="package">
      <p n="package" v="org.springframework.beans"/>
      <p n="uses:" v="org.apache.commons.logging,org.springframework.util,org.springframework.core.io,org.springframework.core.io.support,org.springframework.beans.propertyeditors,org.springframework.core"/>
      <p n="version" t="version" v="2.5.0"/>
    </capability>
    <capability name="package">
      <p n="package" v="org.springframework.beans.factory.xml"/>
      <p n="uses:" v="org.apache.commons.logging,org.springframework.util,org.springframework.beans,org.springframework.core.io,javax.xml.parsers,org.springframework.core.io.support,org.springframework.beans.factory.config,org.springframework.beans.factory.parsing,org.springframework.util.xml,org.w3c.dom,org.xml.sax,org.springframework.beans.factory.support,org.springframework.core,org.springframework.beans.factory"/>
      <p n="version" t="version" v="2.5.0"/>
    </capability>
    <capability name="package">
      <p n="package" v="org.springframework.beans.factory.parsing"/>
      <p n="uses:" v="org.apache.commons.logging,org.springframework.util,org.springframework.core.io,org.springframework.beans,org.springframework.beans.factory.config,org.springframework.beans.factory"/>
      <p n="version" t="version" v="2.5.0"/>
    </capability>
    <capability name="package">
      <p n="package" v="org.springframework.beans.factory.config"/>
      <p n="uses:" v="org.apache.commons.logging,org.springframework.beans.support,org.springframework.util,org.springframework.beans,org.springframework.core.io.support,org.springframework.core,org.springframework.beans.factory"/>
      <p n="version" t="version" v="2.5.0"/>
    </capability>
    <capability name="package">
      <p n="package" v="org.springframework.beans.propertyeditors"/>
      <p n="uses:" v="org.springframework.util,org.springframework.core.io"/>
      <p n="version" t="version" v="2.5.0"/>
    </capability>
    <capability name="package">
      <p n="package" v="org.springframework.beans.factory.wiring"/>
      <p n="uses:" v="org.apache.commons.logging,org.springframework.util,org.springframework.beans.factory.config,org.springframework.beans.factory"/>
      <p n="version" t="version" v="2.5.0"/>
    </capability>
    <capability name="package">
      <p n="package" v="org.springframework.beans.factory.support"/>
      <p n="uses:" v="org.apache.commons.logging,net.sf.cglib.proxy,org.springframework.util,org.springframework.core.io,org.springframework.beans,org.springframework.core.io.support,org.springframework.beans.factory.config,org.springframework.core,org.springframework.beans.factory"/>
      <p n="version" t="version" v="2.5.0"/>
    </capability>
    <capability name="package">
      <p n="package" v="org.springframework.beans.factory.access"/>
      <p n="uses:" v="org.springframework.beans.factory.support,org.apache.commons.logging,org.springframework.core.io,org.springframework.beans,org.springframework.beans.factory.xml,org.springframework.core.io.support,org.springframework.beans.factory.config,org.springframework.beans.factory"/>
      <p n="version" t="version" v="2.5.0"/>
    </capability>
    <capability name="package">
      <p n="package" v="org.springframework.beans.factory"/>
      <p n="uses:" v="org.springframework.core,org.springframework.util,org.springframework.beans"/>
      <p n="version" t="version" v="2.5.0"/>
    </capability>
    <require extend="false" filter="(&amp;(package=javax.xml.parsers)(version&gt;=0.0.0))" multiple="false" name="package" optional="true">
      Import package javax.xml.parsers
    </require>
    <require extend="false" filter="(&amp;(package=net.sf.cglib.proxy)(version&gt;=0.0.0))" multiple="false" name="package" optional="true">
      Import package net.sf.cglib.proxy
    </require>
    <require extend="false" filter="(&amp;(package=org.apache.commons.logging)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">
      Import package org.apache.commons.logging
    </require>
    <require extend="false" filter="(&amp;(package=org.springframework.beans)(version&gt;=2.5.0))" multiple="false" name="package" optional="true">
      Import package org.springframework.beans ;version=2.5.0
    </require>
    <require extend="false" filter="(&amp;(package=org.springframework.beans.annotation)(version&gt;=2.5.0))" multiple="false" name="package" optional="true">
      Import package org.springframework.beans.annotation ;version=2.5.0
    </require>
    <require extend="false" filter="(&amp;(package=org.springframework.beans.factory)(version&gt;=2.5.0))" multiple="false" name="package" optional="true">
      Import package org.springframework.beans.factory ;version=2.5.0
    </require>
    <require extend="false" filter="(&amp;(package=org.springframework.beans.factory.access)(version&gt;=2.5.0))" multiple="false" name="package" optional="true">
      Import package org.springframework.beans.factory.access ;version=2.5.0
    </require>
    <require extend="false" filter="(&amp;(package=org.springframework.beans.factory.annotation)(version&gt;=2.5.0))" multiple="false" name="package" optional="true">
      Import package org.springframework.beans.factory.annotation
       ;version=2.5.0
    </require>
    <require extend="false" filter="(&amp;(package=org.springframework.beans.factory.config)(version&gt;=2.5.0))" multiple="false" name="package" optional="true">
      Import package org.springframework.beans.factory.config ;version=2.5.0
    </require>
    <require extend="false" filter="(&amp;(package=org.springframework.beans.factory.generic)(version&gt;=2.5.0))" multiple="false" name="package" optional="true">
      Import package org.springframework.beans.factory.generic ;version=2.5.0
    </require>
    <require extend="false" filter="(&amp;(package=org.springframework.beans.factory.parsing)(version&gt;=2.5.0))" multiple="false" name="package" optional="true">
      Import package org.springframework.beans.factory.parsing ;version=2.5.0
    </require>
    <require extend="false" filter="(&amp;(package=org.springframework.beans.factory.serviceloader)(version&gt;=2.5.0))" multiple="false" name="package" optional="true">
      Import package org.springframework.beans.factory.serviceloader
       ;version=2.5.0
    </require>
    <require extend="false" filter="(&amp;(package=org.springframework.beans.factory.support)(version&gt;=2.5.0))" multiple="false" name="package" optional="true">
      Import package org.springframework.beans.factory.support ;version=2.5.0
    </require>
    <require extend="false" filter="(&amp;(package=org.springframework.beans.factory.wiring)(version&gt;=2.5.0))" multiple="false" name="package" optional="true">
      Import package org.springframework.beans.factory.wiring ;version=2.5.0
    </require>
    <require extend="false" filter="(&amp;(package=org.springframework.beans.factory.xml)(version&gt;=2.5.0))" multiple="false" name="package" optional="true">
      Import package org.springframework.beans.factory.xml ;version=2.5.0
    </require>
    <require extend="false" filter="(&amp;(package=org.springframework.beans.propertyeditors)(version&gt;=2.5.0))" multiple="false" name="package" optional="true">
      Import package org.springframework.beans.propertyeditors ;version=2.5.0
    </require>
    <require extend="false" filter="(&amp;(package=org.springframework.beans.support)(version&gt;=2.5.0))" multiple="false" name="package" optional="true">
      Import package org.springframework.beans.support ;version=2.5.0
    </require>
    <require extend="false" filter="(&amp;(package=org.springframework.core)(version&gt;=0.0.0))" multiple="false" name="package" optional="true">
      Import package org.springframework.core
    </require>
    <require extend="false" filter="(&amp;(package=org.springframework.core.annotation)(version&gt;=0.0.0))" multiple="false" name="package" optional="true">
      Import package org.springframework.core.annotation
    </require>
    <require extend="false" filter="(&amp;(package=org.springframework.core.io)(version&gt;=0.0.0))" multiple="false" name="package" optional="true">
      Import package org.springframework.core.io
    </require>
    <require extend="false" filter="(&amp;(package=org.springframework.core.io.support)(version&gt;=0.0.0))" multiple="false" name="package" optional="true">
      Import package org.springframework.core.io.support
    </require>
    <require extend="false" filter="(&amp;(package=org.springframework.core.type)(version&gt;=0.0.0))" multiple="false" name="package" optional="true">
      Import package org.springframework.core.type
    </require>
    <require extend="false" filter="(&amp;(package=org.springframework.util)(version&gt;=0.0.0))" multiple="false" name="package" optional="true">
      Import package org.springframework.util
    </require>
    <require extend="false" filter="(&amp;(package=org.springframework.util.xml)(version&gt;=0.0.0))" multiple="false" name="package" optional="true">
      Import package org.springframework.util.xml
    </require>
    <require extend="false" filter="(&amp;(package=org.w3c.dom)(version&gt;=0.0.0))" multiple="false" name="package" optional="true">
      Import package org.w3c.dom
    </require>
    <require extend="false" filter="(&amp;(package=org.xml.sax)(version&gt;=0.0.0))" multiple="false" name="package" optional="true">
      Import package org.xml.sax
    </require>
  </resource>
  <resource id="4" presentationname="spring-context" symbolicname="org.springframework.bundle.spring.context" uri="http://repo1.maven.org/maven2/org/springframework/spring-context/2.5/spring-context-2.5.jar" version="2.5.0">
    <description>
      Spring Framework
    </description>
    <size>
      442210
    </size>
    <capability name="bundle">
      <p n="manifestversion" v="2"/>
      <p n="presentationname" v="spring-context"/>
      <p n="symbolicname" v="org.springframework.bundle.spring.context"/>
      <p n="version" t="version" v="2.5.0"/>
    </capability>
    <capability name="package">
      <p n="package" v="org.springframework.instrument.classloading.weblogic"/>
      <p n="uses:" v="org.springframework.instrument.classloading,org.springframework.util"/>
      <p n="version" t="version" v="2.5.0"/>
    </capability>
    <capability name="package">
      <p n="package" v="org.springframework.context.access"/>
      <p n="uses:" v="javax.naming,org.apache.commons.logging,org.springframework.util,org.springframework.context.support,org.springframework.beans,org.springframework.context,org.springframework.core.io.support,org.springframework.jndi,org.springframework.beans.factory.access,org.springframework.beans.factory"/>
      <p n="version" t="version" v="2.5.0"/>
    </capability>
    <capability name="package">
      <p n="package" v="org.springframework.context.support"/>
      <p n="uses:" v="org.apache.commons.logging,org.springframework.context.i18n,org.springframework.beans.support,org.springframework.util,org.springframework.core.io,org.springframework.beans,org.springframework.beans.factory.xml,org.springframework.context,org.springframework.beans.factory.config,org.springframework.core.io.support,org.springframework.context.event,org.xml.sax,org.springframework.beans.factory.support,org.springframework.core,org.springframework.beans.factory"/>
      <p n="version" t="version" v="2.5.0"/>
    </capability>
    <capability name="package">
      <p n="package" v="org.springframework.instrument.classloading.glassfish"/>
      <p n="uses:" v="org.springframework.instrument.classloading,com.sun.enterprise.loader,org.springframework.util,javax.persistence.spi"/>
      <p n="version" t="version" v="2.5.0"/>
    </capability>
    <capability name="package">
      <p n="package" v="org.springframework.jmx"/>
      <p n="uses:" v="org.springframework.core"/>
      <p n="version" t="version" v="2.5.0"/>
    </capability>
    <capability name="package">
      <p n="package" v="org.springframework.scripting.bsh"/>
      <p n="uses:" v="org.springframework.aop.support,org.springframework.core,org.springframework.util,org.springframework.scripting,bsh,org.springframework.beans.factory"/>
      <p n="version" t="version" v="2.5.0"/>
    </capability>
    <capability name="package">
      <p n="package" v="org.springframework.scheduling.concurrent"/>
      <p n="uses:" v="org.apache.commons.logging,org.springframework.scheduling,org.springframework.util,org.springframework.scheduling.support,org.springframework.core.task,org.springframework.beans.factory"/>
      <p n="version" t="version" v="2.5.0"/>
    </capability>
    <capability name="package">
      <p n="package" v="org.springframework.jmx.access"/>
      <p n="uses:" v="org.apache.commons.logging,javax.management.openmbean,org.aopalliance.intercept,org.springframework.util,org.springframework.jmx,org.springframework.beans,javax.management,org.springframework.core,javax.management.remote,org.springframework.jmx.support,org.springframework.aop.framework,org.springframework.beans.factory"/>
      <p n="version" t="version" v="2.5.0"/>
    </capability>
    <capability name="package">
      <p n="package" v="org.springframework.scheduling.support"/>
      <p n="uses:" v="org.apache.commons.logging,org.springframework.beans.support,org.springframework.util,org.springframework.beans.factory"/>
      <p n="version" t="version" v="2.5.0"/>
    </capability>
    <capability name="package">
      <p n="package" v="org.springframework.context.annotation"/>
      <p n="uses:" v="javax.annotation,javax.ejb,org.springframework.beans.factory.annotation,org.springframework.beans,org.springframework.beans.factory.config,javax.xml.namespace,org.springframework.core,org.springframework.beans.factory.support,org.springframework.jndi.support,org.springframework.core.type,org.springframework.beans.factory,org.springframework.util,org.springframework.aop.scope,org.springframework.core.io,org.springframework.beans.factory.xml,org.springframework.context,org.springframework.beans.factory.parsing,org.springframework.core.io.support,org.w3c.dom,org.springframework.core.type.filter,org.springframework.core.type.classreading,javax.xml.ws,org.springframework.stereotype"/>
      <p n="version" t="version" v="2.5.0"/>
    </capability>
    <capability name="package">
      <p n="package" v="org.springframework.jmx.export"/>
      <p n="uses:" v="org.springframework.aop.support,org.springframework.aop.target,org.apache.commons.logging,org.springframework.jmx.export.assembler,org.springframework.aop,org.springframework.util,org.springframework.jmx,org.springframework.beans.factory.config,javax.management,org.springframework.core,org.springframework.jmx.support,org.springframework.jmx.export.naming,org.springframework.aop.framework,javax.management.modelmbean,org.springframework.jmx.export.notification,org.springframework.beans.factory"/>
      <p n="version" t="version" v="2.5.0"/>
    </capability>
    <capability name="package">
      <p n="package" v="org.springframework.jndi"/>
      <p n="uses:" v="org.springframework.core,javax.naming,org.apache.commons.logging,org.springframework.aop,org.springframework.util,org.springframework.aop.framework,org.springframework.beans.propertyeditors,org.springframework.beans.factory"/>
      <p n="version" t="version" v="2.5.0"/>
    </capability>
    <capability name="package">
      <p n="package" v="org.springframework.remoting.support"/>
      <p n="uses:" v="org.apache.commons.logging,org.aopalliance.intercept,org.springframework.util,org.springframework.aop.framework,org.aopalliance.aop,org.springframework.beans.factory"/>
      <p n="version" t="version" v="2.5.0"/>
    </capability>
    <capability name="package">
      <p n="package" v="org.springframework.scheduling.backportconcurrent"/>
      <p n="uses:" v="edu.emory.mathcs.backport.java.util.concurrent,org.apache.commons.logging,org.springframework.scheduling,org.springframework.util,org.springframework.scheduling.support,org.springframework.core.task,org.springframework.beans.factory"/>
      <p n="version" t="version" v="2.5.0"/>
    </capability>
    <capability name="package">
      <p n="package" v="org.springframework.instrument.classloading"/>
      <p n="uses:" v="org.springframework.core,org.apache.commons.logging,org.springframework.util,org.springframework.instrument"/>
      <p n="version" t="version" v="2.5.0"/>
    </capability>
    <capability name="package">
      <p n="package" v="org.springframework.scripting.jruby"/>
      <p n="uses:" v="org.springframework.aop.support,org.jruby,org.jruby.runtime,org.jruby.exceptions,org.springframework.util,org.jruby.javasupport,org.jruby.ast,org.springframework.core,org.jruby.runtime.builtin,org.springframework.scripting,org.springframework.beans.factory"/>
      <p n="version" t="version" v="2.5.0"/>
    </capability>
    <capability name="package">
      <p n="package" v="org.springframework.validation"/>
      <p n="uses:" v="org.apache.commons.logging,org.springframework.util,org.springframework.context.support,org.springframework.beans"/>
      <p n="version" t="version" v="2.5.0"/>
    </capability>
    <capability name="package">
      <p n="package" v="org.springframework.jndi.support"/>
      <p n="uses:" v="org.springframework.jndi,javax.naming,org.springframework.beans,org.springframework.beans.factory"/>
      <p n="version" t="version" v="2.5.0"/>
    </capability>
    <capability name="package">
      <p n="package" v="org.springframework.remoting.rmi"/>
      <p n="uses:" v="org.springframework.aop.support,javax.naming,org.apache.commons.logging,org.aopalliance.intercept,org.springframework.util,org.omg.CORBA,org.omg.CORBA.portable,org.springframework.jndi,org.springframework.remoting,org.springframework.remoting.support,org.omg.CORBA_2_3.portable,org.springframework.aop.framework,javax.rmi,javax.rmi.CORBA,org.springframework.beans.factory"/>
      <p n="version" t="version" v="2.5.0"/>
    </capability>
    <capability name="package">
      <p n="package" v="org.springframework.jmx.export.notification"/>
      <p n="uses:" v="org.springframework.util,org.springframework.jmx,javax.management,javax.management.modelmbean"/>
      <p n="version" t="version" v="2.5.0"/>
    </capability>
    <capability name="package">
      <p n="package" v="org.springframework.remoting.soap"/>
      <p n="uses:" v="org.springframework.remoting,javax.xml.namespace"/>
      <p n="version" t="version" v="2.5.0"/>
    </capability>
    <capability name="package">
      <p n="package" v="org.springframework.ejb.access"/>
      <p n="uses:" v="javax.naming,javax.ejb,org.apache.commons.logging,org.aopalliance.intercept,org.springframework.util,org.springframework.jndi,org.springframework.core,org.springframework.remoting,org.springframework.aop.framework,javax.rmi,org.springframework.remoting.rmi,org.springframework.beans.factory"/>
      <p n="version" t="version" v="2.5.0"/>
    </capability>
    <capability name="package">
      <p n="package" v="org.springframework.ejb.support"/>
      <p n="uses:" v="org.apache.commons.logging,javax.ejb,javax.jms,org.springframework.context.access,org.springframework.beans.factory.access,org.springframework.util,org.springframework.beans,org.springframework.beans.factory"/>
      <p n="version" t="version" v="2.5.0"/>
    </capability>
    <capability name="package">
      <p n="package" v="org.springframework.scripting.support"/>
      <p n="uses:" v="org.springframework.aop.support,org.apache.commons.logging,org.springframework.aop,net.sf.cglib.proxy,net.sf.cglib.asm,org.springframework.util,org.springframework.aop.target.dynamic,org.springframework.beans,org.springframework.core.io,org.springframework.context,org.springframework.beans.factory.config,org.aopalliance.aop,org.springframework.beans.factory.support,org.springframework.core,org.springframework.aop.framework,net.sf.cglib.core,org.springframework.scripting,org.springframework.beans.factory"/>
      <p n="version" t="version" v="2.5.0"/>
    </capability>
    <capability name="package">
      <p n="package" v="org.springframework.jmx.export.metadata"/>
      <p n="uses:" v="org.springframework.metadata,org.springframework.util,org.springframework.jmx,org.springframework.beans,javax.management.modelmbean,org.springframework.beans.factory"/>
      <p n="version" t="version" v="2.5.0"/>
    </capability>
    <capability name="package">
      <p n="package" v="org.springframework.context.weaving"/>
      <p n="uses:" v="org.aspectj.weaver.loadtime,org.springframework.instrument.classloading.weblogic,org.apache.commons.logging,org.springframework.util,org.springframework.instrument.classloading.glassfish,org.springframework.beans,org.springframework.instrument,org.springframework.beans.factory.config,org.springframework.core,org.springframework.instrument.classloading,org.springframework.instrument.classloading.oc4j,org.springframework.beans.factory"/>
      <p n="version" t="version" v="2.5.0"/>
    </capability>
    <capability name="package">
      <p n="package" v="org.springframework.ui.context"/>
      <p n="uses:" v="org.springframework.context"/>
      <p n="version" t="version" v="2.5.0"/>
    </capability>
    <capability name="package">
      <p n="package" v="org.springframework.context.i18n"/>
      <p n="uses:" v="org.springframework.util"/>
      <p n="version" t="version" v="2.5.0"/>
    </capability>
    <capability name="package">
      <p n="package" v="org.springframework.jmx.export.assembler"/>
      <p n="uses:" v="org.springframework.aop.support,org.springframework.jmx.export.metadata,org.springframework.util,org.springframework.beans,javax.management,org.springframework.core,org.springframework.jmx.support,org.springframework.aop.framework,javax.management.modelmbean,org.springframework.beans.factory"/>
      <p n="version" t="version" v="2.5.0"/>
    </capability>
    <capability name="package">
      <p n="package" v="org.springframework.instrument"/>
      <p n="version" t="version" v="2.5.0"/>
    </capability>
    <capability name="package">
      <p n="package" v="org.springframework.context"/>
      <p n="uses:" v="org.springframework.core.io,org.springframework.beans,org.springframework.core.io.support,org.springframework.beans.factory.config,org.springframework.beans.factory"/>
      <p n="version" t="version" v="2.5.0"/>
    </capability>
    <capability name="package">
      <p n="package" v="org.springframework.ejb.config"/>
      <p n="uses:" v="org.springframework.jndi,org.springframework.beans.factory.support,org.springframework.util,org.springframework.beans.factory.xml,org.springframework.beans.factory.config,org.springframework.util.xml,org.w3c.dom"/>
      <p n="version" t="version" v="2.5.0"/>
    </capability>
    <capability name="package">
      <p n="package" v="org.springframework.context.event"/>
      <p n="uses:" v="org.springframework.core,org.aopalliance.intercept,org.springframework.beans,org.springframework.context,org.springframework.core.task,org.springframework.beans.factory"/>
      <p n="version" t="version" v="2.5.0"/>
    </capability>
    <capability name="package">
      <p n="package" v="org.springframework.remoting"/>
      <p n="uses:" v="org.springframework.core"/>
      <p n="version" t="version" v="2.5.0"/>
    </capability>
    <capability name="package">
      <p n="package" v="org.springframework.context.config"/>
      <p n="uses:" v="org.springframework.util,org.springframework.core.io,org.springframework.beans,org.springframework.beans.factory.xml,org.springframework.beans.factory.config,org.springframework.beans.factory.parsing,org.w3c.dom,org.springframework.core,org.springframework.beans.factory.support,org.springframework.jndi,org.springframework.jmx.support"/>
      <p n="version" t="version" v="2.5.0"/>
    </capability>
    <capability name="package">
      <p n="package" v="org.springframework.ui"/>
      <p n="uses:" v="org.springframework.core,org.springframework.util"/>
      <p n="version" t="version" v="2.5.0"/>
    </capability>
    <capability name="package">
      <p n="package" v="org.springframework.ui.context.support"/>
      <p n="uses:" v="org.apache.commons.logging,org.springframework.ui.context,org.springframework.util,org.springframework.context.support,org.springframework.context"/>
      <p n="version" t="version" v="2.5.0"/>
    </capability>
    <capability name="package">
      <p n="package" v="org.springframework.jmx.export.annotation"/>
      <p n="uses:" v="org.springframework.beans.annotation,org.springframework.jmx.export.metadata,org.springframework.jmx.export.assembler,org.springframework.util,org.springframework.jmx.export.naming,org.springframework.beans,org.springframework.core.annotation,org.springframework.jmx.export"/>
      <p n="version" t="version" v="2.5.0"/>
    </capability>
    <capability name="package">
      <p n="package" v="org.springframework.jmx.support"/>
      <p n="uses:" v="javax.naming,org.springframework.aop.target,org.apache.commons.logging,org.springframework.aop,org.springframework.util,org.springframework.jmx,javax.management,org.springframework.jndi,org.springframework.core,javax.management.remote,org.springframework.aop.framework,org.springframework.beans.factory"/>
      <p n="version" t="version" v="2.5.0"/>
    </capability>
    <capability name="package">
      <p n="package" v="org.springframework.scheduling"/>
      <p n="uses:" v="org.springframework.core,org.springframework.core.task"/>
      <p n="version" t="version" v="2.5.0"/>
    </capability>
    <capability name="package">
      <p n="package" v="org.springframework.scripting.groovy"/>
      <p n="uses:" v="groovy.lang,org.springframework.util,org.springframework.beans,org.springframework.beans.factory.config,org.springframework.scripting,org.codehaus.groovy.control,org.springframework.beans.factory"/>
      <p n="version" t="version" v="2.5.0"/>
    </capability>
    <capability name="package">
      <p n="package" v="org.springframework.scripting.config"/>
      <p n="uses:" v="org.springframework.beans.factory.support,org.springframework.scripting.support,org.springframework.util,org.springframework.beans,org.springframework.beans.factory.xml,org.springframework.beans.factory.config,org.springframework.util.xml,org.w3c.dom"/>
      <p n="version" t="version" v="2.5.0"/>
    </capability>
    <capability name="package">
      <p n="package" v="org.springframework.instrument.classloading.oc4j"/>
      <p n="uses:" v="org.springframework.instrument.classloading,org.springframework.util,oracle.classloader.util"/>
      <p n="version" t="version" v="2.5.0"/>
    </capability>
    <capability name="package">
      <p n="package" v="org.springframework.jmx.export.naming"/>
      <p n="uses:" v="org.springframework.aop.support,org.apache.commons.logging,org.springframework.jmx.export.metadata,org.springframework.util,org.springframework.core.io,org.springframework.core.io.support,javax.management,org.springframework.jmx.support,org.springframework.beans.factory"/>
      <p n="version" t="version" v="2.5.0"/>
    </capability>
    <capability name="package">
      <p n="package" v="org.springframework.scripting"/>
      <p n="uses:" v="org.springframework.core"/>
      <p n="version" t="version" v="2.5.0"/>
    </capability>
    <capability name="package">
      <p n="package" v="org.springframework.scheduling.timer"/>
      <p n="uses:" v="org.springframework.core,org.apache.commons.logging,org.springframework.scheduling,org.springframework.util,org.springframework.scheduling.support,org.springframework.beans.factory"/>
      <p n="version" t="version" v="2.5.0"/>
    </capability>
    <capability name="package">
      <p n="package" v="org.springframework.stereotype"/>
      <p n="version" t="version" v="2.5.0"/>
    </capability>
    <require extend="false" filter="(&amp;(package=bsh)(version&gt;=0.0.0))" multiple="false" name="package" optional="true">
      Import package bsh
    </require>
    <require extend="false" filter="(&amp;(package=com.ibm.websphere.management)(version&gt;=0.0.0))" multiple="false" name="package" optional="true">
      Import package com.ibm.websphere.management
    </require>
    <require extend="false" filter="(&amp;(package=com.sun.enterprise.loader)(version&gt;=0.0.0))" multiple="false" name="package" optional="true">
      Import package com.sun.enterprise.loader
    </require>
    <require extend="false" filter="(&amp;(package=edu.emory.mathcs.backport.java.util.concurrent)(version&gt;=0.0.0))" multiple="false" name="package" optional="true">
      Import package edu.emory.mathcs.backport.java.util.concurrent
    </require>
    <require extend="false" filter="(&amp;(package=groovy.lang)(version&gt;=0.0.0))" multiple="false" name="package" optional="true">
      Import package groovy.lang
    </require>
    <require extend="false" filter="(&amp;(package=javax.annotation)(version&gt;=0.0.0))" multiple="false" name="package" optional="true">
      Import package javax.annotation
    </require>
    <require extend="false" filter="(&amp;(package=javax.ejb)(version&gt;=0.0.0))" multiple="false" name="package" optional="true">
      Import package javax.ejb
    </require>
    <require extend="false" filter="(&amp;(package=javax.jms)(version&gt;=0.0.0))" multiple="false" name="package" optional="true">
      Import package javax.jms
    </require>
    <require extend="false" filter="(&amp;(package=javax.management)(version&gt;=0.0.0))" multiple="false" name="package" optional="true">
      Import package javax.management
    </require>
    <require extend="false" filter="(&amp;(package=javax.management.modelmbean)(version&gt;=0.0.0))" multiple="false" name="package" optional="true">
      Import package javax.management.modelmbean
    </require>
    <require extend="false" filter="(&amp;(package=javax.management.openmbean)(version&gt;=0.0.0))" multiple="false" name="package" optional="true">
      Import package javax.management.openmbean
    </require>
    <require extend="false" filter="(&amp;(package=javax.management.remote)(version&gt;=0.0.0))" multiple="false" name="package" optional="true">
      Import package javax.management.remote
    </require>
    <require extend="false" filter="(&amp;(package=javax.naming)(version&gt;=0.0.0))" multiple="false" name="package" optional="true">
      Import package javax.naming
    </require>
    <require extend="false" filter="(&amp;(package=javax.persistence.spi)(version&gt;=0.0.0))" multiple="false" name="package" optional="true">
      Import package javax.persistence.spi
    </require>
    <require extend="false" filter="(&amp;(package=javax.rmi)(version&gt;=0.0.0))" multiple="false" name="package" optional="true">
      Import package javax.rmi
    </require>
    <require extend="false" filter="(&amp;(package=javax.rmi.CORBA)(version&gt;=0.0.0))" multiple="false" name="package" optional="true">
      Import package javax.rmi.CORBA
    </require>
    <require extend="false" filter="(&amp;(package=javax.xml.namespace)(version&gt;=0.0.0))" multiple="false" name="package" optional="true">
      Import package javax.xml.namespace
    </require>
    <require extend="false" filter="(&amp;(package=javax.xml.ws)(version&gt;=0.0.0))" multiple="false" name="package" optional="true">
      Import package javax.xml.ws
    </require>
    <require extend="false" filter="(&amp;(package=net.sf.cglib.asm)(version&gt;=0.0.0))" multiple="false" name="package" optional="true">
      Import package net.sf.cglib.asm
    </require>
    <require extend="false" filter="(&amp;(package=net.sf.cglib.core)(version&gt;=0.0.0))" multiple="false" name="package" optional="true">
      Import package net.sf.cglib.core
    </require>
    <require extend="false" filter="(&amp;(package=net.sf.cglib.proxy)(version&gt;=0.0.0))" multiple="false" name="package" optional="true">
      Import package net.sf.cglib.proxy
    </require>
    <require extend="false" filter="(&amp;(package=oracle.classloader.util)(version&gt;=0.0.0))" multiple="false" name="package" optional="true">
      Import package oracle.classloader.util
    </require>
    <require extend="false" filter="(&amp;(package=org.aopalliance.aop)(version&gt;=0.0.0))" multiple="false" name="package" optional="true">
      Import package org.aopalliance.aop
    </require>
    <require extend="false" filter="(&amp;(package=org.aopalliance.intercept)(version&gt;=0.0.0))" multiple="false" name="package" optional="true">
      Import package org.aopalliance.intercept
    </require>
    <require extend="false" filter="(&amp;(package=org.apache.commons.logging)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">
      Import package org.apache.commons.logging
    </require>
    <require extend="false" filter="(&amp;(package=org.aspectj.weaver.loadtime)(version&gt;=0.0.0))" multiple="false" name="package" optional="true">
      Import package org.aspectj.weaver.loadtime
    </require>
    <require extend="false" filter="(&amp;(package=org.codehaus.groovy.control)(version&gt;=0.0.0))" multiple="false" name="package" optional="true">
      Import package org.codehaus.groovy.control
    </require>
    <require extend="false" filter="(&amp;(package=org.jruby)(version&gt;=0.0.0))" multiple="false" name="package" optional="true">
      Import package org.jruby
    </require>
    <require extend="false" filter="(&amp;(package=org.jruby.ast)(version&gt;=0.0.0))" multiple="false" name="package" optional="true">
      Import package org.jruby.ast
    </require>
    <require extend="false" filter="(&amp;(package=org.jruby.exceptions)(version&gt;=0.0.0))" multiple="false" name="package" optional="true">
      Import package org.jruby.exceptions
    </require>
    <require extend="false" filter="(&amp;(package=org.jruby.javasupport)(version&gt;=0.0.0))" multiple="false" name="package" optional="true">
      Import package org.jruby.javasupport
    </require>
    <require extend="false" filter="(&amp;(package=org.jruby.runtime)(version&gt;=0.0.0))" multiple="false" name="package" optional="true">
      Import package org.jruby.runtime
    </require>
    <require extend="false" filter="(&amp;(package=org.jruby.runtime.builtin)(version&gt;=0.0.0))" multiple="false" name="package" optional="true">
      Import package org.jruby.runtime.builtin
    </require>
    <require extend="false" filter="(&amp;(package=org.omg.CORBA)(version&gt;=0.0.0))" multiple="false" name="package" optional="true">
      Import package org.omg.CORBA
    </require>
    <require extend="false" filter="(&amp;(package=org.omg.CORBA.portable)(version&gt;=0.0.0))" multiple="false" name="package" optional="true">
      Import package org.omg.CORBA.portable
    </require>
    <require extend="false" filter="(&amp;(package=org.omg.CORBA_2_3.portable)(version&gt;=0.0.0))" multiple="false" name="package" optional="true">
      Import package org.omg.CORBA_2_3.portable
    </require>
    <require extend="false" filter="(&amp;(package=org.springframework.aop)(version&gt;=0.0.0))" multiple="false" name="package" optional="true">
      Import package org.springframework.aop
    </require>
    <require extend="false" filter="(&amp;(package=org.springframework.aop.framework)(version&gt;=0.0.0))" multiple="false" name="package" optional="true">
      Import package org.springframework.aop.framework
    </require>
    <require extend="false" filter="(&amp;(package=org.springframework.aop.scope)(version&gt;=0.0.0))" multiple="false" name="package" optional="true">
      Import package org.springframework.aop.scope
    </require>
    <require extend="false" filter="(&amp;(package=org.springframework.aop.support)(version&gt;=0.0.0))" multiple="false" name="package" optional="true">
      Import package org.springframework.aop.support
    </require>
    <require extend="false" filter="(&amp;(package=org.springframework.aop.target)(version&gt;=0.0.0))" multiple="false" name="package" optional="true">
      Import package org.springframework.aop.target
    </require>
    <require extend="false" filter="(&amp;(package=org.springframework.aop.target.dynamic)(version&gt;=0.0.0))" multiple="false" name="package" optional="true">
      Import package org.springframework.aop.target.dynamic
    </require>
    <require extend="false" filter="(&amp;(package=org.springframework.beans)(version&gt;=2.5.0))" multiple="false" name="package" optional="false">
      Import package org.springframework.beans ;version=2.5.0
    </require>
    <require extend="false" filter="(&amp;(package=org.springframework.beans.annotation)(version&gt;=2.5.0))" multiple="false" name="package" optional="false">
      Import package org.springframework.beans.annotation ;version=2.5.0
    </require>
    <require extend="false" filter="(&amp;(package=org.springframework.beans.factory)(version&gt;=2.5.0))" multiple="false" name="package" optional="false">
      Import package org.springframework.beans.factory ;version=2.5.0
    </require>
    <require extend="false" filter="(&amp;(package=org.springframework.beans.factory.access)(version&gt;=2.5.0))" multiple="false" name="package" optional="false">
      Import package org.springframework.beans.factory.access ;version=2.5.0
    </require>
    <require extend="false" filter="(&amp;(package=org.springframework.beans.factory.annotation)(version&gt;=2.5.0))" multiple="false" name="package" optional="false">
      Import package org.springframework.beans.factory.annotation
       ;version=2.5.0
    </require>
    <require extend="false" filter="(&amp;(package=org.springframework.beans.factory.config)(version&gt;=2.5.0))" multiple="false" name="package" optional="false">
      Import package org.springframework.beans.factory.config ;version=2.5.0
    </require>
    <require extend="false" filter="(&amp;(package=org.springframework.beans.factory.parsing)(version&gt;=2.5.0))" multiple="false" name="package" optional="false">
      Import package org.springframework.beans.factory.parsing ;version=2.5.0
    </require>
    <require extend="false" filter="(&amp;(package=org.springframework.beans.factory.support)(version&gt;=2.5.0))" multiple="false" name="package" optional="false">
      Import package org.springframework.beans.factory.support ;version=2.5.0
    </require>
    <require extend="false" filter="(&amp;(package=org.springframework.beans.factory.xml)(version&gt;=2.5.0))" multiple="false" name="package" optional="false">
      Import package org.springframework.beans.factory.xml ;version=2.5.0
    </require>
    <require extend="false" filter="(&amp;(package=org.springframework.beans.propertyeditors)(version&gt;=2.5.0))" multiple="false" name="package" optional="false">
      Import package org.springframework.beans.propertyeditors ;version=2.5.0
    </require>
    <require extend="false" filter="(&amp;(package=org.springframework.beans.support)(version&gt;=2.5.0))" multiple="false" name="package" optional="false">
      Import package org.springframework.beans.support ;version=2.5.0
    </require>
    <require extend="false" filter="(&amp;(package=org.springframework.context)(version&gt;=2.5.0))" multiple="false" name="package" optional="true">
      Import package org.springframework.context ;version=2.5.0
    </require>
    <require extend="false" filter="(&amp;(package=org.springframework.context.access)(version&gt;=2.5.0))" multiple="false" name="package" optional="true">
      Import package org.springframework.context.access ;version=2.5.0
    </require>
    <require extend="false" filter="(&amp;(package=org.springframework.context.annotation)(version&gt;=2.5.0))" multiple="false" name="package" optional="true">
      Import package org.springframework.context.annotation ;version=2.5.0
    </require>
    <require extend="false" filter="(&amp;(package=org.springframework.context.config)(version&gt;=2.5.0))" multiple="false" name="package" optional="true">
      Import package org.springframework.context.config ;version=2.5.0
    </require>
    <require extend="false" filter="(&amp;(package=org.springframework.context.event)(version&gt;=2.5.0))" multiple="false" name="package" optional="true">
      Import package org.springframework.context.event ;version=2.5.0
    </require>
    <require extend="false" filter="(&amp;(package=org.springframework.context.i18n)(version&gt;=2.5.0))" multiple="false" name="package" optional="true">
      Import package org.springframework.context.i18n ;version=2.5.0
    </require>
    <require extend="false" filter="(&amp;(package=org.springframework.context.support)(version&gt;=2.5.0))" multiple="false" name="package" optional="true">
      Import package org.springframework.context.support ;version=2.5.0
    </require>
    <require extend="false" filter="(&amp;(package=org.springframework.context.weaving)(version&gt;=2.5.0))" multiple="false" name="package" optional="true">
      Import package org.springframework.context.weaving ;version=2.5.0
    </require>
    <require extend="false" filter="(&amp;(package=org.springframework.core)(version&gt;=0.0.0))" multiple="false" name="package" optional="true">
      Import package org.springframework.core
    </require>
    <require extend="false" filter="(&amp;(package=org.springframework.core.annotation)(version&gt;=0.0.0))" multiple="false" name="package" optional="true">
      Import package org.springframework.core.annotation
    </require>
    <require extend="false" filter="(&amp;(package=org.springframework.core.io)(version&gt;=0.0.0))" multiple="false" name="package" optional="true">
      Import package org.springframework.core.io
    </require>
    <require extend="false" filter="(&amp;(package=org.springframework.core.io.support)(version&gt;=0.0.0))" multiple="false" name="package" optional="true">
      Import package org.springframework.core.io.support
    </require>
    <require extend="false" filter="(&amp;(package=org.springframework.core.task)(version&gt;=0.0.0))" multiple="false" name="package" optional="true">
      Import package org.springframework.core.task
    </require>
    <require extend="false" filter="(&amp;(package=org.springframework.core.type)(version&gt;=0.0.0))" multiple="false" name="package" optional="true">
      Import package org.springframework.core.type
    </require>
    <require extend="false" filter="(&amp;(package=org.springframework.core.type.classreading)(version&gt;=0.0.0))" multiple="false" name="package" optional="true">
      Import package org.springframework.core.type.classreading
    </require>
    <require extend="false" filter="(&amp;(package=org.springframework.core.type.filter)(version&gt;=0.0.0))" multiple="false" name="package" optional="true">
      Import package org.springframework.core.type.filter
    </require>
    <require extend="false" filter="(&amp;(package=org.springframework.ejb.access)(version&gt;=2.5.0))" multiple="false" name="package" optional="true">
      Import package org.springframework.ejb.access ;version=2.5.0
    </require>
    <require extend="false" filter="(&amp;(package=org.springframework.ejb.config)(version&gt;=2.5.0))" multiple="false" name="package" optional="true">
      Import package org.springframework.ejb.config ;version=2.5.0
    </require>
    <require extend="false" filter="(&amp;(package=org.springframework.ejb.support)(version&gt;=2.5.0))" multiple="false" name="package" optional="true">
      Import package org.springframework.ejb.support ;version=2.5.0
    </require>
    <require extend="false" filter="(&amp;(package=org.springframework.instrument)(version&gt;=2.5.0))" multiple="false" name="package" optional="true">
      Import package org.springframework.instrument ;version=2.5.0
    </require>
    <require extend="false" filter="(&amp;(package=org.springframework.instrument.classloading)(version&gt;=2.5.0))" multiple="false" name="package" optional="true">
      Import package org.springframework.instrument.classloading
       ;version=2.5.0
    </require>
    <require extend="false" filter="(&amp;(package=org.springframework.instrument.classloading.glassfish)(version&gt;=2.5.0))" multiple="false" name="package" optional="true">
      Import package org.springframework.instrument.classloading.glassfish
       ;version=2.5.0
    </require>
    <require extend="false" filter="(&amp;(package=org.springframework.instrument.classloading.oc4j)(version&gt;=2.5.0))" multiple="false" name="package" optional="true">
      Import package org.springframework.instrument.classloading.oc4j
       ;version=2.5.0
    </require>
    <require extend="false" filter="(&amp;(package=org.springframework.instrument.classloading.weblogic)(version&gt;=2.5.0))" multiple="false" name="package" optional="true">
      Import package org.springframework.instrument.classloading.weblogic
       ;version=2.5.0
    </require>
    <require extend="false" filter="(&amp;(package=org.springframework.jmx)(version&gt;=2.5.0))" multiple="false" name="package" optional="true">
      Import package org.springframework.jmx ;version=2.5.0
    </require>
    <require extend="false" filter="(&amp;(package=org.springframework.jmx.access)(version&gt;=2.5.0))" multiple="false" name="package" optional="true">
      Import package org.springframework.jmx.access ;version=2.5.0
    </require>
    <require extend="false" filter="(&amp;(package=org.springframework.jmx.export)(version&gt;=2.5.0))" multiple="false" name="package" optional="true">
      Import package org.springframework.jmx.export ;version=2.5.0
    </require>
    <require extend="false" filter="(&amp;(package=org.springframework.jmx.export.annotation)(version&gt;=2.5.0))" multiple="false" name="package" optional="true">
      Import package org.springframework.jmx.export.annotation ;version=2.5.0
    </require>
    <require extend="false" filter="(&amp;(package=org.springframework.jmx.export.assembler)(version&gt;=2.5.0))" multiple="false" name="package" optional="true">
      Import package org.springframework.jmx.export.assembler ;version=2.5.0
    </require>
    <require extend="false" filter="(&amp;(package=org.springframework.jmx.export.metadata)(version&gt;=2.5.0))" multiple="false" name="package" optional="true">
      Import package org.springframework.jmx.export.metadata ;version=2.5.0
    </require>
    <require extend="false" filter="(&amp;(package=org.springframework.jmx.export.naming)(version&gt;=2.5.0))" multiple="false" name="package" optional="true">
      Import package org.springframework.jmx.export.naming ;version=2.5.0
    </require>
    <require extend="false" filter="(&amp;(package=org.springframework.jmx.export.notification)(version&gt;=2.5.0))" multiple="false" name="package" optional="true">
      Import package org.springframework.jmx.export.notification
       ;version=2.5.0
    </require>
    <require extend="false" filter="(&amp;(package=org.springframework.jmx.support)(version&gt;=2.5.0))" multiple="false" name="package" optional="true">
      Import package org.springframework.jmx.support ;version=2.5.0
    </require>
    <require extend="false" filter="(&amp;(package=org.springframework.jndi)(version&gt;=2.5.0))" multiple="false" name="package" optional="true">
      Import package org.springframework.jndi ;version=2.5.0
    </require>
    <require extend="false" filter="(&amp;(package=org.springframework.jndi.support)(version&gt;=2.5.0))" multiple="false" name="package" optional="true">
      Import package org.springframework.jndi.support ;version=2.5.0
    </require>
    <require extend="false" filter="(&amp;(package=org.springframework.metadata)(version&gt;=0.0.0))" multiple="false" name="package" optional="true">
      Import package org.springframework.metadata
    </require>
    <require extend="false" filter="(&amp;(package=org.springframework.remoting)(version&gt;=2.5.0))" multiple="false" name="package" optional="true">
      Import package org.springframework.remoting ;version=2.5.0
    </require>
    <require extend="false" filter="(&amp;(package=org.springframework.remoting.rmi)(version&gt;=2.5.0))" multiple="false" name="package" optional="true">
      Import package org.springframework.remoting.rmi ;version=2.5.0
    </require>
    <require extend="false" filter="(&amp;(package=org.springframework.remoting.soap)(version&gt;=2.5.0))" multiple="false" name="package" optional="true">
      Import package org.springframework.remoting.soap ;version=2.5.0
    </require>
    <require extend="false" filter="(&amp;(package=org.springframework.remoting.support)(version&gt;=2.5.0))" multiple="false" name="package" optional="true">
      Import package org.springframework.remoting.support ;version=2.5.0
    </require>
    <require extend="false" filter="(&amp;(package=org.springframework.scheduling)(version&gt;=2.5.0))" multiple="false" name="package" optional="true">
      Import package org.springframework.scheduling ;version=2.5.0
    </require>
    <require extend="false" filter="(&amp;(package=org.springframework.scheduling.backportconcurrent)(version&gt;=2.5.0))" multiple="false" name="package" optional="true">
      Import package org.springframework.scheduling.backportconcurrent
       ;version=2.5.0
    </require>
    <require extend="false" filter="(&amp;(package=org.springframework.scheduling.concurrent)(version&gt;=2.5.0))" multiple="false" name="package" optional="true">
      Import package org.springframework.scheduling.concurrent ;version=2.5.0
    </require>
    <require extend="false" filter="(&amp;(package=org.springframework.scheduling.support)(version&gt;=2.5.0))" multiple="false" name="package" optional="true">
      Import package org.springframework.scheduling.support ;version=2.5.0
    </require>
    <require extend="false" filter="(&amp;(package=org.springframework.scheduling.timer)(version&gt;=2.5.0))" multiple="false" name="package" optional="true">
      Import package org.springframework.scheduling.timer ;version=2.5.0
    </require>
    <require extend="false" filter="(&amp;(package=org.springframework.scripting)(version&gt;=2.5.0))" multiple="false" name="package" optional="true">
      Import package org.springframework.scripting ;version=2.5.0
    </require>
    <require extend="false" filter="(&amp;(package=org.springframework.scripting.bsh)(version&gt;=2.5.0))" multiple="false" name="package" optional="true">
      Import package org.springframework.scripting.bsh ;version=2.5.0
    </require>
    <require extend="false" filter="(&amp;(package=org.springframework.scripting.config)(version&gt;=2.5.0))" multiple="false" name="package" optional="true">
      Import package org.springframework.scripting.config ;version=2.5.0
    </require>
    <require extend="false" filter="(&amp;(package=org.springframework.scripting.groovy)(version&gt;=2.5.0))" multiple="false" name="package" optional="true">
      Import package org.springframework.scripting.groovy ;version=2.5.0
    </require>
    <require extend="false" filter="(&amp;(package=org.springframework.scripting.jruby)(version&gt;=2.5.0))" multiple="false" name="package" optional="true">
      Import package org.springframework.scripting.jruby ;version=2.5.0
    </require>
    <require extend="false" filter="(&amp;(package=org.springframework.scripting.support)(version&gt;=2.5.0))" multiple="false" name="package" optional="true">
      Import package org.springframework.scripting.support ;version=2.5.0
    </require>
    <require extend="false" filter="(&amp;(package=org.springframework.stereotype)(version&gt;=2.5.0))" multiple="false" name="package" optional="true">
      Import package org.springframework.stereotype ;version=2.5.0
    </require>
    <require extend="false" filter="(&amp;(package=org.springframework.ui)(version&gt;=2.5.0))" multiple="false" name="package" optional="true">
      Import package org.springframework.ui ;version=2.5.0
    </require>
    <require extend="false" filter="(&amp;(package=org.springframework.ui.context)(version&gt;=2.5.0))" multiple="false" name="package" optional="true">
      Import package org.springframework.ui.context ;version=2.5.0
    </require>
    <require extend="false" filter="(&amp;(package=org.springframework.ui.context.support)(version&gt;=2.5.0))" multiple="false" name="package" optional="true">
      Import package org.springframework.ui.context.support ;version=2.5.0
    </require>
    <require extend="false" filter="(&amp;(package=org.springframework.util)(version&gt;=0.0.0))" multiple="false" name="package" optional="true">
      Import package org.springframework.util
    </require>
    <require extend="false" filter="(&amp;(package=org.springframework.util.xml)(version&gt;=0.0.0))" multiple="false" name="package" optional="true">
      Import package org.springframework.util.xml
    </require>
    <require extend="false" filter="(&amp;(package=org.springframework.validation)(version&gt;=2.5.0))" multiple="false" name="package" optional="true">
      Import package org.springframework.validation ;version=2.5.0
    </require>
    <require extend="false" filter="(&amp;(package=org.w3c.dom)(version&gt;=0.0.0))" multiple="false" name="package" optional="true">
      Import package org.w3c.dom
    </require>
    <require extend="false" filter="(&amp;(package=org.xml.sax)(version&gt;=0.0.0))" multiple="false" name="package" optional="true">
      Import package org.xml.sax
    </require>
  </resource>
  <resource id="5" presentationname="spring-core" symbolicname="org.springframework.bundle.spring.core" uri="http://repo1.maven.org/maven2/org/springframework/spring-core/2.5/spring-core-2.5.jar" version="2.5.0">
    <description>
      Spring Framework
    </description>
    <size>
      270968
    </size>
    <capability name="bundle">
      <p n="manifestversion" v="2"/>
      <p n="presentationname" v="spring-core"/>
      <p n="symbolicname" v="org.springframework.bundle.spring.core"/>
      <p n="version" t="version" v="2.5.0"/>
    </capability>
    <capability name="package">
      <p n="package" v="org.springframework.asm"/>
      <p n="version" t="version" v="2.5.0"/>
    </capability>
    <capability name="package">
      <p n="package" v="org.springframework.util.comparator"/>
      <p n="uses:" v="org.springframework.util"/>
      <p n="version" t="version" v="2.5.0"/>
    </capability>
    <capability name="package">
      <p n="package" v="org.springframework.metadata.commons"/>
      <p n="uses:" v="org.springframework.metadata,org.apache.commons.attributes"/>
      <p n="version" t="version" v="2.5.0"/>
    </capability>
    <capability name="package">
      <p n="package" v="org.springframework.asm.signature"/>
      <p n="version" t="version" v="2.5.0"/>
    </capability>
    <capability name="package">
      <p n="package" v="org.springframework.util"/>
      <p n="uses:" v="org.apache.commons.logging,org.apache.log4j,org.apache.log4j.xml"/>
      <p n="version" t="version" v="2.5.0"/>
    </capability>
    <capability name="package">
      <p n="package" v="org.springframework.core.io"/>
      <p n="uses:" v="org.springframework.core,org.springframework.util"/>
      <p n="version" t="version" v="2.5.0"/>
    </capability>
    <capability name="package">
      <p n="package" v="org.springframework.core.io.support"/>
      <p n="uses:" v="org.apache.commons.logging,org.springframework.util,org.springframework.core.io"/>
      <p n="version" t="version" v="2.5.0"/>
    </capability>
    <capability name="package">
      <p n="package" v="org.springframework.core.annotation"/>
      <p n="uses:" v="org.springframework.core,org.springframework.util"/>
      <p n="version" t="version" v="2.5.0"/>
    </capability>
    <capability name="package">
      <p n="package" v="org.springframework.util.xml"/>
      <p n="uses:" v="org.apache.commons.logging,javax.xml.transform,org.springframework.util,org.w3c.dom,org.xml.sax"/>
      <p n="version" t="version" v="2.5.0"/>
    </capability>
    <capability name="package">
      <p n="package" v="org.springframework.core"/>
      <p n="uses:" v="org.springframework.asm,org.apache.commons.logging,org.apache.commons.collections,org.springframework.util,edu.emory.mathcs.backport.java.util.concurrent,org.springframework.asm.commons,org.apache.commons.collections.map"/>
      <p n="version" t="version" v="2.5.0"/>
    </capability>
    <capability name="package">
      <p n="package" v="org.springframework.asm.commons"/>
      <p n="uses:" v="org.springframework.asm"/>
      <p n="version" t="version" v="2.5.0"/>
    </capability>
    <capability name="package">
      <p n="package" v="org.springframework.core.task.support"/>
      <p n="uses:" v="org.springframework.util,org.springframework.core.task"/>
      <p n="version" t="version" v="2.5.0"/>
    </capability>
    <capability name="package">
      <p n="package" v="org.springframework.core.type.filter"/>
      <p n="uses:" v="org.aspectj.weaver,org.aspectj.weaver.patterns,org.springframework.core.type.classreading,org.springframework.util,org.aspectj.bridge,org.aspectj.weaver.bcel,org.springframework.core.type"/>
      <p n="version" t="version" v="2.5.0"/>
    </capability>
    <capability name="package">
      <p n="package" v="org.springframework.metadata"/>
      <p n="version" t="version" v="2.5.0"/>
    </capability>
    <capability name="package">
      <p n="package" v="org.springframework.core.type.classreading"/>
      <p n="uses:" v="org.springframework.asm,org.springframework.asm.commons,org.springframework.util,org.springframework.core.io,org.springframework.core.type"/>
      <p n="version" t="version" v="2.5.0"/>
    </capability>
    <capability name="package">
      <p n="package" v="org.springframework.core.style"/>
      <p n="uses:" v="org.springframework.core,org.springframework.util"/>
      <p n="version" t="version" v="2.5.0"/>
    </capability>
    <capability name="package">
      <p n="package" v="org.springframework.core.enums"/>
      <p n="uses:" v="org.springframework.util.comparator,org.apache.commons.logging,org.springframework.util"/>
      <p n="version" t="version" v="2.5.0"/>
    </capability>
    <capability name="package">
      <p n="package" v="org.springframework.core.task"/>
      <p n="uses:" v="org.springframework.core,org.springframework.util"/>
      <p n="version" t="version" v="2.5.0"/>
    </capability>
    <capability name="package">
      <p n="package" v="org.springframework.core.type"/>
      <p n="uses:" v="org.springframework.core.annotation"/>
      <p n="version" t="version" v="2.5.0"/>
    </capability>
    <require extend="false" filter="(&amp;(package=edu.emory.mathcs.backport.java.util.concurrent)(version&gt;=0.0.0))" multiple="false" name="package" optional="true">
      Import package edu.emory.mathcs.backport.java.util.concurrent
    </require>
    <require extend="false" filter="(&amp;(package=javax.xml.transform)(version&gt;=0.0.0))" multiple="false" name="package" optional="true">
      Import package javax.xml.transform
    </require>
    <require extend="false" filter="(&amp;(package=org.apache.commons.attributes)(version&gt;=0.0.0))" multiple="false" name="package" optional="true">
      Import package org.apache.commons.attributes
    </require>
    <require extend="false" filter="(&amp;(package=org.apache.commons.collections)(version&gt;=0.0.0))" multiple="false" name="package" optional="true">
      Import package org.apache.commons.collections
    </require>
    <require extend="false" filter="(&amp;(package=org.apache.commons.collections.map)(version&gt;=0.0.0))" multiple="false" name="package" optional="true">
      Import package org.apache.commons.collections.map
    </require>
    <require extend="false" filter="(&amp;(package=org.apache.commons.logging)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">
      Import package org.apache.commons.logging
    </require>
    <require extend="false" filter="(&amp;(package=org.apache.log4j)(version&gt;=0.0.0))" multiple="false" name="package" optional="true">
      Import package org.apache.log4j
    </require>
    <require extend="false" filter="(&amp;(package=org.apache.log4j.xml)(version&gt;=0.0.0))" multiple="false" name="package" optional="true">
      Import package org.apache.log4j.xml
    </require>
    <require extend="false" filter="(&amp;(package=org.aspectj.bridge)(version&gt;=0.0.0))" multiple="false" name="package" optional="true">
      Import package org.aspectj.bridge
    </require>
    <require extend="false" filter="(&amp;(package=org.aspectj.weaver)(version&gt;=0.0.0))" multiple="false" name="package" optional="true">
      Import package org.aspectj.weaver
    </require>
    <require extend="false" filter="(&amp;(package=org.aspectj.weaver.bcel)(version&gt;=0.0.0))" multiple="false" name="package" optional="true">
      Import package org.aspectj.weaver.bcel
    </require>
    <require extend="false" filter="(&amp;(package=org.aspectj.weaver.patterns)(version&gt;=0.0.0))" multiple="false" name="package" optional="true">
      Import package org.aspectj.weaver.patterns
    </require>
    <require extend="false" filter="(&amp;(package=org.springframework.asm)(version&gt;=2.5.0))" multiple="false" name="package" optional="true">
      Import package org.springframework.asm ;version=2.5.0
    </require>
    <require extend="false" filter="(&amp;(package=org.springframework.asm.commons)(version&gt;=2.5.0))" multiple="false" name="package" optional="true">
      Import package org.springframework.asm.commons ;version=2.5.0
    </require>
    <require extend="false" filter="(&amp;(package=org.springframework.asm.signature)(version&gt;=2.5.0))" multiple="false" name="package" optional="true">
      Import package org.springframework.asm.signature ;version=2.5.0
    </require>
    <require extend="false" filter="(&amp;(package=org.springframework.core)(version&gt;=2.5.0))" multiple="false" name="package" optional="true">
      Import package org.springframework.core ;version=2.5.0
    </require>
    <require extend="false" filter="(&amp;(package=org.springframework.core.annotation)(version&gt;=2.5.0))" multiple="false" name="package" optional="true">
      Import package org.springframework.core.annotation ;version=2.5.0
    </require>
    <require extend="false" filter="(&amp;(package=org.springframework.core.enums)(version&gt;=2.5.0))" multiple="false" name="package" optional="true">
      Import package org.springframework.core.enums ;version=2.5.0
    </require>
    <require extend="false" filter="(&amp;(package=org.springframework.core.io)(version&gt;=2.5.0))" multiple="false" name="package" optional="true">
      Import package org.springframework.core.io ;version=2.5.0
    </require>
    <require extend="false" filter="(&amp;(package=org.springframework.core.io.support)(version&gt;=2.5.0))" multiple="false" name="package" optional="true">
      Import package org.springframework.core.io.support ;version=2.5.0
    </require>
    <require extend="false" filter="(&amp;(package=org.springframework.core.style)(version&gt;=2.5.0))" multiple="false" name="package" optional="true">
      Import package org.springframework.core.style ;version=2.5.0
    </require>
    <require extend="false" filter="(&amp;(package=org.springframework.core.task)(version&gt;=2.5.0))" multiple="false" name="package" optional="true">
      Import package org.springframework.core.task ;version=2.5.0
    </require>
    <require extend="false" filter="(&amp;(package=org.springframework.core.task.support)(version&gt;=2.5.0))" multiple="false" name="package" optional="true">
      Import package org.springframework.core.task.support ;version=2.5.0
    </require>
    <require extend="false" filter="(&amp;(package=org.springframework.core.type)(version&gt;=2.5.0))" multiple="false" name="package" optional="true">
      Import package org.springframework.core.type ;version=2.5.0
    </require>
    <require extend="false" filter="(&amp;(package=org.springframework.core.type.classreading)(version&gt;=2.5.0))" multiple="false" name="package" optional="true">
      Import package org.springframework.core.type.classreading ;version=2.5.0
    </require>
    <require extend="false" filter="(&amp;(package=org.springframework.core.type.filter)(version&gt;=2.5.0))" multiple="false" name="package" optional="true">
      Import package org.springframework.core.type.filter ;version=2.5.0
    </require>
    <require extend="false" filter="(&amp;(package=org.springframework.metadata)(version&gt;=2.5.0))" multiple="false" name="package" optional="true">
      Import package org.springframework.metadata ;version=2.5.0
    </require>
    <require extend="false" filter="(&amp;(package=org.springframework.metadata.commons)(version&gt;=2.5.0))" multiple="false" name="package" optional="true">
      Import package org.springframework.metadata.commons ;version=2.5.0
    </require>
    <require extend="false" filter="(&amp;(package=org.springframework.util)(version&gt;=2.5.0))" multiple="false" name="package" optional="true">
      Import package org.springframework.util ;version=2.5.0
    </require>
    <require extend="false" filter="(&amp;(package=org.springframework.util.comparator)(version&gt;=2.5.0))" multiple="false" name="package" optional="true">
      Import package org.springframework.util.comparator ;version=2.5.0
    </require>
    <require extend="false" filter="(&amp;(package=org.springframework.util.xml)(version&gt;=2.5.0))" multiple="false" name="package" optional="true">
      Import package org.springframework.util.xml ;version=2.5.0
    </require>
    <require extend="false" filter="(&amp;(package=org.w3c.dom)(version&gt;=0.0.0))" multiple="false" name="package" optional="true">
      Import package org.w3c.dom
    </require>
    <require extend="false" filter="(&amp;(package=org.xml.sax)(version&gt;=0.0.0))" multiple="false" name="package" optional="true">
      Import package org.xml.sax
    </require>
  </resource>
  <resource id="6" presentationname="spring-osgi-core" symbolicname="org.springframework.osgi.spring-osgi-core" uri="http://s3.amazonaws.com/maven.springframework.org/milestone/org/springframework/osgi/spring-osgi-core/1.0-m3/spring-osgi-core-1.0-m3.jar" version="1.0.0.m3">
    <description>
      Spring/OSGi core classes. Offers OSGi-based application context
       and importer/exporter functionality.
    </description>
    <size>
      209968
    </size>
    <license>
      http://www.apache.org/licenses/LICENSE-2.0
    </license>
    <documentation>
      http://www.springframework.org
    </documentation>
    <capability name="bundle">
      <p n="manifestversion" v="2"/>
      <p n="presentationname" v="spring-osgi-core"/>
      <p n="symbolicname" v="org.springframework.osgi.spring-osgi-core"/>
      <p n="version" t="version" v="1.0.0.m3"/>
    </capability>
    <capability name="package">
      <p n="package" v="org.springframework.osgi.internal.util"/>
      <p n="uses:" v="org.osgi.framework,org.apache.commons.logging,org.aopalliance.intercept,org.springframework.osgi.util,org.springframework.beans.factory.config,org.springframework.aop.framework,org.springframework.util,org.aopalliance.aop,org.springframework.beans.factory"/>
      <p n="version" t="version" v="0.0.0"/>
    </capability>
    <capability name="package">
      <p n="package" v="org.springframework.osgi.compendium.config"/>
      <p n="version" t="version" v="1.0.0.m3"/>
    </capability>
    <capability name="package">
      <p n="package" v="org.springframework.osgi.internal.util.concurrent"/>
      <p n="uses:" v="org.apache.commons.logging,org.springframework.util"/>
      <p n="version" t="version" v="0.0.0"/>
    </capability>
    <capability name="package">
      <p n="package" v="org.springframework.osgi.internal.config"/>
      <p n="uses:" v="org.springframework.util.xml,org.springframework.core,org.w3c.dom,org.apache.commons.logging,org.springframework.beans.factory.support,org.springframework.beans.factory.config,org.springframework.beans.factory.xml,org.springframework.beans,org.springframework.osgi.service,org.springframework.util,org.springframework.beans.factory"/>
      <p n="version" t="version" v="0.0.0"/>
    </capability>
    <capability name="package">
      <p n="package" v="org.springframework.osgi.internal.context.support"/>
      <p n="uses:" v="org.springframework.osgi.internal.util,org.osgi.framework,org.apache.commons.logging,org.springframework.context,org.aopalliance.intercept,org.springframework.osgi.util,org.springframework.beans.factory.config,org.springframework.osgi.context.support,org.springframework.beans,org.springframework.util,org.springframework.beans.factory,org.springframework.osgi.internal.context"/>
      <p n="version" t="version" v="0.0.0"/>
    </capability>
    <capability name="package">
      <p n="package" v="org.springframework.osgi.service.importer"/>
      <p n="uses:" v="org.springframework.osgi.internal.util,org.springframework.osgi.internal.service,org.springframework.core,org.springframework.osgi.internal.service.importer,org.springframework.osgi.internal.context.support,org.osgi.framework,org.apache.commons.logging,org.springframework.osgi.internal.service.collection,org.springframework.osgi.internal.service.interceptor,org.springframework.osgi.util,org.springframework.osgi.internal.service.support,org.springframework.osgi.context,org.springframework.aop.framework,org.springframework.osgi.service.exporter,org.springframework.osgi.service,org.springframework.util,org.aopalliance.aop,org.springframework.beans.factory"/>
      <p n="version" t="version" v="1.0.0.m3"/>
    </capability>
    <capability name="package">
      <p n="package" v="org.springframework.osgi.config"/>
      <p n="version" t="version" v="1.0.0.m3"/>
    </capability>
    <capability name="package">
      <p n="package" v="org.springframework.osgi.util"/>
      <p n="uses:" v="org.springframework.core,org.osgi.framework,org.springframework.aop.framework,org.apache.commons.logging,org.springframework.util"/>
      <p n="version" t="version" v="1.0.0.m3"/>
    </capability>
    <capability name="package">
      <p n="package" v="org.springframework.osgi.context"/>
      <p n="uses:" v="org.osgi.framework,org.springframework.context"/>
      <p n="version" t="version" v="1.0.0.m3"/>
    </capability>
    <capability name="package">
      <p n="package" v="org.springframework.osgi"/>
      <p n="version" t="version" v="1.0.0.m3"/>
    </capability>
    <capability name="package">
      <p n="package" v="org.springframework.osgi.context.support"/>
      <p n="uses:" v="org.springframework.osgi.internal.util,org.osgi.service.startlevel,org.springframework.core.io.support,org.xml.sax,org.springframework.osgi.internal.context.support,org.osgi.framework,org.apache.commons.logging,org.springframework.context.support,org.springframework.osgi.util,org.springframework.beans.factory.support,org.springframework.osgi.context,org.springframework.beans.factory.config,org.springframework.beans.propertyeditors,org.springframework.beans.factory.xml,org.springframework.core.io,org.springframework.osgi.io,org.springframework.beans,org.springframework.util,org.springframework.beans.factory"/>
      <p n="version" t="version" v="1.0.0.m3"/>
    </capability>
    <capability name="package">
      <p n="package" v="org.springframework.osgi.service"/>
      <p n="uses:" v="org.osgi.framework"/>
      <p n="version" t="version" v="1.0.0.m3"/>
    </capability>
    <capability name="package">
      <p n="package" v="org.springframework.osgi.service.exporter"/>
      <p n="uses:" v="org.springframework.osgi.internal.util,org.springframework.core,org.springframework.osgi.internal.service,org.osgi.framework,org.springframework.osgi.internal.context.support,org.apache.commons.logging,org.springframework.osgi.internal.service.interceptor,org.springframework.osgi.util,org.springframework.osgi.context,org.springframework.beans.factory.config,org.springframework.osgi.internal.service.exporter,org.springframework.aop.framework,org.springframework.beans,org.springframework.osgi.service,org.springframework.util,org.aopalliance.aop,org.springframework.beans.factory"/>
      <p n="version" t="version" v="1.0.0.m3"/>
    </capability>
    <capability name="package">
      <p n="package" v="org.springframework.osgi.internal.context"/>
      <p n="uses:" v="org.springframework.osgi.context,org.springframework.beans"/>
      <p n="version" t="version" v="0.0.0"/>
    </capability>
    <require extend="false" filter="(&amp;(package=org.aopalliance.aop)(version&gt;=0.0.0))" multiple="false" name="package" optional="true">
      Import package org.aopalliance.aop
    </require>
    <require extend="false" filter="(&amp;(package=org.aopalliance.intercept)(version&gt;=0.0.0))" multiple="false" name="package" optional="true">
      Import package org.aopalliance.intercept
    </require>
    <require extend="false" filter="(&amp;(package=org.apache.commons.logging)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">
      Import package org.apache.commons.logging
    </require>
    <require extend="false" filter="(&amp;(package=org.osgi.framework)(version&gt;=1.3.0))" multiple="false" name="package" optional="false">
      Import package org.osgi.framework ;version=1.3.0
    </require>
    <require extend="false" filter="(&amp;(package=org.osgi.service.cm)(version&gt;=1.2.0))" multiple="false" name="package" optional="true">
      Import package org.osgi.service.cm ;version=1.2.0
    </require>
    <require extend="false" filter="(&amp;(package=org.osgi.service.startlevel)(version&gt;=1.0.0))" multiple="false" name="package" optional="false">
      Import package org.osgi.service.startlevel ;version=1.0.0
    </require>
    <require extend="false" filter="(&amp;(package=org.springframework.aop)(version&gt;=2.1.0.m4))" multiple="false" name="package" optional="false">
      Import package org.springframework.aop ;version=2.1.0.m4
    </require>
    <require extend="false" filter="(&amp;(package=org.springframework.aop.framework)(version&gt;=2.1.0.m4))" multiple="false" name="package" optional="false">
      Import package org.springframework.aop.framework ;version=2.1.0.m4
    </require>
    <require extend="false" filter="(&amp;(package=org.springframework.aop.framework.adapter)(version&gt;=2.1.0.m4))" multiple="false" name="package" optional="false">
      Import package org.springframework.aop.framework.adapter ;version=2.1.0.m4
    </require>
    <require extend="false" filter="(&amp;(package=org.springframework.aop.support)(version&gt;=2.1.0.m4))" multiple="false" name="package" optional="false">
      Import package org.springframework.aop.support ;version=2.1.0.m4
    </require>
    <require extend="false" filter="(&amp;(package=org.springframework.beans)(version&gt;=2.1.0.m4))" multiple="false" name="package" optional="false">
      Import package org.springframework.beans ;version=2.1.0.m4
    </require>
    <require extend="false" filter="(&amp;(package=org.springframework.beans.factory)(version&gt;=2.1.0.m4))" multiple="false" name="package" optional="false">
      Import package org.springframework.beans.factory ;version=2.1.0.m4
    </require>
    <require extend="false" filter="(&amp;(package=org.springframework.beans.factory.config)(version&gt;=2.1.0.m4))" multiple="false" name="package" optional="false">
      Import package org.springframework.beans.factory.config ;version=2.1.0.m4
    </require>
    <require extend="false" filter="(&amp;(package=org.springframework.beans.factory.support)(version&gt;=2.1.0.m4))" multiple="false" name="package" optional="false">
      Import package org.springframework.beans.factory.support ;version=2.1.0.m4
    </require>
    <require extend="false" filter="(&amp;(package=org.springframework.beans.factory.xml)(version&gt;=2.1.0.m4))" multiple="false" name="package" optional="false">
      Import package org.springframework.beans.factory.xml ;version=2.1.0.m4
    </require>
    <require extend="false" filter="(&amp;(package=org.springframework.beans.propertyeditors)(version&gt;=2.1.0.m4))" multiple="false" name="package" optional="false">
      Import package org.springframework.beans.propertyeditors ;version=2.1.0.m4
    </require>
    <require extend="false" filter="(&amp;(package=org.springframework.context)(version&gt;=2.1.0.m4))" multiple="false" name="package" optional="false">
      Import package org.springframework.context ;version=2.1.0.m4
    </require>
    <require extend="false" filter="(&amp;(package=org.springframework.context.support)(version&gt;=2.1.0.m4))" multiple="false" name="package" optional="false">
      Import package org.springframework.context.support ;version=2.1.0.m4
    </require>
    <require extend="false" filter="(&amp;(package=org.springframework.core)(version&gt;=2.1.0.m4))" multiple="false" name="package" optional="false">
      Import package org.springframework.core ;version=2.1.0.m4
    </require>
    <require extend="false" filter="(&amp;(package=org.springframework.core.io)(version&gt;=2.1.0.m4))" multiple="false" name="package" optional="false">
      Import package org.springframework.core.io ;version=2.1.0.m4
    </require>
    <require extend="false" filter="(&amp;(package=org.springframework.core.io.support)(version&gt;=2.1.0.m4))" multiple="false" name="package" optional="false">
      Import package org.springframework.core.io.support ;version=2.1.0.m4
    </require>
    <require extend="false" filter="(&amp;(package=org.springframework.osgi)(version&gt;=1.0.0.m3))" multiple="false" name="package" optional="false">
      Import package org.springframework.osgi ;version=1.0.0.m3
    </require>
    <require extend="false" filter="(&amp;(package=org.springframework.osgi.compendium.config)(version&gt;=1.0.0.m3))" multiple="false" name="package" optional="false">
      Import package org.springframework.osgi.compendium.config ;version=1.0.0.m3
    </require>
    <require extend="false" filter="(&amp;(package=org.springframework.osgi.config)(version&gt;=1.0.0.m3))" multiple="false" name="package" optional="false">
      Import package org.springframework.osgi.config ;version=1.0.0.m3
    </require>
    <require extend="false" filter="(&amp;(package=org.springframework.osgi.context)(version&gt;=1.0.0.m3))" multiple="false" name="package" optional="false">
      Import package org.springframework.osgi.context ;version=1.0.0.m3
    </require>
    <require extend="false" filter="(&amp;(package=org.springframework.osgi.context.support)(version&gt;=1.0.0.m3))" multiple="false" name="package" optional="false">
      Import package org.springframework.osgi.context.support ;version=1.0.0.m3
    </require>
    <require extend="false" filter="(&amp;(package=org.springframework.osgi.internal.config)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">
      Import package org.springframework.osgi.internal.config
    </require>
    <require extend="false" filter="(&amp;(package=org.springframework.osgi.internal.context)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">
      Import package org.springframework.osgi.internal.context
    </require>
    <require extend="false" filter="(&amp;(package=org.springframework.osgi.internal.context.support)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">
      Import package org.springframework.osgi.internal.context.support
    </require>
    <require extend="false" filter="(&amp;(package=org.springframework.osgi.internal.util)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">
      Import package org.springframework.osgi.internal.util
    </require>
    <require extend="false" filter="(&amp;(package=org.springframework.osgi.internal.util.concurrent)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">
      Import package org.springframework.osgi.internal.util.concurrent
    </require>
    <require extend="false" filter="(&amp;(package=org.springframework.osgi.io)(version&gt;=1.0.0.m3))" multiple="false" name="package" optional="false">
      Import package org.springframework.osgi.io ;version=1.0.0.m3
    </require>
    <require extend="false" filter="(&amp;(package=org.springframework.osgi.service)(version&gt;=1.0.0.m3))" multiple="false" name="package" optional="false">
      Import package org.springframework.osgi.service ;version=1.0.0.m3
    </require>
    <require extend="false" filter="(&amp;(package=org.springframework.osgi.service.exporter)(version&gt;=1.0.0.m3))" multiple="false" name="package" optional="false">
      Import package org.springframework.osgi.service.exporter ;version=1.0.0.m3
    </require>
    <require extend="false" filter="(&amp;(package=org.springframework.osgi.service.importer)(version&gt;=1.0.0.m3))" multiple="false" name="package" optional="false">
      Import package org.springframework.osgi.service.importer ;version=1.0.0.m3
    </require>
    <require extend="false" filter="(&amp;(package=org.springframework.osgi.util)(version&gt;=1.0.0.m3))" multiple="false" name="package" optional="false">
      Import package org.springframework.osgi.util ;version=1.0.0.m3
    </require>
    <require extend="false" filter="(&amp;(package=org.springframework.util)(version&gt;=2.1.0.m4))" multiple="false" name="package" optional="false">
      Import package org.springframework.util ;version=2.1.0.m4
    </require>
    <require extend="false" filter="(&amp;(package=org.springframework.util.xml)(version&gt;=2.1.0.m4))" multiple="false" name="package" optional="false">
      Import package org.springframework.util.xml ;version=2.1.0.m4
    </require>
    <require extend="false" filter="(&amp;(package=org.w3c.dom)(version&gt;=0.0.0))" multiple="false" name="package" optional="true">
      Import package org.w3c.dom
    </require>
    <require extend="false" filter="(&amp;(package=org.xml.sax)(version&gt;=0.0.0))" multiple="false" name="package" optional="true">
      Import package org.xml.sax
    </require>
  </resource>
  <resource id="7" presentationname="spring-osgi-extender" symbolicname="org.springframework.osgi.spring-osgi-extender" uri="http://s3.amazonaws.com/maven.springframework.org/milestone/org/springframework/osgi/spring-osgi-extender/1.0-m3/spring-osgi-extender-1.0-m3.jar" version="1.0.0.m3">
    <description>
      Spring/OSGi extender. Listens for and bootstraps Spring-powered
       OSGi bundles.
    </description>
    <size>
      51568
    </size>
    <license>
      http://www.apache.org/licenses/LICENSE-2.0
    </license>
    <documentation>
      http://www.springframework.org
    </documentation>
    <capability name="bundle">
      <p n="manifestversion" v="2"/>
      <p n="presentationname" v="spring-osgi-extender"/>
      <p n="symbolicname" v="org.springframework.osgi.spring-osgi-extender"/>
      <p n="version" t="version" v="1.0.0.m3"/>
    </capability>
    <require extend="false" filter="(&amp;(package=org.apache.commons.logging)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">
      Import package org.apache.commons.logging
    </require>
    <require extend="false" filter="(&amp;(package=org.osgi.framework)(version&gt;=1.3.0))" multiple="false" name="package" optional="false">
      Import package org.osgi.framework ;version=1.3.0
    </require>
    <require extend="false" filter="(&amp;(package=org.springframework.beans)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">
      Import package org.springframework.beans
    </require>
    <require extend="false" filter="(&amp;(package=org.springframework.beans.factory)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">
      Import package org.springframework.beans.factory
    </require>
    <require extend="false" filter="(&amp;(package=org.springframework.beans.factory.config)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">
      Import package org.springframework.beans.factory.config
    </require>
    <require extend="false" filter="(&amp;(package=org.springframework.beans.factory.xml)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">
      Import package org.springframework.beans.factory.xml
    </require>
    <require extend="false" filter="(&amp;(package=org.springframework.context)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">
      Import package org.springframework.context
    </require>
    <require extend="false" filter="(&amp;(package=org.springframework.core)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">
      Import package org.springframework.core
    </require>
    <require extend="false" filter="(&amp;(package=org.springframework.core.enums)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">
      Import package org.springframework.core.enums
    </require>
    <require extend="false" filter="(&amp;(package=org.springframework.core.task)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">
      Import package org.springframework.core.task
    </require>
    <require extend="false" filter="(&amp;(package=org.springframework.osgi.context)(version&gt;=1.0.0.m3))" multiple="false" name="package" optional="false">
      Import package org.springframework.osgi.context ;version=1.0.0.m3
    </require>
    <require extend="false" filter="(&amp;(package=org.springframework.osgi.context.support)(version&gt;=1.0.0.m3))" multiple="false" name="package" optional="false">
      Import package org.springframework.osgi.context.support ;version=1.0.0.m3
    </require>
    <require extend="false" filter="(&amp;(package=org.springframework.osgi.internal.context)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">
      Import package org.springframework.osgi.internal.context
    </require>
    <require extend="false" filter="(&amp;(package=org.springframework.osgi.internal.context.support)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">
      Import package org.springframework.osgi.internal.context.support
    </require>
    <require extend="false" filter="(&amp;(package=org.springframework.osgi.internal.util.concurrent)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">
      Import package org.springframework.osgi.internal.util.concurrent
    </require>
    <require extend="false" filter="(&amp;(package=org.springframework.osgi.service.importer)(version&gt;=1.0.0.m3))" multiple="false" name="package" optional="false">
      Import package org.springframework.osgi.service.importer ;version=1.0.0.m3
    </require>
    <require extend="false" filter="(&amp;(package=org.springframework.osgi.util)(version&gt;=1.0.0.m3))" multiple="false" name="package" optional="false">
      Import package org.springframework.osgi.util ;version=1.0.0.m3
    </require>
    <require extend="false" filter="(&amp;(package=org.springframework.util)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">
      Import package org.springframework.util
    </require>
    <require extend="false" filter="(&amp;(package=org.xml.sax)(version&gt;=0.0.0))" multiple="false" name="package" optional="true">
      Import package org.xml.sax
    </require>
  </resource>
  <resource id="8" presentationname="spring-osgi-io" symbolicname="org.springframework.osgi.spring-osgi-io" uri="http://s3.amazonaws.com/maven.springframework.org/milestone/org/springframework/osgi/spring-osgi-io/1.0-m3/spring-osgi-io-1.0-m3.jar" version="1.0.0.m3">
    <description>
      Spring/OSGi IO abstract classes. Provides Resource, ResourceLoader
       and ResourcePatternResolver for OSGi environments.
    </description>
    <size>
      13146
    </size>
    <license>
      http://www.apache.org/licenses/LICENSE-2.0
    </license>
    <documentation>
      http://www.springframework.org
    </documentation>
    <capability name="bundle">
      <p n="manifestversion" v="2"/>
      <p n="presentationname" v="spring-osgi-io"/>
      <p n="symbolicname" v="org.springframework.osgi.spring-osgi-io"/>
      <p n="version" t="version" v="1.0.0.m3"/>
    </capability>
    <capability name="package">
      <p n="package" v="org.springframework.osgi.io"/>
      <p n="uses:" v="org.springframework.core.io.support,org.springframework.core.io,org.springframework.core,org.osgi.framework,org.apache.commons.logging,org.springframework.util"/>
      <p n="version" t="version" v="1.0.0.m3"/>
    </capability>
    <require extend="false" filter="(&amp;(package=org.apache.commons.logging)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">
      Import package org.apache.commons.logging
    </require>
    <require extend="false" filter="(&amp;(package=org.osgi.framework)(version&gt;=1.3.0))" multiple="false" name="package" optional="false">
      Import package org.osgi.framework ;version=1.3.0
    </require>
    <require extend="false" filter="(&amp;(package=org.springframework.core)(version&gt;=2.1.0.m4))" multiple="false" name="package" optional="false">
      Import package org.springframework.core ;version=2.1.0.m4
    </require>
    <require extend="false" filter="(&amp;(package=org.springframework.core.io)(version&gt;=2.1.0.m4))" multiple="false" name="package" optional="false">
      Import package org.springframework.core.io ;version=2.1.0.m4
    </require>
    <require extend="false" filter="(&amp;(package=org.springframework.core.io.support)(version&gt;=2.1.0.m4))" multiple="false" name="package" optional="false">
      Import package org.springframework.core.io.support ;version=2.1.0.m4
    </require>
    <require extend="false" filter="(&amp;(package=org.springframework.osgi.io)(version&gt;=1.0.0.m3))" multiple="false" name="package" optional="false">
      Import package org.springframework.osgi.io ;version=1.0.0.m3
    </require>
    <require extend="false" filter="(&amp;(package=org.springframework.util)(version&gt;=2.1.0.m4))" multiple="false" name="package" optional="false">
      Import package org.springframework.util ;version=2.1.0.m4
    </require>
  </resource>
 <resource id='9' presentationname='spring-context-support' symbolicname='org.springframework.bundle.spring.context.support' uri='http://repo1.maven.org/maven2/org/springframework/spring-context-support/2.5/spring-context-support-2.5.jar' version='2.5.0'>
    <description>
      Spring Framework
    </description>
    <size>
      92832
    </size>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='spring-context-support'/>
      <p n='symbolicname' v='org.springframework.bundle.spring.context.support'/>
      <p n='version' t='version' v='2.5.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.scheduling.commonj'/>
      <p n='uses:' v='javax.naming,org.apache.commons.logging,org.springframework.util,org.springframework.context,org.springframework.jndi,commonj.work,org.springframework.scheduling,commonj.timers,org.springframework.core.task,org.springframework.beans.factory'/>
      <p n='version' t='version' v='2.5.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.ui.jasperreports'/>
      <p n='uses:' v='net.sf.jasperreports.engine.data,net.sf.jasperreports.engine.export,net.sf.jasperreports.engine'/>
      <p n='version' t='version' v='2.5.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.ui.velocity'/>
      <p n='uses:' v='org.apache.velocity.runtime,org.apache.commons.logging,org.apache.commons.collections,org.springframework.util,org.apache.velocity.exception,org.apache.velocity.context,org.springframework.core.io,org.springframework.context,org.springframework.core.io.support,org.apache.velocity.runtime.log,org.apache.velocity,org.apache.velocity.app,org.apache.velocity.runtime.resource,org.apache.velocity.runtime.resource.loader,org.springframework.beans.factory'/>
      <p n='version' t='version' v='2.5.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.cache.ehcache'/>
      <p n='uses:' v='org.apache.commons.logging,org.springframework.util,org.springframework.core.io,net.sf.ehcache.store,net.sf.ehcache.bootstrap,net.sf.ehcache,net.sf.ehcache.constructs.blocking,org.springframework.beans.factory'/>
      <p n='version' t='version' v='2.5.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.mail.javamail'/>
      <p n='uses:' v='javax.activation,org.springframework.util,javax.mail.internet,org.springframework.core.io,javax.mail,org.springframework.mail,org.springframework.beans.factory'/>
      <p n='version' t='version' v='2.5.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.mail'/>
      <p n='uses:' v='org.springframework.core,org.springframework.util'/>
      <p n='version' t='version' v='2.5.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.ui.freemarker'/>
      <p n='uses:' v='org.apache.commons.logging,freemarker.cache,org.springframework.util,org.springframework.core.io,org.springframework.context,org.springframework.core.io.support,freemarker.template,org.springframework.beans.factory'/>
      <p n='version' t='version' v='2.5.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.scheduling.quartz'/>
      <p n='uses:' v='org.apache.commons.logging,org.quartz.xml,org.quartz.simpl,org.springframework.beans,org.quartz.impl.jdbcjobstore,org.springframework.core,org.quartz.utils,org.springframework.jdbc.datasource,org.springframework.beans.factory,org.springframework.transaction,org.quartz.spi,org.springframework.beans.support,org.quartz,org.springframework.util,org.springframework.core.io,org.springframework.context,org.springframework.core.io.support,org.springframework.scheduling,org.quartz.impl,javax.sql,org.springframework.core.task,org.springframework.transaction.support'/>
      <p n='version' t='version' v='2.5.0'/>
    </capability>
    <require extend='false' filter='(&amp;(package=commonj.timers)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package commonj.timers
    </require>
    <require extend='false' filter='(&amp;(package=commonj.work)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package commonj.work
    </require>
    <require extend='false' filter='(&amp;(package=freemarker.cache)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package freemarker.cache
    </require>
    <require extend='false' filter='(&amp;(package=freemarker.template)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package freemarker.template
    </require>
    <require extend='false' filter='(&amp;(package=javax.activation)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package javax.activation
    </require>
    <require extend='false' filter='(&amp;(package=javax.mail)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package javax.mail
    </require>
    <require extend='false' filter='(&amp;(package=javax.mail.internet)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package javax.mail.internet
    </require>
    <require extend='false' filter='(&amp;(package=javax.naming)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package javax.naming
    </require>
    <require extend='false' filter='(&amp;(package=javax.sql)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package javax.sql
    </require>
    <require extend='false' filter='(&amp;(package=net.sf.ehcache)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package net.sf.ehcache
    </require>
    <require extend='false' filter='(&amp;(package=net.sf.ehcache.bootstrap)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package net.sf.ehcache.bootstrap
    </require>
    <require extend='false' filter='(&amp;(package=net.sf.ehcache.constructs.blocking)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package net.sf.ehcache.constructs.blocking
    </require>
    <require extend='false' filter='(&amp;(package=net.sf.ehcache.store)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package net.sf.ehcache.store
    </require>
    <require extend='false' filter='(&amp;(package=net.sf.jasperreports.engine)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package net.sf.jasperreports.engine
    </require>
    <require extend='false' filter='(&amp;(package=net.sf.jasperreports.engine.data)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package net.sf.jasperreports.engine.data
    </require>
    <require extend='false' filter='(&amp;(package=net.sf.jasperreports.engine.export)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package net.sf.jasperreports.engine.export
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.commons.collections)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.apache.commons.collections
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.commons.logging)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package org.apache.commons.logging
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.velocity)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.apache.velocity
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.velocity.app)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.apache.velocity.app
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.velocity.context)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.apache.velocity.context
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.velocity.exception)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.apache.velocity.exception
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.velocity.runtime)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.apache.velocity.runtime
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.velocity.runtime.log)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.apache.velocity.runtime.log
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.velocity.runtime.resource)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.apache.velocity.runtime.resource
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.velocity.runtime.resource.loader)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.apache.velocity.runtime.resource.loader
    </require>
    <require extend='false' filter='(&amp;(package=org.quartz)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.quartz
    </require>
    <require extend='false' filter='(&amp;(package=org.quartz.impl)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.quartz.impl
    </require>
    <require extend='false' filter='(&amp;(package=org.quartz.impl.jdbcjobstore)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.quartz.impl.jdbcjobstore
    </require>
    <require extend='false' filter='(&amp;(package=org.quartz.simpl)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.quartz.simpl
    </require>
    <require extend='false' filter='(&amp;(package=org.quartz.spi)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.quartz.spi
    </require>
    <require extend='false' filter='(&amp;(package=org.quartz.utils)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.quartz.utils
    </require>
    <require extend='false' filter='(&amp;(package=org.quartz.xml)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.quartz.xml
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.beans)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.springframework.beans
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.beans.factory)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.springframework.beans.factory
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.beans.support)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.springframework.beans.support
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.cache.ehcache)(version&gt;=2.5.0))' multiple='false' name='package' optional='true'>
      Import package org.springframework.cache.ehcache ;version=2.5.0
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.context)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.springframework.context
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.core)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.springframework.core
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.core.io)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.springframework.core.io
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.core.io.support)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.springframework.core.io.support
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.core.task)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.springframework.core.task
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.jdbc.datasource)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.springframework.jdbc.datasource
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.jndi)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.springframework.jndi
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.mail)(version&gt;=2.5.0))' multiple='false' name='package' optional='true'>
      Import package org.springframework.mail ;version=2.5.0
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.mail.javamail)(version&gt;=2.5.0))' multiple='false' name='package' optional='true'>
      Import package org.springframework.mail.javamail ;version=2.5.0
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.scheduling)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.springframework.scheduling
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.scheduling.commonj)(version&gt;=2.5.0))' multiple='false' name='package' optional='true'>
      Import package org.springframework.scheduling.commonj ;version=2.5.0
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.scheduling.quartz)(version&gt;=2.5.0))' multiple='false' name='package' optional='true'>
      Import package org.springframework.scheduling.quartz ;version=2.5.0
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.transaction)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.springframework.transaction
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.transaction.support)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.springframework.transaction.support
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.ui.freemarker)(version&gt;=2.5.0))' multiple='false' name='package' optional='true'>
      Import package org.springframework.ui.freemarker ;version=2.5.0
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.ui.jasperreports)(version&gt;=2.5.0))' multiple='false' name='package' optional='true'>
      Import package org.springframework.ui.jasperreports ;version=2.5.0
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.ui.velocity)(version&gt;=2.5.0))' multiple='false' name='package' optional='true'>
      Import package org.springframework.ui.velocity ;version=2.5.0
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.util)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.springframework.util
    </require>
  </resource>
  <resource id='10' presentationname='spring-jdbc' symbolicname='org.springframework.bundle.spring.jdbc' uri='http://repo1.maven.org/maven2/org/springframework/spring-jdbc/2.5/spring-jdbc-2.5.jar' version='2.5.0'>
    <description>
      Spring Framework
    </description>
    <size>
      306790
    </size>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='spring-jdbc'/>
      <p n='symbolicname' v='org.springframework.bundle.spring.jdbc'/>
      <p n='version' t='version' v='2.5.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.jdbc'/>
      <p n='uses:' v='org.springframework.dao'/>
      <p n='version' t='version' v='2.5.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.jdbc.core.simple'/>
      <p n='uses:' v='org.apache.commons.logging,org.springframework.jdbc.core.namedparam,org.springframework.jdbc.core.support,org.springframework.util,org.springframework.jdbc.support.nativejdbc,org.springframework.jdbc.support,javax.sql,org.springframework.jdbc.core,org.springframework.jdbc.core.metadata,org.springframework.dao'/>
      <p n='version' t='version' v='2.5.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.jdbc.core.namedparam'/>
      <p n='uses:' v='org.springframework.jdbc.core.support,org.springframework.util,org.springframework.beans,org.springframework.jdbc.support.rowset,org.springframework.dao.support,org.springframework.jdbc.support,javax.sql,org.springframework.jdbc.core,org.springframework.dao'/>
      <p n='version' t='version' v='2.5.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.jdbc.core.support'/>
      <p n='uses:' v='org.springframework.jdbc,org.springframework.util,org.springframework.dao.support,org.springframework.beans.factory.support,org.springframework.jdbc.support,javax.sql,org.springframework.jdbc.support.lob,org.springframework.jdbc.core,org.springframework.dao,org.springframework.jdbc.datasource'/>
      <p n='version' t='version' v='2.5.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.jdbc.support.nativejdbc'/>
      <p n='uses:' v='org.springframework.util,com.mchange.v2.c3p0,org.enhydra.jdbc.core,org.springframework.jdbc.datasource'/>
      <p n='version' t='version' v='2.5.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.jdbc.support.rowset'/>
      <p n='uses:' v='org.springframework.jdbc'/>
      <p n='version' t='version' v='2.5.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.jdbc.datasource.lookup'/>
      <p n='uses:' v='javax.naming,org.springframework.transaction,org.springframework.util,org.springframework.beans,org.springframework.jndi,org.springframework.core,javax.sql,org.springframework.dao,org.springframework.jdbc.datasource,org.springframework.transaction.support,org.springframework.beans.factory'/>
      <p n='version' t='version' v='2.5.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.jdbc.support'/>
      <p n='uses:' v='org.springframework.jdbc,org.apache.commons.logging,org.springframework.util,org.springframework.core.io,org.springframework.beans,org.springframework.beans.factory.xml,org.springframework.beans.factory.support,org.springframework.core,javax.sql,org.springframework.dao,org.springframework.jdbc.datasource,org.springframework.beans.factory'/>
      <p n='version' t='version' v='2.5.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.jdbc.support.incrementer'/>
      <p n='uses:' v='org.springframework.jdbc.support,javax.sql,org.springframework.dao,org.springframework.jdbc.datasource,org.springframework.beans.factory'/>
      <p n='version' t='version' v='2.5.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.jdbc.support.lob'/>
      <p n='uses:' v='org.springframework.transaction,org.apache.commons.logging,org.springframework.util,org.springframework.jdbc.support.nativejdbc,javax.transaction,org.springframework.dao,org.springframework.transaction.support'/>
      <p n='version' t='version' v='2.5.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.jdbc.core'/>
      <p n='uses:' v='org.springframework.jdbc,org.apache.commons.logging,org.springframework.util,org.springframework.beans,com.sun.rowset,org.springframework.jdbc.support.nativejdbc,org.springframework.jdbc.support.rowset,org.springframework.dao.support,org.springframework.core,org.springframework.jdbc.support,javax.sql,javax.sql.rowset,org.springframework.dao,org.springframework.jdbc.datasource'/>
      <p n='version' t='version' v='2.5.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.jdbc.core.metadata'/>
      <p n='uses:' v='org.springframework.jdbc.support,org.apache.commons.logging,org.springframework.jdbc.core.namedparam,javax.sql,org.springframework.jdbc.core,org.springframework.dao'/>
      <p n='version' t='version' v='2.5.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.jdbc.object'/>
      <p n='uses:' v='org.springframework.jdbc,org.apache.commons.logging,org.springframework.jdbc.core.namedparam,org.springframework.jdbc.support.nativejdbc,org.springframework.dao.support,org.springframework.jdbc.support,javax.sql,org.springframework.jdbc.core,org.springframework.dao,org.springframework.beans.factory'/>
      <p n='version' t='version' v='2.5.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.jdbc.datasource'/>
      <p n='uses:' v='org.springframework.transaction,org.springframework.jdbc,org.apache.commons.logging,org.springframework.util,org.springframework.core,javax.sql,org.springframework.transaction.support,org.springframework.beans.factory'/>
      <p n='version' t='version' v='2.5.0'/>
    </capability>
    <require extend='false' filter='(&amp;(package=com.ibm.websphere.rsadapter)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package com.ibm.websphere.rsadapter
    </require>
    <require extend='false' filter='(&amp;(package=com.ibm.ws.rsadapter.jdbc)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package com.ibm.ws.rsadapter.jdbc
    </require>
    <require extend='false' filter='(&amp;(package=com.mchange.v2.c3p0)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package com.mchange.v2.c3p0
    </require>
    <require extend='false' filter='(&amp;(package=com.sun.rowset)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package com.sun.rowset
    </require>
    <require extend='false' filter='(&amp;(package=javax.naming)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package javax.naming
    </require>
    <require extend='false' filter='(&amp;(package=javax.sql)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package javax.sql
    </require>
    <require extend='false' filter='(&amp;(package=javax.sql.rowset)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package javax.sql.rowset
    </require>
    <require extend='false' filter='(&amp;(package=javax.transaction)(version&gt;=1.0.1))' multiple='false' name='package' optional='true'>
      Import package javax.transaction ;version=1.0.1
    </require>
    <require extend='false' filter='(&amp;(package=oracle.sql)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package oracle.sql
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.commons.logging)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package org.apache.commons.logging
    </require>
    <require extend='false' filter='(&amp;(package=org.enhydra.jdbc.core)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.enhydra.jdbc.core
    </require>
    <require extend='false' filter='(&amp;(package=org.jboss.resource.adapter.jdbc)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.jboss.resource.adapter.jdbc
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.beans)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.springframework.beans
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.beans.factory)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.springframework.beans.factory
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.beans.factory.support)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.springframework.beans.factory.support
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.beans.factory.xml)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.springframework.beans.factory.xml
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.core)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.springframework.core
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.core.io)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.springframework.core.io
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.dao)(version&gt;=2.5.0))' multiple='false' name='package' optional='false'>
      Import package org.springframework.dao ;version=2.5.0
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.dao.support)(version&gt;=2.5.0))' multiple='false' name='package' optional='false'>
      Import package org.springframework.dao.support ;version=2.5.0
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.jdbc)(version&gt;=2.5.0))' multiple='false' name='package' optional='true'>
      Import package org.springframework.jdbc ;version=2.5.0
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.jdbc.core)(version&gt;=2.5.0))' multiple='false' name='package' optional='true'>
      Import package org.springframework.jdbc.core ;version=2.5.0
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.jdbc.core.metadata)(version&gt;=2.5.0))' multiple='false' name='package' optional='true'>
      Import package org.springframework.jdbc.core.metadata ;version=2.5.0
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.jdbc.core.namedparam)(version&gt;=2.5.0))' multiple='false' name='package' optional='true'>
      Import package org.springframework.jdbc.core.namedparam ;version=2.5.0
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.jdbc.core.simple)(version&gt;=2.5.0))' multiple='false' name='package' optional='true'>
      Import package org.springframework.jdbc.core.simple ;version=2.5.0
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.jdbc.core.support)(version&gt;=2.5.0))' multiple='false' name='package' optional='true'>
      Import package org.springframework.jdbc.core.support ;version=2.5.0
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.jdbc.datasource)(version&gt;=2.5.0))' multiple='false' name='package' optional='true'>
      Import package org.springframework.jdbc.datasource ;version=2.5.0
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.jdbc.datasource.lookup)(version&gt;=2.5.0))' multiple='false' name='package' optional='true'>
      Import package org.springframework.jdbc.datasource.lookup ;version=2.5.0
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.jdbc.object)(version&gt;=2.5.0))' multiple='false' name='package' optional='true'>
      Import package org.springframework.jdbc.object ;version=2.5.0
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.jdbc.support)(version&gt;=2.5.0))' multiple='false' name='package' optional='true'>
      Import package org.springframework.jdbc.support ;version=2.5.0
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.jdbc.support.incrementer)(version&gt;=2.5.0))' multiple='false' name='package' optional='true'>
      Import package org.springframework.jdbc.support.incrementer
       ;version=2.5.0
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.jdbc.support.lob)(version&gt;=2.5.0))' multiple='false' name='package' optional='true'>
      Import package org.springframework.jdbc.support.lob ;version=2.5.0
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.jdbc.support.nativejdbc)(version&gt;=2.5.0))' multiple='false' name='package' optional='true'>
      Import package org.springframework.jdbc.support.nativejdbc
       ;version=2.5.0
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.jdbc.support.rowset)(version&gt;=2.5.0))' multiple='false' name='package' optional='true'>
      Import package org.springframework.jdbc.support.rowset ;version=2.5.0
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.jndi)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.springframework.jndi
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.transaction)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.springframework.transaction
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.transaction.support)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.springframework.transaction.support
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.util)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.springframework.util
    </require>
    <require extend='false' filter='(&amp;(package=weblogic.jdbc.extensions)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package weblogic.jdbc.extensions
    </require>
  </resource>
  <resource id='11' presentationname='spring-jms' symbolicname='org.springframework.bundle.spring.jms' uri='http://repo1.maven.org/maven2/org/springframework/spring-jms/2.5/spring-jms-2.5.jar' version='2.5.0'>
    <description>
      Spring Framework
    </description>
    <size>
      171946
    </size>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='spring-jms'/>
      <p n='symbolicname' v='org.springframework.bundle.spring.jms'/>
      <p n='version' t='version' v='2.5.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.jms.listener'/>
      <p n='uses:' v='org.springframework.transaction,org.apache.commons.logging,javax.jms,org.springframework.util,org.springframework.context,org.springframework.jms,org.springframework.jms.support.destination,org.springframework.core,org.springframework.scheduling,org.springframework.jms.connection,org.springframework.jms.support,org.springframework.core.task,org.springframework.transaction.support,org.springframework.beans.factory'/>
      <p n='version' t='version' v='2.5.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.jms.listener.serversession'/>
      <p n='uses:' v='org.springframework.jms.listener,org.apache.commons.logging,javax.jms,org.springframework.jms.support,org.apache.commons.pool.impl,org.springframework.util,org.apache.commons.pool,org.springframework.core.task,org.springframework.scheduling.timer'/>
      <p n='version' t='version' v='2.5.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.jms.config'/>
      <p n='uses:' v='org.springframework.beans.factory.support,org.springframework.util,org.springframework.beans,org.springframework.beans.factory.xml,org.springframework.beans.factory.config,org.springframework.beans.factory.parsing,org.w3c.dom'/>
      <p n='version' t='version' v='2.5.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.jms'/>
      <p n='uses:' v='org.springframework.core,javax.jms'/>
      <p n='version' t='version' v='2.5.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.jms.support.destination'/>
      <p n='uses:' v='javax.naming,org.apache.commons.logging,javax.jms,org.springframework.util,org.springframework.beans,org.springframework.jms,org.springframework.jndi,org.springframework.core,org.springframework.jms.support,org.springframework.beans.factory'/>
      <p n='version' t='version' v='2.5.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.jms.support.converter'/>
      <p n='uses:' v='javax.jms,org.springframework.util,org.springframework.jms'/>
      <p n='version' t='version' v='2.5.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.jms.listener.endpoint'/>
      <p n='uses:' v='org.springframework.jca.endpoint,javax.resource,org.apache.commons.logging,javax.jms,javax.resource.spi,org.springframework.beans,javax.resource.spi.endpoint,org.springframework.jms.support.destination'/>
      <p n='version' t='version' v='2.5.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.jms.core.support'/>
      <p n='uses:' v='org.apache.commons.logging,javax.jms,org.springframework.jms.core,org.springframework.beans.factory'/>
      <p n='version' t='version' v='2.5.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.jms.connection'/>
      <p n='uses:' v='org.springframework.transaction,org.apache.commons.logging,javax.jms,org.springframework.util,org.springframework.jms,org.springframework.transaction.support,org.springframework.beans.factory'/>
      <p n='version' t='version' v='2.5.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.jms.support'/>
      <p n='uses:' v='org.springframework.core,org.apache.commons.logging,javax.jms,org.springframework.util,org.springframework.jms,org.springframework.beans.factory'/>
      <p n='version' t='version' v='2.5.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.jms.remoting'/>
      <p n='uses:' v='org.springframework.jms.listener,org.springframework.aop.support,org.apache.commons.logging,javax.jms,org.aopalliance.intercept,org.springframework.util,org.springframework.jms.support.destination,org.springframework.jms.support.converter,org.springframework.remoting.support,org.springframework.remoting,org.springframework.jms.connection,org.springframework.jms.support,org.springframework.aop.framework,org.springframework.beans.factory'/>
      <p n='version' t='version' v='2.5.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.jms.listener.adapter'/>
      <p n='uses:' v='org.springframework.jms.support.converter,org.springframework.jms.listener,org.apache.commons.logging,javax.jms,org.springframework.jms.support,org.springframework.util,org.springframework.jms,org.springframework.jms.support.destination'/>
      <p n='version' t='version' v='2.5.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.jms.core'/>
      <p n='uses:' v='org.springframework.jms.support.converter,org.apache.commons.logging,org.springframework.jms.connection,javax.jms,org.springframework.jms.support,org.springframework.util,org.springframework.transaction.support,org.springframework.jms,org.springframework.jms.support.destination'/>
      <p n='version' t='version' v='2.5.0'/>
    </capability>
    <require extend='false' filter='(&amp;(package=javax.jms)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.jms
    </require>
    <require extend='false' filter='(&amp;(package=javax.naming)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package javax.naming
    </require>
    <require extend='false' filter='(&amp;(package=javax.resource)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package javax.resource
    </require>
    <require extend='false' filter='(&amp;(package=javax.resource.spi)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package javax.resource.spi
    </require>
    <require extend='false' filter='(&amp;(package=javax.resource.spi.endpoint)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package javax.resource.spi.endpoint
    </require>
    <require extend='false' filter='(&amp;(package=org.aopalliance.intercept)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.aopalliance.intercept
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.commons.logging)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package org.apache.commons.logging
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.commons.pool)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.apache.commons.pool
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.commons.pool.impl)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.apache.commons.pool.impl
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.aop.framework)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.springframework.aop.framework
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.aop.support)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.springframework.aop.support
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.beans)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.springframework.beans
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.beans.factory)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.springframework.beans.factory
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.beans.factory.config)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.springframework.beans.factory.config
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.beans.factory.parsing)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.springframework.beans.factory.parsing
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.beans.factory.support)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.springframework.beans.factory.support
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.beans.factory.xml)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.springframework.beans.factory.xml
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.context)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.springframework.context
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.core)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.springframework.core
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.core.task)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.springframework.core.task
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.jca.endpoint)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.springframework.jca.endpoint
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.jms)(version&gt;=2.5.0))' multiple='false' name='package' optional='true'>
      Import package org.springframework.jms ;version=2.5.0
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.jms.config)(version&gt;=2.5.0))' multiple='false' name='package' optional='true'>
      Import package org.springframework.jms.config ;version=2.5.0
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.jms.connection)(version&gt;=2.5.0))' multiple='false' name='package' optional='true'>
      Import package org.springframework.jms.connection ;version=2.5.0
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.jms.core)(version&gt;=2.5.0))' multiple='false' name='package' optional='true'>
      Import package org.springframework.jms.core ;version=2.5.0
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.jms.core.support)(version&gt;=2.5.0))' multiple='false' name='package' optional='true'>
      Import package org.springframework.jms.core.support ;version=2.5.0
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.jms.listener)(version&gt;=2.5.0))' multiple='false' name='package' optional='true'>
      Import package org.springframework.jms.listener ;version=2.5.0
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.jms.listener.adapter)(version&gt;=2.5.0))' multiple='false' name='package' optional='true'>
      Import package org.springframework.jms.listener.adapter ;version=2.5.0
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.jms.listener.endpoint)(version&gt;=2.5.0))' multiple='false' name='package' optional='true'>
      Import package org.springframework.jms.listener.endpoint ;version=2.5.0
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.jms.listener.serversession)(version&gt;=2.5.0))' multiple='false' name='package' optional='true'>
      Import package org.springframework.jms.listener.serversession
       ;version=2.5.0
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.jms.remoting)(version&gt;=2.5.0))' multiple='false' name='package' optional='true'>
      Import package org.springframework.jms.remoting ;version=2.5.0
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.jms.support)(version&gt;=2.5.0))' multiple='false' name='package' optional='true'>
      Import package org.springframework.jms.support ;version=2.5.0
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.jms.support.converter)(version&gt;=2.5.0))' multiple='false' name='package' optional='true'>
      Import package org.springframework.jms.support.converter ;version=2.5.0
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.jms.support.destination)(version&gt;=2.5.0))' multiple='false' name='package' optional='true'>
      Import package org.springframework.jms.support.destination
       ;version=2.5.0
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.jndi)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.springframework.jndi
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.remoting)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.springframework.remoting
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.remoting.support)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.springframework.remoting.support
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.scheduling)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.springframework.scheduling
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.scheduling.timer)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.springframework.scheduling.timer
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.transaction)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.springframework.transaction
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.transaction.support)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.springframework.transaction.support
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.util)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.springframework.util
    </require>
    <require extend='false' filter='(&amp;(package=org.w3c.dom)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.w3c.dom
    </require>
  </resource>
  <resource id='12' presentationname='spring-orm' symbolicname='org.springframework.bundle.spring.orm' uri='http://repo1.maven.org/maven2/org/springframework/spring-orm/2.5/spring-orm-2.5.jar' version='2.5.0'>
    <description>
      Spring Framework
    </description>
    <size>
      361623
    </size>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='spring-orm'/>
      <p n='symbolicname' v='org.springframework.bundle.spring.orm'/>
      <p n='version' t='version' v='2.5.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.orm.jpa'/>
      <p n='uses:' v='org.apache.commons.logging,org.aopalliance.intercept,org.springframework.beans,org.springframework.dao.support,org.springframework.instrument.classloading,javax.persistence,org.springframework.jdbc.datasource,org.springframework.beans.factory,org.springframework.transaction,org.springframework.context.weaving,org.springframework.util,org.springframework.core.io,org.springframework.context,org.springframework.jdbc.datasource.lookup,javax.sql,org.springframework.orm,org.springframework.orm.jpa.persistenceunit,javax.persistence.spi,org.springframework.dao,org.springframework.transaction.support'/>
      <p n='version' t='version' v='2.5.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.orm.toplink'/>
      <p n='uses:' v='oracle.toplink.expressions,oracle.toplink.jndi,org.apache.commons.logging,org.aopalliance.intercept,org.springframework.beans,org.springframework.dao.support,oracle.toplink.sessionbroker,oracle.toplink.queryframework,org.springframework.jdbc.datasource,oracle.toplink.tools.sessionmanagement,org.springframework.beans.factory,org.springframework.transaction,oracle.toplink.sessions,oracle.toplink.tools.sessionconfiguration,org.springframework.util,oracle.toplink.exceptions,oracle.toplink.publicinterface,org.springframework.jdbc.support,org.springframework.orm,javax.sql,oracle.toplink.threetier,oracle.toplink.internal.databaseaccess,org.springframework.dao,org.springframework.transaction.support'/>
      <p n='version' t='version' v='2.5.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.orm.ibatis'/>
      <p n='uses:' v='org.springframework.jdbc,org.apache.commons.logging,com.ibatis.sqlmap.engine.impl,org.springframework.util,org.springframework.core.io,com.ibatis.common.util,com.ibatis.sqlmap.engine.transaction,org.springframework.jdbc.support,com.ibatis.sqlmap.engine.transaction.external,javax.sql,com.ibatis.sqlmap.client.event,org.springframework.jdbc.support.lob,com.ibatis.sqlmap.client,org.springframework.dao,org.springframework.jdbc.datasource,org.springframework.beans.factory'/>
      <p n='version' t='version' v='2.5.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.orm.hibernate3.annotation'/>
      <p n='uses:' v='org.hibernate,org.hibernate.cfg,org.springframework.orm.hibernate3'/>
      <p n='version' t='version' v='2.5.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.orm.jdo'/>
      <p n='uses:' v='org.springframework.transaction,org.apache.commons.logging,org.aopalliance.intercept,org.springframework.util,org.springframework.core.io,org.springframework.core.io.support,org.springframework.dao.support,javax.jdo.datastore,org.springframework.jdbc.support,javax.sql,org.springframework.orm,javax.jdo,org.springframework.dao,org.springframework.transaction.support,org.springframework.jdbc.datasource,org.springframework.beans.factory'/>
      <p n='version' t='version' v='2.5.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.orm.jpa.support'/>
      <p n='uses:' v='org.springframework.orm.jpa,org.apache.commons.logging,org.springframework.beans.factory.annotation,org.springframework.beans,org.springframework.beans.factory.config,org.springframework.dao.support,org.springframework.core,org.springframework.jndi,javax.servlet,javax.persistence,org.springframework.beans.factory,javax.naming,org.springframework.web.filter,org.springframework.util,org.springframework.web.context,org.springframework.ui,org.springframework.web.context.request,org.springframework.dao,org.springframework.transaction.support,org.springframework.web.context.support,javax.servlet.http'/>
      <p n='version' t='version' v='2.5.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.orm.toplink.support'/>
      <p n='uses:' v='org.springframework.orm.toplink,oracle.toplink.sessions,org.apache.commons.logging,org.springframework.util,oracle.toplink.exceptions,oracle.toplink.logging,oracle.toplink.publicinterface,org.springframework.dao.support,oracle.toplink.internal.databaseaccess,org.springframework.dao,org.springframework.beans.factory'/>
      <p n='version' t='version' v='2.5.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.orm.ibatis.support'/>
      <p n='uses:' v='org.springframework.orm.ibatis,javax.sql,org.springframework.jdbc.support.lob,com.ibatis.sqlmap.client,org.springframework.dao.support,org.springframework.transaction.support,com.ibatis.sqlmap.engine.type'/>
      <p n='version' t='version' v='2.5.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.orm.hibernate3.support'/>
      <p n='uses:' v='org.springframework.aop.support,org.hibernate.util,org.apache.commons.logging,org.hibernate.event,org.springframework.dao.support,javax.servlet,org.hibernate.event.def,org.hibernate.engine,org.hibernate.persister.entity,org.springframework.web.filter,org.springframework.aop.scope,org.springframework.web.context,org.springframework.jdbc.support,org.springframework.ui,org.springframework.web.context.request,org.hibernate,org.springframework.jdbc.support.lob,javax.transaction,org.hibernate.usertype,org.springframework.dao,org.springframework.orm.hibernate3,org.springframework.web.context.support,org.springframework.transaction.support,javax.servlet.http'/>
      <p n='version' t='version' v='2.5.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.orm'/>
      <p n='uses:' v='org.springframework.dao'/>
      <p n='version' t='version' v='2.5.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.orm.jpa.vendor'/>
      <p n='uses:' v='org.springframework.orm.jpa,org.springframework.transaction,oracle.toplink.essentials.ejb.cmp3,oracle.toplink.essentials.internal.databaseaccess,org.springframework.jdbc.support,org.hibernate.dialect,org.hibernate,oracle.toplink.essentials.internal.sessions,org.apache.openjpa.persistence,oracle.toplink.essentials.sessions,javax.persistence.spi,org.springframework.dao,javax.persistence,org.springframework.jdbc.datasource,org.springframework.orm.hibernate3,org.hibernate.ejb'/>
      <p n='version' t='version' v='2.5.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.orm.jpa.persistenceunit'/>
      <p n='uses:' v='org.apache.commons.logging,org.springframework.context.weaving,org.springframework.util,org.springframework.core.io,javax.xml.parsers,org.springframework.instrument,org.springframework.context,org.springframework.core.io.support,org.springframework.util.xml,org.w3c.dom,org.xml.sax,org.springframework.jdbc.datasource.lookup,javax.sql,org.springframework.instrument.classloading,javax.persistence.spi,javax.persistence,org.springframework.beans.factory'/>
      <p n='version' t='version' v='2.5.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.orm.jdo.support'/>
      <p n='uses:' v='org.apache.commons.logging,org.springframework.web.filter,org.springframework.web.context,org.springframework.dao.support,org.springframework.orm.jdo,javax.servlet,org.springframework.ui,org.springframework.web.context.request,javax.jdo,org.springframework.dao,org.springframework.transaction.support,org.springframework.web.context.support,javax.servlet.http'/>
      <p n='version' t='version' v='2.5.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.orm.hibernate3'/>
      <p n='uses:' v='org.hibernate.util,org.apache.commons.logging,org.aopalliance.intercept,org.springframework.beans,org.hibernate.type,org.hibernate.exception,org.hibernate.event,org.springframework.dao.support,org.springframework.core,org.hibernate.connection,org.hibernate.classic,org.hibernate.impl,org.hibernate.transaction,org.hibernate.context,org.springframework.jdbc.datasource,org.springframework.beans.factory,org.springframework.transaction,org.hibernate.engine,org.hibernate.cfg,org.springframework.util,org.springframework.core.io,org.springframework.jdbc.support,org.hibernate.dialect,org.hibernate,javax.sql,org.springframework.orm,org.springframework.jdbc.support.lob,org.hibernate.criterion,javax.transaction,org.hibernate.tool.hbm2ddl,org.springframework.transaction.jta,org.springframework.dao,org.springframework.transaction.support'/>
      <p n='version' t='version' v='2.5.0'/>
    </capability>
    <require extend='false' filter='(&amp;(package=com.ibatis.common.util)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package com.ibatis.common.util
    </require>
    <require extend='false' filter='(&amp;(package=com.ibatis.sqlmap.client)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package com.ibatis.sqlmap.client
    </require>
    <require extend='false' filter='(&amp;(package=com.ibatis.sqlmap.client.event)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package com.ibatis.sqlmap.client.event
    </require>
    <require extend='false' filter='(&amp;(package=com.ibatis.sqlmap.engine.impl)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package com.ibatis.sqlmap.engine.impl
    </require>
    <require extend='false' filter='(&amp;(package=com.ibatis.sqlmap.engine.transaction)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package com.ibatis.sqlmap.engine.transaction
    </require>
    <require extend='false' filter='(&amp;(package=com.ibatis.sqlmap.engine.transaction.external)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package com.ibatis.sqlmap.engine.transaction.external
    </require>
    <require extend='false' filter='(&amp;(package=com.ibatis.sqlmap.engine.type)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package com.ibatis.sqlmap.engine.type
    </require>
    <require extend='false' filter='(&amp;(package=javax.jdo)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package javax.jdo
    </require>
    <require extend='false' filter='(&amp;(package=javax.jdo.datastore)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package javax.jdo.datastore
    </require>
    <require extend='false' filter='(&amp;(package=javax.naming)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package javax.naming
    </require>
    <require extend='false' filter='(&amp;(package=javax.persistence)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package javax.persistence
    </require>
    <require extend='false' filter='(&amp;(package=javax.persistence.spi)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package javax.persistence.spi
    </require>
    <require extend='false' filter='(&amp;(package=javax.servlet)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package javax.servlet
    </require>
    <require extend='false' filter='(&amp;(package=javax.servlet.http)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package javax.servlet.http
    </require>
    <require extend='false' filter='(&amp;(package=javax.sql)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package javax.sql
    </require>
    <require extend='false' filter='(&amp;(package=javax.transaction)(version&gt;=1.0.1))' multiple='false' name='package' optional='true'>
      Import package javax.transaction ;version=1.0.1
    </require>
    <require extend='false' filter='(&amp;(package=javax.xml.parsers)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package javax.xml.parsers
    </require>
    <require extend='false' filter='(&amp;(package=oracle.toplink.essentials.ejb.cmp3)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package oracle.toplink.essentials.ejb.cmp3
    </require>
    <require extend='false' filter='(&amp;(package=oracle.toplink.essentials.internal.databaseaccess)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package oracle.toplink.essentials.internal.databaseaccess
    </require>
    <require extend='false' filter='(&amp;(package=oracle.toplink.essentials.internal.sessions)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package oracle.toplink.essentials.internal.sessions
    </require>
    <require extend='false' filter='(&amp;(package=oracle.toplink.essentials.sessions)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package oracle.toplink.essentials.sessions
    </require>
    <require extend='false' filter='(&amp;(package=oracle.toplink.exceptions)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package oracle.toplink.exceptions
    </require>
    <require extend='false' filter='(&amp;(package=oracle.toplink.expressions)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package oracle.toplink.expressions
    </require>
    <require extend='false' filter='(&amp;(package=oracle.toplink.internal.databaseaccess)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package oracle.toplink.internal.databaseaccess
    </require>
    <require extend='false' filter='(&amp;(package=oracle.toplink.jndi)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package oracle.toplink.jndi
    </require>
    <require extend='false' filter='(&amp;(package=oracle.toplink.logging)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package oracle.toplink.logging
    </require>
    <require extend='false' filter='(&amp;(package=oracle.toplink.publicinterface)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package oracle.toplink.publicinterface
    </require>
    <require extend='false' filter='(&amp;(package=oracle.toplink.queryframework)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package oracle.toplink.queryframework
    </require>
    <require extend='false' filter='(&amp;(package=oracle.toplink.sessionbroker)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package oracle.toplink.sessionbroker
    </require>
    <require extend='false' filter='(&amp;(package=oracle.toplink.sessions)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package oracle.toplink.sessions
    </require>
    <require extend='false' filter='(&amp;(package=oracle.toplink.threetier)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package oracle.toplink.threetier
    </require>
    <require extend='false' filter='(&amp;(package=oracle.toplink.tools.sessionconfiguration)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package oracle.toplink.tools.sessionconfiguration
    </require>
    <require extend='false' filter='(&amp;(package=oracle.toplink.tools.sessionmanagement)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package oracle.toplink.tools.sessionmanagement
    </require>
    <require extend='false' filter='(&amp;(package=org.aopalliance.intercept)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.aopalliance.intercept
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.commons.logging)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package org.apache.commons.logging
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.openjpa.persistence)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.apache.openjpa.persistence
    </require>
    <require extend='false' filter='(&amp;(package=org.hibernate)(version&gt;=3.1.0))' multiple='false' name='package' optional='true'>
      Import package org.hibernate ;version=3.1.0
    </require>
    <require extend='false' filter='(&amp;(package=org.hibernate.cfg)(version&gt;=3.1.0))' multiple='false' name='package' optional='true'>
      Import package org.hibernate.cfg ;version=3.1.0
    </require>
    <require extend='false' filter='(&amp;(package=org.hibernate.classic)(version&gt;=3.1.0))' multiple='false' name='package' optional='true'>
      Import package org.hibernate.classic ;version=3.1.0
    </require>
    <require extend='false' filter='(&amp;(package=org.hibernate.connection)(version&gt;=3.1.0))' multiple='false' name='package' optional='true'>
      Import package org.hibernate.connection ;version=3.1.0
    </require>
    <require extend='false' filter='(&amp;(package=org.hibernate.context)(version&gt;=3.1.0))' multiple='false' name='package' optional='true'>
      Import package org.hibernate.context ;version=3.1.0
    </require>
    <require extend='false' filter='(&amp;(package=org.hibernate.criterion)(version&gt;=3.1.0))' multiple='false' name='package' optional='true'>
      Import package org.hibernate.criterion ;version=3.1.0
    </require>
    <require extend='false' filter='(&amp;(package=org.hibernate.dialect)(version&gt;=3.1.0))' multiple='false' name='package' optional='true'>
      Import package org.hibernate.dialect ;version=3.1.0
    </require>
    <require extend='false' filter='(&amp;(package=org.hibernate.ejb)(version&gt;=3.1.0))' multiple='false' name='package' optional='true'>
      Import package org.hibernate.ejb ;version=3.1.0
    </require>
    <require extend='false' filter='(&amp;(package=org.hibernate.engine)(version&gt;=3.1.0))' multiple='false' name='package' optional='true'>
      Import package org.hibernate.engine ;version=3.1.0
    </require>
    <require extend='false' filter='(&amp;(package=org.hibernate.event)(version&gt;=3.1.0))' multiple='false' name='package' optional='true'>
      Import package org.hibernate.event ;version=3.1.0
    </require>
    <require extend='false' filter='(&amp;(package=org.hibernate.event.def)(version&gt;=3.1.0))' multiple='false' name='package' optional='true'>
      Import package org.hibernate.event.def ;version=3.1.0
    </require>
    <require extend='false' filter='(&amp;(package=org.hibernate.exception)(version&gt;=3.1.0))' multiple='false' name='package' optional='true'>
      Import package org.hibernate.exception ;version=3.1.0
    </require>
    <require extend='false' filter='(&amp;(package=org.hibernate.impl)(version&gt;=3.1.0))' multiple='false' name='package' optional='true'>
      Import package org.hibernate.impl ;version=3.1.0
    </require>
    <require extend='false' filter='(&amp;(package=org.hibernate.persister.entity)(version&gt;=3.1.0))' multiple='false' name='package' optional='true'>
      Import package org.hibernate.persister.entity ;version=3.1.0
    </require>
    <require extend='false' filter='(&amp;(package=org.hibernate.tool.hbm2ddl)(version&gt;=3.1.0))' multiple='false' name='package' optional='true'>
      Import package org.hibernate.tool.hbm2ddl ;version=3.1.0
    </require>
    <require extend='false' filter='(&amp;(package=org.hibernate.transaction)(version&gt;=3.1.0))' multiple='false' name='package' optional='true'>
      Import package org.hibernate.transaction ;version=3.1.0
    </require>
    <require extend='false' filter='(&amp;(package=org.hibernate.type)(version&gt;=3.1.0))' multiple='false' name='package' optional='true'>
      Import package org.hibernate.type ;version=3.1.0
    </require>
    <require extend='false' filter='(&amp;(package=org.hibernate.usertype)(version&gt;=3.1.0))' multiple='false' name='package' optional='true'>
      Import package org.hibernate.usertype ;version=3.1.0
    </require>
    <require extend='false' filter='(&amp;(package=org.hibernate.util)(version&gt;=3.1.0))' multiple='false' name='package' optional='true'>
      Import package org.hibernate.util ;version=3.1.0
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.aop.scope)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.springframework.aop.scope
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.aop.support)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.springframework.aop.support
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.beans)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.springframework.beans
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.beans.factory)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.springframework.beans.factory
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.beans.factory.annotation)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.springframework.beans.factory.annotation
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.beans.factory.config)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.springframework.beans.factory.config
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.context)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.springframework.context
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.context.weaving)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.springframework.context.weaving
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.core)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.springframework.core
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.core.io)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.springframework.core.io
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.core.io.support)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.springframework.core.io.support
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.dao)(version&gt;=2.5.0))' multiple='false' name='package' optional='false'>
      Import package org.springframework.dao ;version=2.5.0
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.dao.support)(version&gt;=2.5.0))' multiple='false' name='package' optional='false'>
      Import package org.springframework.dao.support ;version=2.5.0
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.instrument)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.springframework.instrument
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.instrument.classloading)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.springframework.instrument.classloading
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.jdbc)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.springframework.jdbc
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.jdbc.datasource)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.springframework.jdbc.datasource
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.jdbc.datasource.lookup)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.springframework.jdbc.datasource.lookup
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.jdbc.support)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.springframework.jdbc.support
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.jdbc.support.lob)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.springframework.jdbc.support.lob
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.jndi)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.springframework.jndi
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.orm)(version&gt;=2.5.0))' multiple='false' name='package' optional='true'>
      Import package org.springframework.orm ;version=2.5.0
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.orm.hibernate3)(version&gt;=2.5.0))' multiple='false' name='package' optional='true'>
      Import package org.springframework.orm.hibernate3 ;version=2.5.0
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.orm.hibernate3.annotation)(version&gt;=2.5.0))' multiple='false' name='package' optional='true'>
      Import package org.springframework.orm.hibernate3.annotation
       ;version=2.5.0
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.orm.hibernate3.support)(version&gt;=2.5.0))' multiple='false' name='package' optional='true'>
      Import package org.springframework.orm.hibernate3.support ;version=2.5.0
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.orm.ibatis)(version&gt;=2.5.0))' multiple='false' name='package' optional='true'>
      Import package org.springframework.orm.ibatis ;version=2.5.0
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.orm.ibatis.support)(version&gt;=2.5.0))' multiple='false' name='package' optional='true'>
      Import package org.springframework.orm.ibatis.support ;version=2.5.0
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.orm.jdo)(version&gt;=2.5.0))' multiple='false' name='package' optional='true'>
      Import package org.springframework.orm.jdo ;version=2.5.0
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.orm.jdo.support)(version&gt;=2.5.0))' multiple='false' name='package' optional='true'>
      Import package org.springframework.orm.jdo.support ;version=2.5.0
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.orm.jpa)(version&gt;=2.5.0))' multiple='false' name='package' optional='true'>
      Import package org.springframework.orm.jpa ;version=2.5.0
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.orm.jpa.persistenceunit)(version&gt;=2.5.0))' multiple='false' name='package' optional='true'>
      Import package org.springframework.orm.jpa.persistenceunit
       ;version=2.5.0
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.orm.jpa.support)(version&gt;=2.5.0))' multiple='false' name='package' optional='true'>
      Import package org.springframework.orm.jpa.support ;version=2.5.0
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.orm.jpa.vendor)(version&gt;=2.5.0))' multiple='false' name='package' optional='true'>
      Import package org.springframework.orm.jpa.vendor ;version=2.5.0
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.orm.toplink)(version&gt;=2.5.0))' multiple='false' name='package' optional='true'>
      Import package org.springframework.orm.toplink ;version=2.5.0
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.orm.toplink.support)(version&gt;=2.5.0))' multiple='false' name='package' optional='true'>
      Import package org.springframework.orm.toplink.support ;version=2.5.0
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.transaction)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.springframework.transaction
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.transaction.jta)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.springframework.transaction.jta
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.transaction.support)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.springframework.transaction.support
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.ui)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.springframework.ui
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.util)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.springframework.util
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.util.xml)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.springframework.util.xml
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.web.context)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.springframework.web.context
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.web.context.request)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.springframework.web.context.request
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.web.context.support)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.springframework.web.context.support
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.web.filter)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.springframework.web.filter
    </require>
    <require extend='false' filter='(&amp;(package=org.w3c.dom)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.w3c.dom
    </require>
    <require extend='false' filter='(&amp;(package=org.xml.sax)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.xml.sax
    </require>
  </resource>
  <resource id='13' presentationname='spring-test' symbolicname='org.springframework.bundle.spring.test' uri='http://repo1.maven.org/maven2/org/springframework/spring-test/2.5/spring-test-2.5.jar' version='2.5.0'>
    <description>
      Spring Framework
    </description>
    <size>
      177484
    </size>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='spring-test'/>
      <p n='symbolicname' v='org.springframework.bundle.spring.test'/>
      <p n='version' t='version' v='2.5.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.test'/>
      <p n='uses:' v='org.springframework.transaction,org.apache.commons.logging,org.springframework.util,org.springframework.context.support,org.springframework.core.io,org.springframework.context,org.springframework.beans.factory.xml,org.springframework.beans.factory.config,org.springframework.beans.factory.support,junit.framework,javax.sql,org.springframework.jdbc.core,org.springframework.dao,org.springframework.transaction.support,org.springframework.beans.factory'/>
      <p n='version' t='version' v='2.5.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.test.web'/>
      <p n='uses:' v='junit.framework,org.springframework.web.servlet'/>
      <p n='version' t='version' v='2.5.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.test.util'/>
      <p n='uses:' v='org.apache.commons.logging,org.springframework.util'/>
      <p n='version' t='version' v='2.5.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.test.context.testng'/>
      <p n='uses:' v='org.apache.commons.logging,org.springframework.jdbc.core.simple,org.testng.annotations,org.springframework.beans.factory.annotation,org.springframework.test.context.support,org.springframework.core.io,org.springframework.context,org.testng,org.springframework.test.context.transaction,org.springframework.test.context,javax.sql,org.springframework.transaction.annotation,org.springframework.test.jdbc,org.springframework.dao'/>
      <p n='version' t='version' v='2.5.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.test.context.support'/>
      <p n='uses:' v='org.apache.commons.logging,org.springframework.util,org.springframework.context.support,org.springframework.beans.factory.xml,org.springframework.context,org.springframework.beans.factory.config,org.springframework.context.annotation,org.springframework.beans.factory.support,org.springframework.core,org.springframework.test.annotation,org.springframework.test.context'/>
      <p n='version' t='version' v='2.5.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.test.context.junit4'/>
      <p n='uses:' v='org.apache.commons.logging,org.springframework.jdbc.core.simple,org.junit.internal.runners,org.springframework.beans.factory.annotation,org.springframework.test.context.support,org.springframework.core.io,org.junit.runner.notification,org.springframework.context,org.junit,org.springframework.test.context.transaction,org.springframework.test.annotation,org.springframework.test.context,javax.sql,org.springframework.transaction.annotation,org.junit.runner,org.springframework.test.jdbc,org.springframework.dao'/>
      <p n='version' t='version' v='2.5.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.test.context.transaction'/>
      <p n='uses:' v='org.springframework.transaction,org.apache.commons.logging,org.springframework.util,org.springframework.test.context.support,org.springframework.context,org.springframework.transaction.interceptor,org.springframework.core.annotation,org.springframework.test.annotation,org.springframework.test.context,org.springframework.transaction.annotation,org.springframework.core.style'/>
      <p n='version' t='version' v='2.5.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.test.annotation'/>
      <p n='uses:' v='org.springframework.transaction,org.apache.commons.logging,org.springframework.test,org.springframework.jdbc.core.simple,org.springframework.util,org.springframework.context,org.springframework.transaction.interceptor,org.springframework.core.annotation,junit.framework,org.springframework.transaction.annotation,javax.sql,org.springframework.jdbc.core'/>
      <p n='version' t='version' v='2.5.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.test.jpa'/>
      <p n='uses:' v='org.aspectj.weaver.loadtime,org.springframework.orm.jpa,org.springframework.util,org.springframework.context.support,org.springframework.beans,org.springframework.context,org.springframework.beans.factory.xml,org.springframework.instrument,org.springframework.beans.factory.config,org.springframework.beans.factory.support,org.springframework.test.annotation,junit.framework,org.springframework.instrument.classloading,org.springframework.orm.jpa.persistenceunit,javax.persistence'/>
      <p n='version' t='version' v='2.5.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.test.context.junit38'/>
      <p n='uses:' v='org.apache.commons.logging,org.springframework.jdbc.core.simple,org.springframework.beans.factory.annotation,org.springframework.core.io,org.springframework.test.context.support,org.springframework.context,org.springframework.test.context.transaction,org.springframework.test.annotation,junit.framework,org.springframework.test.context,javax.sql,org.springframework.transaction.annotation,org.springframework.test.jdbc,org.springframework.dao'/>
      <p n='version' t='version' v='2.5.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.test.context'/>
      <p n='uses:' v='org.springframework.core,org.apache.commons.logging,org.springframework.util,org.springframework.beans,org.springframework.core.style,org.springframework.context,org.springframework.core.annotation'/>
      <p n='version' t='version' v='2.5.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.mock.jndi'/>
      <p n='uses:' v='org.springframework.jndi,javax.naming,org.apache.commons.logging,org.springframework.util,javax.naming.spi'/>
      <p n='version' t='version' v='2.5.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.test.jdbc'/>
      <p n='uses:' v='org.apache.commons.logging,org.springframework.jdbc.core.simple,org.springframework.util,org.springframework.core.io,org.springframework.dao'/>
      <p n='version' t='version' v='2.5.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.mock.web.portlet'/>
      <p n='uses:' v='org.springframework.web.multipart,org.apache.commons.logging,org.springframework.util,org.springframework.core.io,org.springframework.web.portlet.multipart,javax.portlet'/>
      <p n='version' t='version' v='2.5.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.mock.web'/>
      <p n='uses:' v='org.springframework.web.multipart,org.apache.commons.logging,org.springframework.util,org.springframework.core.io,javax.servlet.jsp,javax.activation,org.apache.taglibs.standard.lang.support,javax.servlet,javax.servlet.jsp.el,javax.servlet.jsp.tagext,javax.servlet.http'/>
      <p n='version' t='version' v='2.5.0'/>
    </capability>
    <require extend='false' filter='(&amp;(package=javax.activation)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package javax.activation
    </require>
    <require extend='false' filter='(&amp;(package=javax.naming)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package javax.naming
    </require>
    <require extend='false' filter='(&amp;(package=javax.naming.spi)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package javax.naming.spi
    </require>
    <require extend='false' filter='(&amp;(package=javax.persistence)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package javax.persistence
    </require>
    <require extend='false' filter='(&amp;(package=javax.portlet)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package javax.portlet
    </require>
    <require extend='false' filter='(&amp;(package=javax.servlet)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package javax.servlet
    </require>
    <require extend='false' filter='(&amp;(package=javax.servlet.http)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package javax.servlet.http
    </require>
    <require extend='false' filter='(&amp;(package=javax.servlet.jsp)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package javax.servlet.jsp
    </require>
    <require extend='false' filter='(&amp;(package=javax.servlet.jsp.el)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package javax.servlet.jsp.el
    </require>
    <require extend='false' filter='(&amp;(package=javax.servlet.jsp.tagext)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package javax.servlet.jsp.tagext
    </require>
    <require extend='false' filter='(&amp;(package=javax.sql)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package javax.sql
    </require>
    <require extend='false' filter='(&amp;(package=junit.framework)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package junit.framework
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.commons.logging)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package org.apache.commons.logging
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.taglibs.standard.lang.support)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.apache.taglibs.standard.lang.support
    </require>
    <require extend='false' filter='(&amp;(package=org.aspectj.weaver.loadtime)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.aspectj.weaver.loadtime
    </require>
    <require extend='false' filter='(&amp;(package=org.junit)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.junit
    </require>
    <require extend='false' filter='(&amp;(package=org.junit.internal.runners)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.junit.internal.runners
    </require>
    <require extend='false' filter='(&amp;(package=org.junit.runner)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.junit.runner
    </require>
    <require extend='false' filter='(&amp;(package=org.junit.runner.notification)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.junit.runner.notification
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.beans)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.springframework.beans
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.beans.factory)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.springframework.beans.factory
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.beans.factory.annotation)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.springframework.beans.factory.annotation
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.beans.factory.config)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.springframework.beans.factory.config
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.beans.factory.support)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.springframework.beans.factory.support
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.beans.factory.xml)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.springframework.beans.factory.xml
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.context)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.springframework.context
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.context.annotation)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.springframework.context.annotation
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.context.support)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.springframework.context.support
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.core)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.springframework.core
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.core.annotation)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.springframework.core.annotation
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.core.io)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.springframework.core.io
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.core.style)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.springframework.core.style
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.dao)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.springframework.dao
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.instrument)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.springframework.instrument
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.instrument.classloading)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.springframework.instrument.classloading
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.jdbc.core)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.springframework.jdbc.core
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.jdbc.core.simple)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.springframework.jdbc.core.simple
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.jndi)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.springframework.jndi
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.mock.jndi)(version&gt;=2.5.0))' multiple='false' name='package' optional='true'>
      Import package org.springframework.mock.jndi ;version=2.5.0
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.mock.web)(version&gt;=2.5.0))' multiple='false' name='package' optional='true'>
      Import package org.springframework.mock.web ;version=2.5.0
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.mock.web.portlet)(version&gt;=2.5.0))' multiple='false' name='package' optional='true'>
      Import package org.springframework.mock.web.portlet ;version=2.5.0
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.orm.jpa)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.springframework.orm.jpa
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.orm.jpa.persistenceunit)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.springframework.orm.jpa.persistenceunit
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.test)(version&gt;=2.5.0))' multiple='false' name='package' optional='true'>
      Import package org.springframework.test ;version=2.5.0
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.test.annotation)(version&gt;=2.5.0))' multiple='false' name='package' optional='true'>
      Import package org.springframework.test.annotation ;version=2.5.0
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.test.context)(version&gt;=2.5.0))' multiple='false' name='package' optional='true'>
      Import package org.springframework.test.context ;version=2.5.0
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.test.context.junit38)(version&gt;=2.5.0))' multiple='false' name='package' optional='true'>
      Import package org.springframework.test.context.junit38 ;version=2.5.0
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.test.context.junit4)(version&gt;=2.5.0))' multiple='false' name='package' optional='true'>
      Import package org.springframework.test.context.junit4 ;version=2.5.0
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.test.context.support)(version&gt;=2.5.0))' multiple='false' name='package' optional='true'>
      Import package org.springframework.test.context.support ;version=2.5.0
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.test.context.testng)(version&gt;=2.5.0))' multiple='false' name='package' optional='true'>
      Import package org.springframework.test.context.testng ;version=2.5.0
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.test.context.transaction)(version&gt;=2.5.0))' multiple='false' name='package' optional='true'>
      Import package org.springframework.test.context.transaction
       ;version=2.5.0
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.test.jdbc)(version&gt;=2.5.0))' multiple='false' name='package' optional='true'>
      Import package org.springframework.test.jdbc ;version=2.5.0
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.test.jpa)(version&gt;=2.5.0))' multiple='false' name='package' optional='true'>
      Import package org.springframework.test.jpa ;version=2.5.0
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.test.util)(version&gt;=2.5.0))' multiple='false' name='package' optional='true'>
      Import package org.springframework.test.util ;version=2.5.0
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.test.web)(version&gt;=2.5.0))' multiple='false' name='package' optional='true'>
      Import package org.springframework.test.web ;version=2.5.0
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.transaction)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.springframework.transaction
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.transaction.annotation)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.springframework.transaction.annotation
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.transaction.interceptor)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.springframework.transaction.interceptor
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.transaction.support)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.springframework.transaction.support
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.util)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.springframework.util
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.web.multipart)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.springframework.web.multipart
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.web.portlet.multipart)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.springframework.web.portlet.multipart
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.web.servlet)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.springframework.web.servlet
    </require>
    <require extend='false' filter='(&amp;(package=org.testng)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.testng
    </require>
    <require extend='false' filter='(&amp;(package=org.testng.annotations)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.testng.annotations
    </require>
  </resource>
  <resource id='14' presentationname='spring-tx' symbolicname='org.springframework.bundle.spring.tx' uri='http://repo1.maven.org/maven2/org/springframework/spring-tx/2.5/spring-tx-2.5.jar' version='2.5.0'>
    <description>
      Spring Framework
    </description>
    <size>
      220734
    </size>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='spring-tx'/>
      <p n='symbolicname' v='org.springframework.bundle.spring.tx'/>
      <p n='version' t='version' v='2.5.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.transaction'/>
      <p n='uses:' v='org.springframework.core,org.springframework.util'/>
      <p n='version' t='version' v='2.5.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.jca.support'/>
      <p n='uses:' v='javax.resource,javax.resource.spi,org.springframework.util,org.springframework.beans,javax.resource.spi.work,org.springframework.beans.factory'/>
      <p n='version' t='version' v='2.5.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.transaction.config'/>
      <p n='uses:' v='org.springframework.util,org.springframework.beans,org.springframework.beans.factory.xml,org.springframework.beans.factory.config,org.springframework.beans.factory.parsing,org.springframework.transaction.interceptor,org.springframework.util.xml,org.w3c.dom,org.springframework.core,org.springframework.beans.factory.support,org.springframework.aop.config,org.springframework.transaction.jta'/>
      <p n='version' t='version' v='2.5.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.jca.cci.object'/>
      <p n='uses:' v='javax.resource,javax.resource.cci,org.springframework.jca.cci.core.support,org.springframework.jca.cci.core,org.springframework.dao,org.springframework.beans.factory'/>
      <p n='version' t='version' v='2.5.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.transaction.interceptor'/>
      <p n='uses:' v='org.springframework.aop.support,org.springframework.transaction,org.apache.commons.logging,org.aopalliance.intercept,org.springframework.aop,org.springframework.util,org.aopalliance.aop,org.springframework.beans.propertyeditors,org.springframework.core,org.springframework.metadata,org.springframework.aop.framework,org.springframework.transaction.support,org.springframework.beans.factory'/>
      <p n='version' t='version' v='2.5.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.dao.support'/>
      <p n='uses:' v='org.apache.commons.logging,org.aopalliance.intercept,org.springframework.util,org.springframework.beans,org.springframework.dao,org.springframework.beans.factory'/>
      <p n='version' t='version' v='2.5.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.jca.work'/>
      <p n='uses:' v='org.springframework.scheduling,javax.resource.spi,org.springframework.util,javax.transaction.xa,org.springframework.jca.context,javax.resource.spi.work,org.springframework.core.task'/>
      <p n='version' t='version' v='2.5.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.jca.endpoint'/>
      <p n='uses:' v='org.springframework.aop.support,org.apache.commons.logging,javax.resource,org.aopalliance.intercept,org.springframework.util,org.springframework.context,org.aopalliance.aop,javax.resource.spi.endpoint,javax.resource.spi,javax.transaction,org.springframework.aop.framework,javax.transaction.xa,org.springframework.transaction.jta,org.springframework.beans.factory'/>
      <p n='version' t='version' v='2.5.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.jca.cci'/>
      <p n='uses:' v='javax.resource,org.springframework.dao'/>
      <p n='version' t='version' v='2.5.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.jca.cci.core.support'/>
      <p n='uses:' v='org.springframework.jca.cci,javax.resource.cci,org.springframework.jca.cci.core,org.springframework.util,org.springframework.dao.support,org.springframework.jca.cci.connection'/>
      <p n='version' t='version' v='2.5.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.jca.cci.core'/>
      <p n='uses:' v='org.springframework.jca.cci,org.apache.commons.logging,javax.resource,javax.resource.cci,org.springframework.util,org.springframework.dao,org.springframework.jca.cci.connection'/>
      <p n='version' t='version' v='2.5.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.transaction.annotation'/>
      <p n='uses:' v='javax.ejb,org.springframework.util,org.springframework.transaction.interceptor,org.springframework.transaction.support'/>
      <p n='version' t='version' v='2.5.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.transaction.jta'/>
      <p n='uses:' v='javax.naming,org.springframework.transaction,com.ibm.wsspi.uow,org.apache.commons.logging,org.springframework.util,org.objectweb.jotm,org.springframework.jndi,javax.transaction,org.springframework.transaction.support,org.springframework.beans.factory'/>
      <p n='version' t='version' v='2.5.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.dao.annotation'/>
      <p n='uses:' v='org.springframework.aop.support,org.springframework.aop,org.springframework.util,org.springframework.beans,org.springframework.aop.support.annotation,org.springframework.beans.factory.config,org.aopalliance.aop,org.springframework.dao.support,org.springframework.core,org.springframework.aop.framework,org.springframework.stereotype,org.springframework.beans.factory'/>
      <p n='version' t='version' v='2.5.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.jca.context'/>
      <p n='uses:' v='org.apache.commons.logging,javax.resource,org.springframework.util,org.springframework.context.support,org.springframework.beans,org.springframework.beans.factory.xml,org.springframework.context,org.springframework.beans.factory.config,javax.resource.spi.endpoint,org.springframework.beans.factory.support,javax.resource.spi,javax.transaction.xa'/>
      <p n='version' t='version' v='2.5.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.dao'/>
      <p n='uses:' v='org.springframework.core'/>
      <p n='version' t='version' v='2.5.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.transaction.support'/>
      <p n='uses:' v='org.springframework.core,org.springframework.transaction,org.apache.commons.logging,org.springframework.util,org.springframework.beans.factory'/>
      <p n='version' t='version' v='2.5.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.jca.cci.connection'/>
      <p n='uses:' v='org.springframework.transaction,javax.naming,org.apache.commons.logging,javax.resource,org.springframework.util,javax.resource.cci,org.springframework.jca.cci,javax.resource.spi,org.springframework.transaction.support,org.springframework.beans.factory'/>
      <p n='version' t='version' v='2.5.0'/>
    </capability>
    <require extend='false' filter='(&amp;(package=com.evermind.server)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package com.evermind.server
    </require>
    <require extend='false' filter='(&amp;(package=com.ibm.ws.Transaction)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package com.ibm.ws.Transaction
    </require>
    <require extend='false' filter='(&amp;(package=com.ibm.wsspi.uow)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package com.ibm.wsspi.uow
    </require>
    <require extend='false' filter='(&amp;(package=javax.ejb)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package javax.ejb
    </require>
    <require extend='false' filter='(&amp;(package=javax.naming)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package javax.naming
    </require>
    <require extend='false' filter='(&amp;(package=javax.resource)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package javax.resource
    </require>
    <require extend='false' filter='(&amp;(package=javax.resource.cci)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package javax.resource.cci
    </require>
    <require extend='false' filter='(&amp;(package=javax.resource.spi)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package javax.resource.spi
    </require>
    <require extend='false' filter='(&amp;(package=javax.resource.spi.endpoint)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package javax.resource.spi.endpoint
    </require>
    <require extend='false' filter='(&amp;(package=javax.resource.spi.work)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package javax.resource.spi.work
    </require>
    <require extend='false' filter='(&amp;(package=javax.transaction)(version&gt;=1.0.1))' multiple='false' name='package' optional='true'>
      Import package javax.transaction ;version=1.0.1
    </require>
    <require extend='false' filter='(&amp;(package=javax.transaction.xa)(version&gt;=1.0.1))' multiple='false' name='package' optional='true'>
      Import package javax.transaction.xa ;version=1.0.1
    </require>
    <require extend='false' filter='(&amp;(package=oracle.j2ee.transaction)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package oracle.j2ee.transaction
    </require>
    <require extend='false' filter='(&amp;(package=org.aopalliance.aop)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.aopalliance.aop
    </require>
    <require extend='false' filter='(&amp;(package=org.aopalliance.intercept)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.aopalliance.intercept
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.commons.logging)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package org.apache.commons.logging
    </require>
    <require extend='false' filter='(&amp;(package=org.objectweb.jotm)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.objectweb.jotm
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.aop)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.springframework.aop
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.aop.config)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.springframework.aop.config
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.aop.framework)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.springframework.aop.framework
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.aop.support)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.springframework.aop.support
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.aop.support.annotation)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.springframework.aop.support.annotation
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.beans)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.springframework.beans
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.beans.factory)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.springframework.beans.factory
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.beans.factory.config)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.springframework.beans.factory.config
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.beans.factory.parsing)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.springframework.beans.factory.parsing
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.beans.factory.support)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.springframework.beans.factory.support
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.beans.factory.xml)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.springframework.beans.factory.xml
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.beans.propertyeditors)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.springframework.beans.propertyeditors
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.context)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.springframework.context
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.context.support)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.springframework.context.support
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.core)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.springframework.core
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.core.task)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.springframework.core.task
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.dao)(version&gt;=2.5.0))' multiple='false' name='package' optional='true'>
      Import package org.springframework.dao ;version=2.5.0
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.dao.annotation)(version&gt;=2.5.0))' multiple='false' name='package' optional='true'>
      Import package org.springframework.dao.annotation ;version=2.5.0
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.dao.support)(version&gt;=2.5.0))' multiple='false' name='package' optional='true'>
      Import package org.springframework.dao.support ;version=2.5.0
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.jca.cci)(version&gt;=2.5.0))' multiple='false' name='package' optional='true'>
      Import package org.springframework.jca.cci ;version=2.5.0
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.jca.cci.connection)(version&gt;=2.5.0))' multiple='false' name='package' optional='true'>
      Import package org.springframework.jca.cci.connection ;version=2.5.0
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.jca.cci.core)(version&gt;=2.5.0))' multiple='false' name='package' optional='true'>
      Import package org.springframework.jca.cci.core ;version=2.5.0
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.jca.cci.core.support)(version&gt;=2.5.0))' multiple='false' name='package' optional='true'>
      Import package org.springframework.jca.cci.core.support ;version=2.5.0
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.jca.cci.object)(version&gt;=2.5.0))' multiple='false' name='package' optional='true'>
      Import package org.springframework.jca.cci.object ;version=2.5.0
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.jca.context)(version&gt;=2.5.0))' multiple='false' name='package' optional='true'>
      Import package org.springframework.jca.context ;version=2.5.0
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.jca.endpoint)(version&gt;=2.5.0))' multiple='false' name='package' optional='true'>
      Import package org.springframework.jca.endpoint ;version=2.5.0
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.jca.support)(version&gt;=2.5.0))' multiple='false' name='package' optional='true'>
      Import package org.springframework.jca.support ;version=2.5.0
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.jca.work)(version&gt;=2.5.0))' multiple='false' name='package' optional='true'>
      Import package org.springframework.jca.work ;version=2.5.0
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.jndi)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.springframework.jndi
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.metadata)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.springframework.metadata
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.scheduling)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.springframework.scheduling
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.stereotype)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.springframework.stereotype
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.transaction)(version&gt;=2.5.0))' multiple='false' name='package' optional='true'>
      Import package org.springframework.transaction ;version=2.5.0
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.transaction.annotation)(version&gt;=2.5.0))' multiple='false' name='package' optional='true'>
      Import package org.springframework.transaction.annotation ;version=2.5.0
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.transaction.config)(version&gt;=2.5.0))' multiple='false' name='package' optional='true'>
      Import package org.springframework.transaction.config ;version=2.5.0
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.transaction.interceptor)(version&gt;=2.5.0))' multiple='false' name='package' optional='true'>
      Import package org.springframework.transaction.interceptor
       ;version=2.5.0
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.transaction.jta)(version&gt;=2.5.0))' multiple='false' name='package' optional='true'>
      Import package org.springframework.transaction.jta ;version=2.5.0
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.transaction.support)(version&gt;=2.5.0))' multiple='false' name='package' optional='true'>
      Import package org.springframework.transaction.support ;version=2.5.0
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.util)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.springframework.util
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.util.xml)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.springframework.util.xml
    </require>
    <require extend='false' filter='(&amp;(package=org.w3c.dom)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.w3c.dom
    </require>
  </resource>
  <resource id='15' presentationname='spring-web' symbolicname='org.springframework.bundle.spring.web' uri='http://repo1.maven.org/maven2/org/springframework/spring-web/2.5/spring-web-2.5.jar' version='2.5.0'>
    <description>
      Spring Framework
    </description>
    <size>
      221465
    </size>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='spring-web'/>
      <p n='symbolicname' v='org.springframework.bundle.spring.web'/>
      <p n='version' t='version' v='2.5.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.web.multipart'/>
      <p n='uses:' v='org.springframework.core,javax.servlet.http'/>
      <p n='version' t='version' v='2.5.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.web'/>
      <p n='uses:' v='javax.servlet,javax.servlet.http'/>
      <p n='version' t='version' v='2.5.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.web.bind.support'/>
      <p n='uses:' v='org.springframework.web.context.request,org.springframework.web.bind,org.springframework.util,org.springframework.beans,org.springframework.validation'/>
      <p n='version' t='version' v='2.5.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.remoting.caucho'/>
      <p n='uses:' v='org.springframework.web,com.caucho.hessian.client,com.caucho.hessian.io,org.aopalliance.intercept,org.springframework.util,com.caucho.hessian.server,com.caucho.burlap.io,javax.servlet,org.springframework.remoting.support,org.springframework.remoting,com.caucho.burlap.server,org.springframework.aop.framework,com.caucho.burlap.client,org.springframework.web.util,javax.servlet.http,org.springframework.beans.factory'/>
      <p n='version' t='version' v='2.5.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.web.jsf.el'/>
      <p n='uses:' v='javax.el,org.apache.commons.logging,javax.faces.context,org.springframework.beans,org.springframework.web.jsf,org.springframework.web.context,org.springframework.beans.factory'/>
      <p n='version' t='version' v='2.5.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.web.filter'/>
      <p n='uses:' v='org.apache.commons.logging,org.springframework.context.i18n,org.apache.log4j,org.springframework.util,org.springframework.beans,org.springframework.core.io,org.springframework.web.context,javax.servlet,org.springframework.web.context.request,org.springframework.web.util,org.springframework.web.context.support,org.springframework.beans.factory,javax.servlet.http'/>
      <p n='version' t='version' v='2.5.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.web.multipart.commons'/>
      <p n='uses:' v='org.springframework.web.multipart,org.apache.commons.fileupload.disk,org.apache.commons.logging,org.apache.commons.fileupload,org.springframework.util,org.apache.commons.fileupload.servlet,org.springframework.core.io,org.springframework.web.context,javax.servlet,org.springframework.web.multipart.support,org.springframework.web.util,javax.servlet.http'/>
      <p n='version' t='version' v='2.5.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.web.jsf'/>
      <p n='uses:' v='org.apache.commons.logging,javax.faces.application,javax.faces.context,org.springframework.util,javax.faces.el,org.springframework.web.util,org.springframework.web.context,javax.faces.event,org.springframework.beans.factory'/>
      <p n='version' t='version' v='2.5.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.web.context'/>
      <p n='uses:' v='org.apache.commons.logging,org.springframework.context.access,org.springframework.util,org.springframework.beans,org.springframework.core.io,org.springframework.context,org.springframework.core.io.support,javax.servlet,org.springframework.beans.factory.access,javax.servlet.http,org.springframework.beans.factory'/>
      <p n='version' t='version' v='2.5.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.remoting.jaxrpc'/>
      <p n='uses:' v='org.springframework.aop.support,org.apache.commons.logging,org.aopalliance.intercept,org.springframework.context.support,org.springframework.beans,javax.xml.namespace,javax.servlet,javax.xml.rpc.server,org.springframework.web.util,org.springframework.remoting.rmi,org.springframework.beans.factory,org.springframework.remoting.soap,org.springframework.util,org.springframework.context,org.springframework.web.context,javax.xml.rpc,org.springframework.remoting,org.springframework.aop.framework,javax.xml.rpc.soap,org.springframework.web.context.support'/>
      <p n='version' t='version' v='2.5.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.remoting.jaxrpc.support'/>
      <p n='uses:' v='javax.xml.rpc.encoding,org.springframework.util,org.apache.axis.encoding.ser,org.springframework.remoting.jaxrpc,org.springframework.beans.factory,javax.xml.namespace,javax.xml.rpc'/>
      <p n='version' t='version' v='2.5.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.web.context.request'/>
      <p n='uses:' v='org.apache.commons.logging,org.apache.log4j,org.springframework.context.i18n,org.springframework.util,org.springframework.beans.factory.config,javax.servlet,org.springframework.ui,org.springframework.web.util,org.springframework.beans.factory,javax.servlet.http'/>
      <p n='version' t='version' v='2.5.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.web.bind'/>
      <p n='uses:' v='org.springframework.web.multipart,javax.servlet,org.springframework.web,org.springframework.beans,org.springframework.validation,org.springframework.web.util,javax.servlet.http'/>
      <p n='version' t='version' v='2.5.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.remoting.jaxws'/>
      <p n='uses:' v='org.springframework.aop.support,javax.jws,org.aopalliance.intercept,org.springframework.util,javax.xml.namespace,javax.xml.ws.handler,org.springframework.remoting,org.springframework.core.task.support,org.springframework.aop.framework,javax.xml.soap,org.springframework.core.task,javax.xml.ws,org.springframework.remoting.soap,org.springframework.beans.factory,javax.xml.ws.soap'/>
      <p n='version' t='version' v='2.5.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.web.bind.annotation'/>
      <p n='version' t='version' v='2.5.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.web.multipart.support'/>
      <p n='uses:' v='org.springframework.web.multipart,org.apache.commons.logging,org.springframework.web.filter,org.springframework.web.context,org.springframework.beans.propertyeditors,javax.servlet,org.springframework.web.context.support,javax.servlet.http'/>
      <p n='version' t='version' v='2.5.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.web.util'/>
      <p n='uses:' v='org.apache.commons.logging,org.springframework.util,org.springframework.beans,javax.servlet.jsp,org.springframework.core,org.apache.taglibs.standard.lang.support,javax.servlet,javax.servlet.jsp.el,javax.servlet.jsp.tagext,javax.servlet.http'/>
      <p n='version' t='version' v='2.5.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.web.context.support'/>
      <p n='uses:' v='org.springframework.web,org.apache.commons.logging,org.springframework.ui.context,org.springframework.util,org.springframework.context.support,org.springframework.beans,org.springframework.core.io,org.springframework.beans.factory.xml,org.springframework.context,org.springframework.beans.factory.config,org.springframework.core.io.support,org.springframework.web.context,org.xml.sax,org.springframework.beans.factory.support,javax.servlet,org.springframework.web.context.request,org.springframework.ui.context.support,org.springframework.web.util,org.springframework.beans.factory,javax.servlet.http'/>
      <p n='version' t='version' v='2.5.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.remoting.httpinvoker'/>
      <p n='uses:' v='org.springframework.aop.support,org.springframework.web,org.apache.commons.logging,org.aopalliance.intercept,org.springframework.util,org.apache.commons.httpclient,javax.servlet,org.springframework.remoting,org.springframework.remoting.support,org.apache.commons.httpclient.methods,org.apache.commons.httpclient.params,org.springframework.aop.framework,org.springframework.web.util,org.springframework.remoting.rmi,javax.servlet.http,org.springframework.beans.factory'/>
      <p n='version' t='version' v='2.5.0'/>
    </capability>
    <require extend='false' filter='(&amp;(package=com.caucho.burlap.client)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package com.caucho.burlap.client
    </require>
    <require extend='false' filter='(&amp;(package=com.caucho.burlap.io)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package com.caucho.burlap.io
    </require>
    <require extend='false' filter='(&amp;(package=com.caucho.burlap.server)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package com.caucho.burlap.server
    </require>
    <require extend='false' filter='(&amp;(package=com.caucho.hessian.client)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package com.caucho.hessian.client
    </require>
    <require extend='false' filter='(&amp;(package=com.caucho.hessian.io)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package com.caucho.hessian.io
    </require>
    <require extend='false' filter='(&amp;(package=com.caucho.hessian.server)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package com.caucho.hessian.server
    </require>
    <require extend='false' filter='(&amp;(package=javax.el)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package javax.el
    </require>
    <require extend='false' filter='(&amp;(package=javax.faces.application)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package javax.faces.application
    </require>
    <require extend='false' filter='(&amp;(package=javax.faces.context)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package javax.faces.context
    </require>
    <require extend='false' filter='(&amp;(package=javax.faces.el)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package javax.faces.el
    </require>
    <require extend='false' filter='(&amp;(package=javax.faces.event)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package javax.faces.event
    </require>
    <require extend='false' filter='(&amp;(package=javax.jws)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package javax.jws
    </require>
    <require extend='false' filter='(&amp;(package=javax.servlet)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package javax.servlet
    </require>
    <require extend='false' filter='(&amp;(package=javax.servlet.http)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package javax.servlet.http
    </require>
    <require extend='false' filter='(&amp;(package=javax.servlet.jsp)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package javax.servlet.jsp
    </require>
    <require extend='false' filter='(&amp;(package=javax.servlet.jsp.el)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package javax.servlet.jsp.el
    </require>
    <require extend='false' filter='(&amp;(package=javax.servlet.jsp.tagext)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package javax.servlet.jsp.tagext
    </require>
    <require extend='false' filter='(&amp;(package=javax.xml.namespace)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package javax.xml.namespace
    </require>
    <require extend='false' filter='(&amp;(package=javax.xml.rpc)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package javax.xml.rpc
    </require>
    <require extend='false' filter='(&amp;(package=javax.xml.rpc.encoding)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package javax.xml.rpc.encoding
    </require>
    <require extend='false' filter='(&amp;(package=javax.xml.rpc.server)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package javax.xml.rpc.server
    </require>
    <require extend='false' filter='(&amp;(package=javax.xml.rpc.soap)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package javax.xml.rpc.soap
    </require>
    <require extend='false' filter='(&amp;(package=javax.xml.soap)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package javax.xml.soap
    </require>
    <require extend='false' filter='(&amp;(package=javax.xml.ws)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package javax.xml.ws
    </require>
    <require extend='false' filter='(&amp;(package=javax.xml.ws.handler)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package javax.xml.ws.handler
    </require>
    <require extend='false' filter='(&amp;(package=javax.xml.ws.soap)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package javax.xml.ws.soap
    </require>
    <require extend='false' filter='(&amp;(package=org.aopalliance.intercept)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.aopalliance.intercept
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.axis.encoding.ser)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.apache.axis.encoding.ser
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.commons.fileupload)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.apache.commons.fileupload
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.commons.fileupload.disk)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.apache.commons.fileupload.disk
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.commons.fileupload.servlet)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.apache.commons.fileupload.servlet
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.commons.httpclient)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.apache.commons.httpclient
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.commons.httpclient.methods)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.apache.commons.httpclient.methods
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.commons.httpclient.params)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.apache.commons.httpclient.params
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.commons.logging)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package org.apache.commons.logging
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.log4j)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.apache.log4j
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.taglibs.standard.lang.support)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.apache.taglibs.standard.lang.support
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.aop.framework)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.springframework.aop.framework
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.aop.support)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.springframework.aop.support
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.beans)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.springframework.beans
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.beans.factory)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.springframework.beans.factory
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.beans.factory.access)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.springframework.beans.factory.access
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.beans.factory.config)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.springframework.beans.factory.config
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.beans.factory.support)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.springframework.beans.factory.support
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.beans.factory.xml)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.springframework.beans.factory.xml
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.beans.propertyeditors)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.springframework.beans.propertyeditors
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.context)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.springframework.context
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.context.access)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.springframework.context.access
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.context.i18n)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.springframework.context.i18n
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.context.support)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.springframework.context.support
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.core)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.springframework.core
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.core.io)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.springframework.core.io
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.core.io.support)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.springframework.core.io.support
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.core.task)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.springframework.core.task
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.core.task.support)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.springframework.core.task.support
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.remoting)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.springframework.remoting
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.remoting.caucho)(version&gt;=2.5.0))' multiple='false' name='package' optional='true'>
      Import package org.springframework.remoting.caucho ;version=2.5.0
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.remoting.httpinvoker)(version&gt;=2.5.0))' multiple='false' name='package' optional='true'>
      Import package org.springframework.remoting.httpinvoker ;version=2.5.0
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.remoting.jaxrpc)(version&gt;=2.5.0))' multiple='false' name='package' optional='true'>
      Import package org.springframework.remoting.jaxrpc ;version=2.5.0
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.remoting.jaxrpc.support)(version&gt;=2.5.0))' multiple='false' name='package' optional='true'>
      Import package org.springframework.remoting.jaxrpc.support
       ;version=2.5.0
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.remoting.jaxws)(version&gt;=2.5.0))' multiple='false' name='package' optional='true'>
      Import package org.springframework.remoting.jaxws ;version=2.5.0
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.remoting.rmi)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.springframework.remoting.rmi
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.remoting.soap)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.springframework.remoting.soap
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.remoting.support)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.springframework.remoting.support
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.ui)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.springframework.ui
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.ui.context)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.springframework.ui.context
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.ui.context.support)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.springframework.ui.context.support
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.util)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.springframework.util
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.validation)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.springframework.validation
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.web)(version&gt;=2.5.0))' multiple='false' name='package' optional='true'>
      Import package org.springframework.web ;version=2.5.0
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.web.bind)(version&gt;=2.5.0))' multiple='false' name='package' optional='true'>
      Import package org.springframework.web.bind ;version=2.5.0
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.web.bind.annotation)(version&gt;=2.5.0))' multiple='false' name='package' optional='true'>
      Import package org.springframework.web.bind.annotation ;version=2.5.0
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.web.bind.support)(version&gt;=2.5.0))' multiple='false' name='package' optional='true'>
      Import package org.springframework.web.bind.support ;version=2.5.0
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.web.context)(version&gt;=2.5.0))' multiple='false' name='package' optional='true'>
      Import package org.springframework.web.context ;version=2.5.0
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.web.context.request)(version&gt;=2.5.0))' multiple='false' name='package' optional='true'>
      Import package org.springframework.web.context.request ;version=2.5.0
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.web.context.support)(version&gt;=2.5.0))' multiple='false' name='package' optional='true'>
      Import package org.springframework.web.context.support ;version=2.5.0
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.web.filter)(version&gt;=2.5.0))' multiple='false' name='package' optional='true'>
      Import package org.springframework.web.filter ;version=2.5.0
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.web.jsf)(version&gt;=2.5.0))' multiple='false' name='package' optional='true'>
      Import package org.springframework.web.jsf ;version=2.5.0
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.web.jsf.el)(version&gt;=2.5.0))' multiple='false' name='package' optional='true'>
      Import package org.springframework.web.jsf.el ;version=2.5.0
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.web.multipart)(version&gt;=2.5.0))' multiple='false' name='package' optional='true'>
      Import package org.springframework.web.multipart ;version=2.5.0
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.web.multipart.commons)(version&gt;=2.5.0))' multiple='false' name='package' optional='true'>
      Import package org.springframework.web.multipart.commons ;version=2.5.0
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.web.multipart.support)(version&gt;=2.5.0))' multiple='false' name='package' optional='true'>
      Import package org.springframework.web.multipart.support ;version=2.5.0
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.web.util)(version&gt;=2.5.0))' multiple='false' name='package' optional='true'>
      Import package org.springframework.web.util ;version=2.5.0
    </require>
    <require extend='false' filter='(&amp;(package=org.xml.sax)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.xml.sax
    </require>
  </resource>
  <resource id='16' presentationname='geronimo-activation_1.1_spec' symbolicname='org.apache.geronimo.specs.geronimo-activation_1.1_spec' uri='http://people.apache.org/repo/m2-snapshot-repository/org/apache/geronimo/specs/geronimo-activation_1.1_spec/1.0.1-SNAPSHOT/geronimo-activation_1.1_spec-1.0.1-SNAPSHOT.jar' version='1.0.1.SNAPSHOT'>
    <description>
      Provides open-source implementations of Sun specifications.
    </description>
    <size>
      35749
    </size>
    <license>
      http://www.apache.org/licenses/LICENSE-2.0.txt
    </license>
    <documentation>
      http://www.apache.org
    </documentation>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='geronimo-activation_1.1_spec'/>
      <p n='symbolicname' v='org.apache.geronimo.specs.geronimo-activation_1.1_spec'/>
      <p n='version' t='version' v='1.0.1.SNAPSHOT'/>
    </capability>
    <capability name='package'>
      <p n='package' v='javax.activation'/>
      <p n='version' t='version' v='1.1.0'/>
    </capability>
    <require extend='false' filter='(&amp;(package=javax.activation)(version&gt;=1.1.0))' multiple='false' name='package' optional='false'>
      Import package javax.activation ;version=1.1.0
    </require>
  </resource>
  <resource id='17' presentationname='geronimo-annotation_1.0_spec' symbolicname='org.apache.geronimo.specs.geronimo-annotation_1.0_spec' uri='http://people.apache.org/repo/m2-snapshot-repository/org/apache/geronimo/specs/geronimo-annotation_1.0_spec/1.1.1-SNAPSHOT/geronimo-annotation_1.0_spec-1.1.1-SNAPSHOT.jar' version='1.1.1.SNAPSHOT'>
    <description>
      Provides open-source implementations of Sun specifications.
    </description>
    <size>
      12992
    </size>
    <license>
      http://www.apache.org/licenses/LICENSE-2.0.txt
    </license>
    <documentation>
      http://www.apache.org
    </documentation>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='geronimo-annotation_1.0_spec'/>
      <p n='symbolicname' v='org.apache.geronimo.specs.geronimo-annotation_1.0_spec'/>
      <p n='version' t='version' v='1.1.1.SNAPSHOT'/>
    </capability>
    <capability name='package'>
      <p n='package' v='javax.annotation'/>
      <p n='version' t='version' v='1.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='javax.annotation.security'/>
      <p n='version' t='version' v='1.0.0'/>
    </capability>
    <require extend='false' filter='(&amp;(package=javax.annotation)(version&gt;=1.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.annotation ;version=1.0.0
    </require>
    <require extend='false' filter='(&amp;(package=javax.annotation.security)(version&gt;=1.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.annotation.security ;version=1.0.0
    </require>
  </resource>
  <resource id='18' presentationname='geronimo-commonj_1.1_spec' symbolicname='org.apache.geronimo.specs.geronimo-commonj_1.1_spec' uri='http://people.apache.org/repo/m2-snapshot-repository/org/apache/geronimo/specs/geronimo-commonj_1.1_spec/1.1-SNAPSHOT/geronimo-commonj_1.1_spec-1.1-SNAPSHOT.jar' version='1.1.0.SNAPSHOT'>
    <description>
      Provides open-source implementations of Sun specifications.
    </description>
    <size>
      7046
    </size>
    <license>
      http://www.apache.org/licenses/LICENSE-2.0.txt
    </license>
    <documentation>
      http://www.apache.org
    </documentation>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='geronimo-commonj_1.1_spec'/>
      <p n='symbolicname' v='org.apache.geronimo.specs.geronimo-commonj_1.1_spec'/>
      <p n='version' t='version' v='1.1.0.SNAPSHOT'/>
    </capability>
    <require extend='false' filter='(&amp;(package=*)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package *
    </require>
  </resource>
  <resource id='19' presentationname='geronimo-ejb_3.0_spec' symbolicname='org.apache.geronimo.specs.geronimo-ejb_3.0_spec' uri='http://people.apache.org/repo/m2-snapshot-repository/org/apache/geronimo/specs/geronimo-ejb_3.0_spec/1.0.1-SNAPSHOT/geronimo-ejb_3.0_spec-1.0.1-SNAPSHOT.jar' version='1.0.1.SNAPSHOT'>
    <description>
      Provides open-source implementations of Sun specifications.
    </description>
    <size>
      33449
    </size>
    <license>
      http://www.apache.org/licenses/LICENSE-2.0.txt
    </license>
    <documentation>
      http://www.apache.org
    </documentation>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='geronimo-ejb_3.0_spec'/>
      <p n='symbolicname' v='org.apache.geronimo.specs.geronimo-ejb_3.0_spec'/>
      <p n='version' t='version' v='1.0.1.SNAPSHOT'/>
    </capability>
    <capability name='package'>
      <p n='package' v='javax.ejb'/>
      <p n='uses:' v='javax.xml.rpc.handler,javax.transaction'/>
      <p n='version' t='version' v='0.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='javax.xml.rpc.handler'/>
      <p n='version' t='version' v='3.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='javax.ejb.spi'/>
      <p n='uses:' v='javax.ejb'/>
      <p n='version' t='version' v='0.0.0'/>
    </capability>
    <require extend='false' filter='(&amp;(package=javax.ejb)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.ejb
    </require>
    <require extend='false' filter='(&amp;(package=javax.ejb.spi)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.ejb.spi
    </require>
    <require extend='false' filter='(&amp;(package=javax.transaction)(version&gt;=1.1.0))' multiple='false' name='package' optional='false'>
      Import package javax.transaction ;version=1.1.0
    </require>
    <require extend='false' filter='(&amp;(package=javax.xml.rpc.handler)(version&gt;=3.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.xml.rpc.handler ;version=3.0.0
    </require>
  </resource>
  <resource id='20' presentationname='geronimo-el_1.0_spec' symbolicname='org.apache.geronimo.specs.geronimo-el_1.0_spec' uri='http://people.apache.org/repo/m2-snapshot-repository/org/apache/geronimo/specs/geronimo-el_1.0_spec/1.0.1-SNAPSHOT/geronimo-el_1.0_spec-1.0.1-SNAPSHOT.jar' version='1.0.1.SNAPSHOT'>
    <description>
      Provides open-source implementations of Sun specifications.
    </description>
    <size>
      35248
    </size>
    <license>
      http://www.apache.org/licenses/LICENSE-2.0.txt
    </license>
    <documentation>
      http://www.apache.org
    </documentation>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='geronimo-el_1.0_spec'/>
      <p n='symbolicname' v='org.apache.geronimo.specs.geronimo-el_1.0_spec'/>
      <p n='version' t='version' v='1.0.1.SNAPSHOT'/>
    </capability>
    <capability name='package'>
      <p n='package' v='javax.el'/>
      <p n='version' t='version' v='1.0.0'/>
    </capability>
    <require extend='false' filter='(&amp;(package=javax.el)(version&gt;=1.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.el ;version=1.0.0
    </require>
  </resource>
  <resource id='21' presentationname='geronimo-interceptor_3.0_spec' symbolicname='org.apache.geronimo.specs.geronimo-interceptor_3.0_spec' uri='http://people.apache.org/repo/m2-snapshot-repository/org/apache/geronimo/specs/geronimo-interceptor_3.0_spec/1.0.1-SNAPSHOT/geronimo-interceptor_3.0_spec-1.0.1-SNAPSHOT.jar' version='1.0.1.SNAPSHOT'>
    <description>
      Provides open-source implementations of Sun specifications.
    </description>
    <size>
      9639
    </size>
    <license>
      http://www.apache.org/licenses/LICENSE-2.0.txt
    </license>
    <documentation>
      http://www.apache.org
    </documentation>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='geronimo-interceptor_3.0_spec'/>
      <p n='symbolicname' v='org.apache.geronimo.specs.geronimo-interceptor_3.0_spec'/>
      <p n='version' t='version' v='1.0.1.SNAPSHOT'/>
    </capability>
    <capability name='package'>
      <p n='package' v='javax.interceptor'/>
      <p n='version' t='version' v='3.0.0'/>
    </capability>
    <require extend='false' filter='(&amp;(package=javax.interceptor)(version&gt;=3.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.interceptor ;version=3.0.0
    </require>
  </resource>
  <resource id='22' presentationname='geronimo-j2ee-connector_1.5_spec' symbolicname='org.apache.geronimo.specs.geronimo-j2ee-connector_1.5_spec' uri='http://people.apache.org/repo/m2-snapshot-repository/org/apache/geronimo/specs/geronimo-j2ee-connector_1.5_spec/2.0-SNAPSHOT/geronimo-j2ee-connector_1.5_spec-2.0-SNAPSHOT.jar' version='2.0.0.SNAPSHOT'>
    <description>
      Provides open-source implementations of Sun specifications.
    </description>
    <size>
      38865
    </size>
    <license>
      http://www.apache.org/licenses/LICENSE-2.0.txt
    </license>
    <documentation>
      http://www.apache.org
    </documentation>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='geronimo-j2ee-connector_1.5_spec'/>
      <p n='symbolicname' v='org.apache.geronimo.specs.geronimo-j2ee-connector_1.5_spec'/>
      <p n='version' t='version' v='2.0.0.SNAPSHOT'/>
    </capability>
    <capability name='package'>
      <p n='package' v='javax.resource.spi.endpoint'/>
      <p n='uses:' v='javax.resource.spi,javax.resource,javax.transaction.xa'/>
      <p n='version' t='version' v='1.5.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='javax.resource.spi'/>
      <p n='uses:' v='javax.resource.spi.endpoint,javax.resource.spi.work,javax.resource,javax.transaction.xa,javax.security.auth'/>
      <p n='version' t='version' v='1.5.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='javax.resource.spi.work'/>
      <p n='uses:' v='javax.resource,javax.transaction.xa'/>
      <p n='version' t='version' v='1.5.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='javax.resource.spi.security'/>
      <p n='uses:' v='javax.resource.spi'/>
      <p n='version' t='version' v='1.5.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='javax.resource'/>
      <p n='uses:' v='javax.naming'/>
      <p n='version' t='version' v='1.5.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='javax.resource.cci'/>
      <p n='uses:' v='javax.resource'/>
      <p n='version' t='version' v='1.5.0'/>
    </capability>
    <require extend='false' filter='(&amp;(package=javax.naming)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.naming
    </require>
    <require extend='false' filter='(&amp;(package=javax.resource)(version&gt;=1.5.0))' multiple='false' name='package' optional='false'>
      Import package javax.resource ;version=1.5.0
    </require>
    <require extend='false' filter='(&amp;(package=javax.resource.cci)(version&gt;=1.5.0))' multiple='false' name='package' optional='false'>
      Import package javax.resource.cci ;version=1.5.0
    </require>
    <require extend='false' filter='(&amp;(package=javax.resource.spi)(version&gt;=1.5.0))' multiple='false' name='package' optional='false'>
      Import package javax.resource.spi ;version=1.5.0
    </require>
    <require extend='false' filter='(&amp;(package=javax.resource.spi.endpoint)(version&gt;=1.5.0))' multiple='false' name='package' optional='false'>
      Import package javax.resource.spi.endpoint ;version=1.5.0
    </require>
    <require extend='false' filter='(&amp;(package=javax.resource.spi.security)(version&gt;=1.5.0))' multiple='false' name='package' optional='false'>
      Import package javax.resource.spi.security ;version=1.5.0
    </require>
    <require extend='false' filter='(&amp;(package=javax.resource.spi.work)(version&gt;=1.5.0))' multiple='false' name='package' optional='false'>
      Import package javax.resource.spi.work ;version=1.5.0
    </require>
    <require extend='false' filter='(&amp;(package=javax.security.auth)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.security.auth
    </require>
    <require extend='false' filter='(&amp;(package=javax.transaction.xa)(version&gt;=1.1.0))' multiple='false' name='package' optional='false'>
      Import package javax.transaction.xa ;version=1.1.0
    </require>
  </resource>
  <resource id='23' presentationname='geronimo-j2ee-management_1.1_spec' symbolicname='org.apache.geronimo.specs.geronimo-j2ee-management_1.1_spec' uri='http://people.apache.org/repo/m2-snapshot-repository/org/apache/geronimo/specs/geronimo-j2ee-management_1.1_spec/1.0.1-SNAPSHOT/geronimo-j2ee-management_1.1_spec-1.0.1-SNAPSHOT.jar' version='1.0.1.SNAPSHOT'>
    <description>
      Provides open-source implementations of Sun specifications.
    </description>
    <size>
      21199
    </size>
    <license>
      http://www.apache.org/licenses/LICENSE-2.0.txt
    </license>
    <documentation>
      http://www.apache.org
    </documentation>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='geronimo-j2ee-management_1.1_spec'/>
      <p n='symbolicname' v='org.apache.geronimo.specs.geronimo-j2ee-management_1.1_spec'/>
      <p n='version' t='version' v='1.0.1.SNAPSHOT'/>
    </capability>
    <capability name='package'>
      <p n='package' v='javax.management.j2ee.statistics'/>
      <p n='version' t='version' v='1.1.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='javax.management.j2ee'/>
      <p n='uses:' v='javax.ejb,javax.management'/>
      <p n='version' t='version' v='1.1.0'/>
    </capability>
    <require extend='false' filter='(&amp;(package=javax.ejb)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package javax.ejb
    </require>
    <require extend='false' filter='(&amp;(package=javax.management)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.management
    </require>
    <require extend='false' filter='(&amp;(package=javax.management.j2ee)(version&gt;=1.1.0))' multiple='false' name='package' optional='false'>
      Import package javax.management.j2ee ;version=1.1.0
    </require>
    <require extend='false' filter='(&amp;(package=javax.management.j2ee.statistics)(version&gt;=1.1.0))' multiple='false' name='package' optional='false'>
      Import package javax.management.j2ee.statistics ;version=1.1.0
    </require>
  </resource>
  <resource id='24' presentationname='geronimo-jacc_1.1_spec' symbolicname='org.apache.geronimo.specs.geronimo-jacc_1.1_spec' uri='http://people.apache.org/repo/m2-snapshot-repository/org/apache/geronimo/specs/geronimo-jacc_1.1_spec/1.0.1-SNAPSHOT/geronimo-jacc_1.1_spec-1.0.1-SNAPSHOT.jar' version='1.0.1.SNAPSHOT'>
    <description>
      Provides open-source implementations of Sun specifications.
    </description>
    <size>
      34574
    </size>
    <license>
      http://www.apache.org/licenses/LICENSE-2.0.txt
    </license>
    <documentation>
      http://www.apache.org
    </documentation>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='geronimo-jacc_1.1_spec'/>
      <p n='symbolicname' v='org.apache.geronimo.specs.geronimo-jacc_1.1_spec'/>
      <p n='version' t='version' v='1.0.1.SNAPSHOT'/>
    </capability>
    <capability name='package'>
      <p n='package' v='javax.security.jacc'/>
      <p n='uses:' v='javax.servlet.http'/>
      <p n='version' t='version' v='1.1.0'/>
    </capability>
    <require extend='false' filter='(&amp;(package=javax.security.jacc)(version&gt;=1.1.0))' multiple='false' name='package' optional='false'>
      Import package javax.security.jacc ;version=1.1.0
    </require>
    <require extend='false' filter='(&amp;(package=javax.servlet.http)(version&gt;=2.5.0))' multiple='false' name='package' optional='false'>
      Import package javax.servlet.http ;version=2.5.0
    </require>
  </resource>
  <resource id='25' presentationname='geronimo-jaspi_1.0_spec' symbolicname='org.apache.geronimo.specs.geronimo-jaspi_1.0_spec' uri='http://people.apache.org/repo/m2-snapshot-repository/org/apache/geronimo/specs/geronimo-jaspi_1.0_spec/1.0-SNAPSHOT/geronimo-jaspi_1.0_spec-1.0-SNAPSHOT.jar' version='1.0.0.SNAPSHOT'>
    <description>
      Provides open-source implementations of Sun specifications.
    </description>
    <size>
      30026
    </size>
    <license>
      http://www.apache.org/licenses/LICENSE-2.0.txt
    </license>
    <documentation>
      http://www.apache.org
    </documentation>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='geronimo-jaspi_1.0_spec'/>
      <p n='symbolicname' v='org.apache.geronimo.specs.geronimo-jaspi_1.0_spec'/>
      <p n='version' t='version' v='1.0.0.SNAPSHOT'/>
    </capability>
    <capability name='package'>
      <p n='package' v='javax.security.auth.message.config'/>
      <p n='uses:' v='javax.security.auth,javax.security.auth.message,javax.security.auth.callback'/>
      <p n='version' t='version' v='1.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='javax.security.auth.message.callback'/>
      <p n='uses:' v='javax.security.auth.x500,javax.crypto,javax.security.auth,javax.security.auth.callback'/>
      <p n='version' t='version' v='1.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='javax.security.auth.message'/>
      <p n='uses:' v='javax.security.auth.login,javax.security.auth'/>
      <p n='version' t='version' v='1.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='javax.security.auth.message.module'/>
      <p n='uses:' v='javax.security.auth.message,javax.security.auth.callback'/>
      <p n='version' t='version' v='1.0.0'/>
    </capability>
    <require extend='false' filter='(&amp;(package=javax.crypto)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.crypto
    </require>
    <require extend='false' filter='(&amp;(package=javax.security.auth)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.security.auth
    </require>
    <require extend='false' filter='(&amp;(package=javax.security.auth.callback)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.security.auth.callback
    </require>
    <require extend='false' filter='(&amp;(package=javax.security.auth.login)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.security.auth.login
    </require>
    <require extend='false' filter='(&amp;(package=javax.security.auth.message)(version&gt;=1.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.security.auth.message ;version=1.0.0
    </require>
    <require extend='false' filter='(&amp;(package=javax.security.auth.message.callback)(version&gt;=1.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.security.auth.message.callback ;version=1.0.0
    </require>
    <require extend='false' filter='(&amp;(package=javax.security.auth.message.config)(version&gt;=1.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.security.auth.message.config ;version=1.0.0
    </require>
    <require extend='false' filter='(&amp;(package=javax.security.auth.message.module)(version&gt;=1.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.security.auth.message.module ;version=1.0.0
    </require>
    <require extend='false' filter='(&amp;(package=javax.security.auth.x500)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.security.auth.x500
    </require>
  </resource>
  <resource id='26' presentationname='geronimo-javamail_1.4_spec' symbolicname='org.apache.geronimo.specs.geronimo-javamail_1.4_spec' uri='http://people.apache.org/repo/m2-snapshot-repository/org/apache/geronimo/specs/geronimo-javamail_1.4_spec/1.2-SNAPSHOT/geronimo-javamail_1.4_spec-1.2-SNAPSHOT.jar' version='1.2.0.SNAPSHOT'>
    <description>
      Provides open-source implementations of Sun specifications.
    </description>
    <size>
      200269
    </size>
    <license>
      http://www.apache.org/licenses/LICENSE-2.0.txt
    </license>
    <documentation>
      http://www.apache.org
    </documentation>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='geronimo-javamail_1.4_spec'/>
      <p n='symbolicname' v='org.apache.geronimo.specs.geronimo-javamail_1.4_spec'/>
      <p n='version' t='version' v='1.2.0.SNAPSHOT'/>
    </capability>
    <capability name='package'>
      <p n='package' v='javax.mail.search'/>
      <p n='uses:' v='javax.mail'/>
      <p n='version' t='version' v='1.4.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='javax.mail.util'/>
      <p n='uses:' v='javax.mail.internet,javax.activation'/>
      <p n='version' t='version' v='1.4.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='javax.mail.event'/>
      <p n='uses:' v='javax.mail'/>
      <p n='version' t='version' v='1.4.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='javax.mail.internet'/>
      <p n='uses:' v='javax.activation,javax.mail,org.apache.geronimo.mail.util'/>
      <p n='version' t='version' v='1.4.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='javax.mail'/>
      <p n='uses:' v='javax.mail.search,javax.mail.event,javax.activation'/>
      <p n='version' t='version' v='1.4.0'/>
    </capability>
    <require extend='false' filter='(&amp;(package=javax.activation)(version&gt;=1.1.0))' multiple='false' name='package' optional='false'>
      Import package javax.activation ;version=1.1.0
    </require>
    <require extend='false' filter='(&amp;(package=javax.mail)(version&gt;=1.4.0))' multiple='false' name='package' optional='false'>
      Import package javax.mail ;version=1.4.0
    </require>
    <require extend='false' filter='(&amp;(package=javax.mail.event)(version&gt;=1.4.0))' multiple='false' name='package' optional='false'>
      Import package javax.mail.event ;version=1.4.0
    </require>
    <require extend='false' filter='(&amp;(package=javax.mail.internet)(version&gt;=1.4.0))' multiple='false' name='package' optional='false'>
      Import package javax.mail.internet ;version=1.4.0
    </require>
    <require extend='false' filter='(&amp;(package=javax.mail.search)(version&gt;=1.4.0))' multiple='false' name='package' optional='false'>
      Import package javax.mail.search ;version=1.4.0
    </require>
    <require extend='false' filter='(&amp;(package=javax.mail.util)(version&gt;=1.4.0))' multiple='false' name='package' optional='false'>
      Import package javax.mail.util ;version=1.4.0
    </require>
  </resource>
  <resource id='27' presentationname='geronimo-jaxr_1.0_spec' symbolicname='org.apache.geronimo.specs.geronimo-jaxr_1.0_spec' uri='http://people.apache.org/repo/m2-snapshot-repository/org/apache/geronimo/specs/geronimo-jaxr_1.0_spec/2.0-SNAPSHOT/geronimo-jaxr_1.0_spec-2.0-SNAPSHOT.jar' version='2.0.0.SNAPSHOT'>
    <description>
      Provides open-source implementations of Sun specifications.
    </description>
    <size>
      35609
    </size>
    <license>
      http://www.apache.org/licenses/LICENSE-2.0.txt
    </license>
    <documentation>
      http://www.apache.org
    </documentation>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='geronimo-jaxr_1.0_spec'/>
      <p n='symbolicname' v='org.apache.geronimo.specs.geronimo-jaxr_1.0_spec'/>
      <p n='version' t='version' v='2.0.0.SNAPSHOT'/>
    </capability>
    <capability name='package'>
      <p n='package' v='javax.xml.registry.infomodel'/>
      <p n='uses:' v='javax.activation,javax.xml.registry'/>
      <p n='version' t='version' v='1.1.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='javax.xml.registry'/>
      <p n='uses:' v='javax.activation,javax.xml.registry.infomodel'/>
      <p n='version' t='version' v='1.1.0'/>
    </capability>
    <require extend='false' filter='(&amp;(package=javax.activation)(version&gt;=1.1.0))' multiple='false' name='package' optional='false'>
      Import package javax.activation ;version=1.1.0
    </require>
    <require extend='false' filter='(&amp;(package=javax.xml.registry)(version&gt;=1.1.0))' multiple='false' name='package' optional='false'>
      Import package javax.xml.registry ;version=1.1.0
    </require>
    <require extend='false' filter='(&amp;(package=javax.xml.registry.infomodel)(version&gt;=1.1.0))' multiple='false' name='package' optional='false'>
      Import package javax.xml.registry.infomodel ;version=1.1.0
    </require>
  </resource>
  <resource id='28' presentationname='geronimo-jaxrpc_1.1_spec' symbolicname='org.apache.geronimo.specs.geronimo-jaxrpc_1.1_spec' uri='http://people.apache.org/repo/m2-snapshot-repository/org/apache/geronimo/specs/geronimo-jaxrpc_1.1_spec/2.0-SNAPSHOT/geronimo-jaxrpc_1.1_spec-2.0-SNAPSHOT.jar' version='2.0.0.SNAPSHOT'>
    <description>
      Provides open-source implementations of Sun specifications.
    </description>
    <size>
      36613
    </size>
    <license>
      http://www.apache.org/licenses/LICENSE-2.0.txt
    </license>
    <documentation>
      http://www.apache.org
    </documentation>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='geronimo-jaxrpc_1.1_spec'/>
      <p n='symbolicname' v='org.apache.geronimo.specs.geronimo-jaxrpc_1.1_spec'/>
      <p n='version' t='version' v='2.0.0.SNAPSHOT'/>
    </capability>
    <capability name='package'>
      <p n='package' v='javax.xml.rpc.handler'/>
      <p n='uses:' v='javax.xml.namespace'/>
      <p n='version' t='version' v='1.1.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='javax.xml.rpc.holders'/>
      <p n='uses:' v='javax.xml.namespace'/>
      <p n='version' t='version' v='1.1.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='javax.xml.rpc.encoding'/>
      <p n='uses:' v='javax.xml.namespace'/>
      <p n='version' t='version' v='1.1.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='javax.xml.rpc'/>
      <p n='uses:' v='javax.xml.rpc.handler,javax.xml.rpc.encoding,javax.xml.namespace'/>
      <p n='version' t='version' v='1.1.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='javax.xml.rpc.handler.soap'/>
      <p n='uses:' v='javax.xml.soap,javax.xml.rpc.handler'/>
      <p n='version' t='version' v='1.1.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='javax.xml.rpc.server'/>
      <p n='uses:' v='javax.servlet.http,javax.servlet,javax.xml.rpc.handler,javax.xml.rpc'/>
      <p n='version' t='version' v='1.1.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='javax.xml.rpc.soap'/>
      <p n='uses:' v='javax.xml.soap,javax.xml.namespace'/>
      <p n='version' t='version' v='1.1.0'/>
    </capability>
    <require extend='false' filter='(&amp;(package=javax.servlet)(version&gt;=2.5.0))' multiple='false' name='package' optional='false'>
      Import package javax.servlet ;version=2.5.0
    </require>
    <require extend='false' filter='(&amp;(package=javax.servlet.http)(version&gt;=2.5.0))' multiple='false' name='package' optional='false'>
      Import package javax.servlet.http ;version=2.5.0
    </require>
    <require extend='false' filter='(&amp;(package=javax.xml.namespace)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.xml.namespace
    </require>
    <require extend='false' filter='(&amp;(package=javax.xml.rpc)(version&gt;=1.1.0))' multiple='false' name='package' optional='false'>
      Import package javax.xml.rpc ;version=1.1.0
    </require>
    <require extend='false' filter='(&amp;(package=javax.xml.rpc.encoding)(version&gt;=1.1.0))' multiple='false' name='package' optional='false'>
      Import package javax.xml.rpc.encoding ;version=1.1.0
    </require>
    <require extend='false' filter='(&amp;(package=javax.xml.rpc.handler)(version&gt;=1.1.0))' multiple='false' name='package' optional='false'>
      Import package javax.xml.rpc.handler ;version=1.1.0
    </require>
    <require extend='false' filter='(&amp;(package=javax.xml.rpc.handler.soap)(version&gt;=1.1.0))' multiple='false' name='package' optional='false'>
      Import package javax.xml.rpc.handler.soap ;version=1.1.0
    </require>
    <require extend='false' filter='(&amp;(package=javax.xml.rpc.holders)(version&gt;=1.1.0))' multiple='false' name='package' optional='false'>
      Import package javax.xml.rpc.holders ;version=1.1.0
    </require>
    <require extend='false' filter='(&amp;(package=javax.xml.rpc.server)(version&gt;=1.1.0))' multiple='false' name='package' optional='false'>
      Import package javax.xml.rpc.server ;version=1.1.0
    </require>
    <require extend='false' filter='(&amp;(package=javax.xml.rpc.soap)(version&gt;=1.1.0))' multiple='false' name='package' optional='false'>
      Import package javax.xml.rpc.soap ;version=1.1.0
    </require>
    <require extend='false' filter='(&amp;(package=javax.xml.soap)(version&gt;=1.3.0))' multiple='false' name='package' optional='false'>
      Import package javax.xml.soap ;version=1.3.0
    </require>
  </resource>
  <resource id='29' presentationname='geronimo-jms_1.1_spec' symbolicname='org.apache.geronimo.specs.geronimo-jms_1.1_spec' uri='http://people.apache.org/repo/m2-snapshot-repository/org/apache/geronimo/specs/geronimo-jms_1.1_spec/1.1.1-SNAPSHOT/geronimo-jms_1.1_spec-1.1.1-SNAPSHOT.jar' version='1.1.1.SNAPSHOT'>
    <description>
      Provides open-source implementations of Sun specifications.
    </description>
    <size>
      33546
    </size>
    <license>
      http://www.apache.org/licenses/LICENSE-2.0.txt
    </license>
    <documentation>
      http://www.apache.org
    </documentation>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='geronimo-jms_1.1_spec'/>
      <p n='symbolicname' v='org.apache.geronimo.specs.geronimo-jms_1.1_spec'/>
      <p n='version' t='version' v='1.1.1.SNAPSHOT'/>
    </capability>
    <capability name='package'>
      <p n='package' v='javax.jms'/>
      <p n='uses:' v='javax.transaction.xa'/>
      <p n='version' t='version' v='1.1.0'/>
    </capability>
    <require extend='false' filter='(&amp;(package=javax.jms)(version&gt;=1.1.0))' multiple='false' name='package' optional='false'>
      Import package javax.jms ;version=1.1.0
    </require>
    <require extend='false' filter='(&amp;(package=javax.transaction.xa)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.transaction.xa
    </require>
  </resource>
  <resource id='30' presentationname='geronimo-jpa_3.0_spec' symbolicname='org.apache.geronimo.specs.geronimo-jpa_3.0_spec' uri='http://people.apache.org/repo/m2-snapshot-repository/org/apache/geronimo/specs/geronimo-jpa_3.0_spec/1.1.1-SNAPSHOT/geronimo-jpa_3.0_spec-1.1.1-SNAPSHOT.jar' version='1.1.1.SNAPSHOT'>
    <description>
      Provides open-source implementations of Sun specifications.
    </description>
    <size>
      54691
    </size>
    <license>
      http://www.apache.org/licenses/LICENSE-2.0.txt
    </license>
    <documentation>
      http://www.apache.org
    </documentation>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='geronimo-jpa_3.0_spec'/>
      <p n='symbolicname' v='org.apache.geronimo.specs.geronimo-jpa_3.0_spec'/>
      <p n='version' t='version' v='1.1.1.SNAPSHOT'/>
    </capability>
    <capability name='package'>
      <p n='package' v='javax.persistence.spi'/>
      <p n='uses:' v='javax.persistence,javax.sql'/>
      <p n='version' t='version' v='3.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='javax.persistence'/>
      <p n='uses:' v='javax.persistence.spi'/>
      <p n='version' t='version' v='3.0.0'/>
    </capability>
    <require extend='false' filter='(&amp;(package=javax.persistence)(version&gt;=3.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.persistence ;version=3.0.0
    </require>
    <require extend='false' filter='(&amp;(package=javax.persistence.spi)(version&gt;=3.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.persistence.spi ;version=3.0.0
    </require>
    <require extend='false' filter='(&amp;(package=javax.sql)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.sql
    </require>
  </resource>
  <resource id='31' presentationname='geronimo-jsp_2.1_spec' symbolicname='org.apache.geronimo.specs.geronimo-jsp_2.1_spec' uri='http://people.apache.org/repo/m2-snapshot-repository/org/apache/geronimo/specs/geronimo-jsp_2.1_spec/1.0.1-SNAPSHOT/geronimo-jsp_2.1_spec-1.0.1-SNAPSHOT.jar' version='1.0.1.SNAPSHOT'>
    <description>
      Provides open-source implementations of Sun specifications.
    </description>
    <size>
      56793
    </size>
    <license>
      http://www.apache.org/licenses/LICENSE-2.0.txt
    </license>
    <documentation>
      http://www.apache.org
    </documentation>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='geronimo-jsp_2.1_spec'/>
      <p n='symbolicname' v='org.apache.geronimo.specs.geronimo-jsp_2.1_spec'/>
      <p n='version' t='version' v='1.0.1.SNAPSHOT'/>
    </capability>
    <capability name='package'>
      <p n='package' v='javax.servlet.jsp.tagext'/>
      <p n='uses:' v='javax.servlet.jsp'/>
      <p n='version' t='version' v='2.1.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='javax.servlet.jsp.el'/>
      <p n='uses:' v='javax.servlet.http,javax.servlet,javax.servlet.jsp,javax.el'/>
      <p n='version' t='version' v='2.1.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='javax.servlet.jsp'/>
      <p n='uses:' v='javax.servlet.http,javax.servlet,javax.servlet.jsp.tagext,javax.servlet.jsp.el,javax.el'/>
      <p n='version' t='version' v='2.1.0'/>
    </capability>
    <require extend='false' filter='(&amp;(package=javax.el)(version&gt;=1.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.el ;version=1.0.0
    </require>
    <require extend='false' filter='(&amp;(package=javax.servlet)(version&gt;=2.5.0))' multiple='false' name='package' optional='false'>
      Import package javax.servlet ;version=2.5.0
    </require>
    <require extend='false' filter='(&amp;(package=javax.servlet.http)(version&gt;=2.5.0))' multiple='false' name='package' optional='false'>
      Import package javax.servlet.http ;version=2.5.0
    </require>
    <require extend='false' filter='(&amp;(package=javax.servlet.jsp)(version&gt;=2.1.0))' multiple='false' name='package' optional='false'>
      Import package javax.servlet.jsp ;version=2.1.0
    </require>
    <require extend='false' filter='(&amp;(package=javax.servlet.jsp.el)(version&gt;=2.1.0))' multiple='false' name='package' optional='false'>
      Import package javax.servlet.jsp.el ;version=2.1.0
    </require>
    <require extend='false' filter='(&amp;(package=javax.servlet.jsp.tagext)(version&gt;=2.1.0))' multiple='false' name='package' optional='false'>
      Import package javax.servlet.jsp.tagext ;version=2.1.0
    </require>
  </resource>
  <resource id='32' presentationname='geronimo-jta_1.1_spec' symbolicname='org.apache.geronimo.specs.geronimo-jta_1.1_spec' uri='http://people.apache.org/repo/m2-snapshot-repository/org/apache/geronimo/specs/geronimo-jta_1.1_spec/1.1.1-SNAPSHOT/geronimo-jta_1.1_spec-1.1.1-SNAPSHOT.jar' version='1.1.1.SNAPSHOT'>
    <description>
      Provides open-source implementations of Sun specifications.
    </description>
    <size>
      16523
    </size>
    <license>
      http://www.apache.org/licenses/LICENSE-2.0.txt
    </license>
    <documentation>
      http://www.apache.org
    </documentation>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='geronimo-jta_1.1_spec'/>
      <p n='symbolicname' v='org.apache.geronimo.specs.geronimo-jta_1.1_spec'/>
      <p n='version' t='version' v='1.1.1.SNAPSHOT'/>
    </capability>
    <capability name='package'>
      <p n='package' v='javax.transaction.xa'/>
      <p n='version' t='version' v='1.1.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='javax.transaction'/>
      <p n='uses:' v='javax.transaction.xa'/>
      <p n='version' t='version' v='1.1.0'/>
    </capability>
    <require extend='false' filter='(&amp;(package=javax.transaction)(version&gt;=1.1.0))' multiple='false' name='package' optional='false'>
      Import package javax.transaction ;version=1.1.0
    </require>
    <require extend='false' filter='(&amp;(package=javax.transaction.xa)(version&gt;=1.1.0))' multiple='false' name='package' optional='false'>
      Import package javax.transaction.xa ;version=1.1.0
    </require>
  </resource>
  <resource id='33' presentationname='geronimo-saaj_1.3_spec' symbolicname='org.apache.geronimo.specs.geronimo-saaj_1.3_spec' uri='http://people.apache.org/repo/m2-snapshot-repository/org/apache/geronimo/specs/geronimo-saaj_1.3_spec/1.0-SNAPSHOT/geronimo-saaj_1.3_spec-1.0-SNAPSHOT.jar' version='1.0.0.SNAPSHOT'>
    <description>
      Provides open-source implementations of Sun specifications.
    </description>
    <size>
      30058
    </size>
    <license>
      http://www.apache.org/licenses/LICENSE-2.0.txt
    </license>
    <documentation>
      http://www.apache.org
    </documentation>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='geronimo-saaj_1.3_spec'/>
      <p n='symbolicname' v='org.apache.geronimo.specs.geronimo-saaj_1.3_spec'/>
      <p n='version' t='version' v='1.0.0.SNAPSHOT'/>
    </capability>
    <capability name='package'>
      <p n='package' v='javax.xml.soap'/>
      <p n='uses:' v='javax.xml.transform.dom,javax.xml.namespace,javax.activation,org.w3c.dom,javax.xml.transform'/>
      <p n='version' t='version' v='1.3.0'/>
    </capability>
    <require extend='false' filter='(&amp;(package=javax.activation)(version&gt;=1.1.0))' multiple='false' name='package' optional='false'>
      Import package javax.activation ;version=1.1.0
    </require>
    <require extend='false' filter='(&amp;(package=javax.xml.namespace)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.xml.namespace
    </require>
    <require extend='false' filter='(&amp;(package=javax.xml.soap)(version&gt;=1.3.0))' multiple='false' name='package' optional='false'>
      Import package javax.xml.soap ;version=1.3.0
    </require>
    <require extend='false' filter='(&amp;(package=javax.xml.transform)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.xml.transform
    </require>
    <require extend='false' filter='(&amp;(package=javax.xml.transform.dom)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.xml.transform.dom
    </require>
    <require extend='false' filter='(&amp;(package=org.w3c.dom)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package org.w3c.dom
    </require>
  </resource>
  <resource id='34' presentationname='geronimo-servlet_2.5_spec' symbolicname='org.apache.geronimo.specs.geronimo-servlet_2.5_spec' uri='http://people.apache.org/repo/m2-snapshot-repository/org/apache/geronimo/specs/geronimo-servlet_2.5_spec/1.1.1-SNAPSHOT/geronimo-servlet_2.5_spec-1.1.1-SNAPSHOT.jar' version='1.1.1.SNAPSHOT'>
    <description>
      Servlet 2.5 Specification
    </description>
    <size>
      71739
    </size>
    <license>
      http://www.apache.org/licenses/LICENSE-2.0.txt
    </license>
    <documentation>
      http://www.apache.org
    </documentation>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='geronimo-servlet_2.5_spec'/>
      <p n='symbolicname' v='org.apache.geronimo.specs.geronimo-servlet_2.5_spec'/>
      <p n='version' t='version' v='1.1.1.SNAPSHOT'/>
    </capability>
    <capability name='package'>
      <p n='package' v='javax.servlet.http'/>
      <p n='uses:' v='javax.servlet'/>
      <p n='version' t='version' v='2.5.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='javax.servlet'/>
      <p n='version' t='version' v='2.5.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='javax.servlet.resources'/>
      <p n='version' t='version' v='2.5.0'/>
    </capability>
    <require extend='false' filter='(&amp;(package=javax.servlet)(version&gt;=2.5.0))' multiple='false' name='package' optional='false'>
      Import package javax.servlet ;version=2.5.0
    </require>
    <require extend='false' filter='(&amp;(package=javax.servlet.http)(version&gt;=2.5.0))' multiple='false' name='package' optional='false'>
      Import package javax.servlet.http ;version=2.5.0
    </require>
    <require extend='false' filter='(&amp;(package=javax.servlet.resources)(version&gt;=2.5.0))' multiple='false' name='package' optional='false'>
      Import package javax.servlet.resources ;version=2.5.0
    </require>
  </resource>
  <resource id='35' presentationname='geronimo-stax-api_1.0_spec' symbolicname='org.apache.geronimo.specs.geronimo-stax-api_1.0_spec' uri='http://people.apache.org/repo/m2-snapshot-repository/org/apache/geronimo/specs/geronimo-stax-api_1.0_spec/1.0.1-SNAPSHOT/geronimo-stax-api_1.0_spec-1.0.1-SNAPSHOT.jar' version='1.0.1.SNAPSHOT'>
    <description>
      Provides open-source implementations of Sun specifications.
    </description>
    <size>
      28833
    </size>
    <license>
      http://www.apache.org/licenses/LICENSE-2.0.txt
    </license>
    <documentation>
      http://www.apache.org
    </documentation>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='geronimo-stax-api_1.0_spec'/>
      <p n='symbolicname' v='org.apache.geronimo.specs.geronimo-stax-api_1.0_spec'/>
      <p n='version' t='version' v='1.0.1.SNAPSHOT'/>
    </capability>
    <capability name='package'>
      <p n='package' v='javax.xml.stream.events'/>
      <p n='uses:' v='javax.xml.namespace,javax.xml.stream'/>
      <p n='version' t='version' v='1.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='javax.xml.stream.util'/>
      <p n='uses:' v='javax.xml.stream.events,javax.xml.namespace,javax.xml.stream'/>
      <p n='version' t='version' v='1.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='javax.xml.stream'/>
      <p n='uses:' v='javax.xml.stream.events,javax.xml.namespace,javax.xml.transform,javax.xml.stream.util'/>
      <p n='version' t='version' v='1.0.0'/>
    </capability>
    <require extend='false' filter='(&amp;(package=javax.xml.namespace)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.xml.namespace
    </require>
    <require extend='false' filter='(&amp;(package=javax.xml.stream)(version&gt;=1.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.xml.stream ;version=1.0.0
    </require>
    <require extend='false' filter='(&amp;(package=javax.xml.stream.events)(version&gt;=1.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.xml.stream.events ;version=1.0.0
    </require>
    <require extend='false' filter='(&amp;(package=javax.xml.stream.util)(version&gt;=1.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.xml.stream.util ;version=1.0.0
    </require>
    <require extend='false' filter='(&amp;(package=javax.xml.transform)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.xml.transform
    </require>
  </resource>
  <resource id='36' presentationname='geronimo-ws-metadata_2.0_spec' symbolicname='org.apache.geronimo.specs.geronimo-ws-metadata_2.0_spec' uri='http://people.apache.org/repo/m2-snapshot-repository/org/apache/geronimo/specs/geronimo-ws-metadata_2.0_spec/1.1.2-SNAPSHOT/geronimo-ws-metadata_2.0_spec-1.1.2-SNAPSHOT.jar' version='1.1.2.SNAPSHOT'>
    <description>
      Provides open-source implementations of Sun specifications.
    </description>
    <size>
      15261
    </size>
    <license>
      http://www.apache.org/licenses/LICENSE-2.0.txt
    </license>
    <documentation>
      http://www.apache.org
    </documentation>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='geronimo-ws-metadata_2.0_spec'/>
      <p n='symbolicname' v='org.apache.geronimo.specs.geronimo-ws-metadata_2.0_spec'/>
      <p n='version' t='version' v='1.1.2.SNAPSHOT'/>
    </capability>
    <capability name='package'>
      <p n='package' v='javax.jws.soap'/>
      <p n='version' t='version' v='2.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='javax.jws'/>
      <p n='version' t='version' v='2.0.0'/>
    </capability>
    <require extend='false' filter='(&amp;(package=javax.jws)(version&gt;=2.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.jws ;version=2.0.0
    </require>
    <require extend='false' filter='(&amp;(package=javax.jws.soap)(version&gt;=2.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.jws.soap ;version=2.0.0
    </require>
  </resource>
<resource id="36" presentationname="camel-core" symbolicname="org.apache.camel.camel-core" uri="http://people.apache.org/repo/m2-snapshot-repository/org/apache/camel/camel-core/1.3-SNAPSHOT/camel-core-1.3-SNAPSHOT.jar" version="1.3.0.SNAPSHOT">
<description>The Core Camel POJO based router</description>
<size>655573</size>
<documentation>http://www.apache.org/</documentation>
<source>http://svn.apache.org/viewvc/activemq/camel/trunk/camel-core</source>
<license>http://www.apache.org/licenses/LICENSE-2.0.txt</license>
<category id="org.apache.camel"/>
<capability name="bundle">
<p n="manifestversion" v="2"/>
<p n="presentationname" v="camel-core"/>
<p n="symbolicname" v="org.apache.camel.camel-core"/>
<p n="version" t="version" v="1.3.0.SNAPSHOT"/>
</capability>
<capability name="package">
<p n="package" v="org.apache.camel.model.loadbalancer"/>
<p n="uses:" v="org.apache.camel.model.language,org.apache.camel.model,org.apache.camel,org.apache.camel.util,org.apache.camel.impl,javax.xml.bind.annotation,org.apache.camel.processor.loadbalancer"/>
<p n="version" t="version" v="1.3.0.SNAPSHOT"/>
</capability>
<capability name="package">
<p n="package" v="org.apache.camel.language.simple"/>
<p n="uses:" v="org.apache.camel.builder,org.apache.camel.spi,org.apache.camel,org.apache.camel.language,org.apache.camel.util"/>
<p n="version" t="version" v="1.3.0.SNAPSHOT"/>
</capability>
<capability name="package">
<p n="package" v="org.apache.camel.processor.loadbalancer"/>
<p n="uses:" v="org.apache.camel,org.apache.camel.util,org.apache.camel.impl"/>
<p n="version" t="version" v="1.3.0.SNAPSHOT"/>
</capability>
<capability name="package">
<p n="package" v="org.apache.camel.processor.aggregate"/>
<p n="uses:" v="org.apache.camel"/>
<p n="version" t="version" v="1.3.0.SNAPSHOT"/>
</capability>
<capability name="package">
<p n="package" v="org.apache.camel.component.log"/>
<p n="uses:" v="org.apache.camel,org.apache.commons.logging,org.apache.camel.impl,org.apache.camel.processor"/>
<p n="version" t="version" v="1.3.0.SNAPSHOT"/>
</capability>
<capability name="package">
<p n="package" v="org.apache.camel.converter.jaxp"/>
<p n="uses:" v="org.xml.sax,org.apache.camel.converter,org.w3c.dom,javax.xml.transform,javax.xml.transform.dom,javax.xml.transform.sax,javax.xml.parsers,org.apache.camel,org.apache.camel.util,javax.xml.transform.stream,javax.xml.stream"/>
<p n="version" t="version" v="1.3.0.SNAPSHOT"/>
</capability>
<capability name="package">
<p n="package" v="org.apache.camel.processor.resequencer"/>
<p n="uses:" v="org.apache.camel,org.apache.commons.logging"/>
<p n="version" t="version" v="1.3.0.SNAPSHOT"/>
</capability>
<capability name="package">
<p n="package" v="org.apache.camel.impl.converter"/>
<p n="uses:" v="org.apache.commons.logging,org.apache.camel.processor,org.apache.camel,org.apache.camel.spi,org.apache.camel.util,org.apache.camel.impl"/>
<p n="version" t="version" v="1.3.0.SNAPSHOT"/>
</capability>
<capability name="package">
<p n="package" v="org.apache.camel.management"/>
<p n="uses:" v="javax.management,org.apache.commons.logging,org.springframework.jmx.export.assembler,org.springframework.jmx.export.metadata,javax.management.remote,org.apache.camel.processor,org.springframework.jmx.export.annotation,org.apache.camel.model,org.apache.camel.spi,org.apache.camel,org.apache.camel.util,javax.management.modelmbean,org.apache.camel.impl"/>
<p n="version" t="version" v="1.3.0.SNAPSHOT"/>
</capability>
<capability name="package">
<p n="package" v="org.apache.camel.util.jndi"/>
<p n="uses:" v="javax.naming,org.apache.camel.spi,org.apache.camel.util,org.apache.camel.impl,javax.naming.spi"/>
<p n="version" t="version" v="1.3.0.SNAPSHOT"/>
</capability>
<capability name="package">
<p n="package" v="org.apache.camel.util"/>
<p n="uses:" v="org.apache.camel.converter,org.w3c.dom,org.apache.commons.logging,org.apache.camel.impl.converter,org.apache.camel,org.apache.camel.spi,org.apache.camel.impl"/>
<p n="version" t="version" v="1.3.0.SNAPSHOT"/>
</capability>
<capability name="package">
<p n="package" v="org.apache.camel.impl"/>
<p n="uses:" v="org.apache.camel.converter,org.apache.commons.logging,org.apache.camel.processor,org.apache.camel.model,javax.naming,org.apache.camel.builder,org.apache.camel.impl.converter,org.apache.camel,org.apache.camel.spi,org.apache.camel.util"/>
<p n="version" t="version" v="1.3.0.SNAPSHOT"/>
</capability>
<capability name="package">
<p n="package" v="org.apache.camel.builder.xml"/>
<p n="uses:" v="org.xml.sax,org.apache.camel.converter,javax.xml.namespace,org.w3c.dom,org.apache.commons.logging,javax.xml.xpath,javax.xml.transform,javax.xml.transform.dom,org.apache.camel.converter.jaxp,org.apache.camel.model.language,javax.xml.parsers,org.apache.camel.spi,org.apache.camel,org.apache.camel.util,javax.xml.transform.stream"/>
<p n="version" t="version" v="1.3.0.SNAPSHOT"/>
</capability>
<capability name="package">
<p n="package" v="org.apache.camel.component.direct"/>
<p n="uses:" v="org.apache.camel.impl.converter,org.apache.camel,org.apache.commons.logging,org.apache.camel.impl"/>
<p n="version" t="version" v="1.3.0.SNAPSHOT"/>
</capability>
<capability name="package">
<p n="package" v="org.apache.camel.component.seda"/>
<p n="uses:" v="org.apache.camel.impl.converter,org.apache.camel,org.apache.commons.logging,org.apache.camel.impl"/>
<p n="version" t="version" v="1.3.0.SNAPSHOT"/>
</capability>
<capability name="package">
<p n="package" v="org.apache.camel.component.ref"/>
<p n="uses:" v="org.apache.camel,org.apache.camel.spi,org.apache.camel.impl"/>
<p n="version" t="version" v="1.3.0.SNAPSHOT"/>
</capability>
<capability name="package">
<p n="package" v="org.apache.camel.component.file"/>
<p n="uses:" v="org.apache.camel,org.apache.camel.util,org.apache.commons.logging,org.apache.camel.impl,org.apache.camel.component.file.strategy"/>
<p n="version" t="version" v="1.3.0.SNAPSHOT"/>
</capability>
<capability name="package">
<p n="package" v="org.apache.camel.converter"/>
<p n="uses:" v="org.apache.camel,org.w3c.dom,org.apache.commons.logging,org.apache.camel.util"/>
<p n="version" t="version" v="1.3.0.SNAPSHOT"/>
</capability>
<capability name="package">
<p n="package" v="org.apache.camel.language.bean"/>
<p n="uses:" v="org.apache.camel.builder,org.apache.camel.spi,org.apache.camel,org.apache.camel.util,org.apache.camel.component.bean,org.apache.camel.impl"/>
<p n="version" t="version" v="1.3.0.SNAPSHOT"/>
</capability>
<capability name="package">
<p n="package" v="org.apache.camel.model.config"/>
<p n="uses:" v="org.apache.camel.processor.resequencer,javax.xml.bind.annotation"/>
<p n="version" t="version" v="1.3.0.SNAPSHOT"/>
</capability>
<capability name="package">
<p n="package" v="org.apache.camel.model.dataformat"/>
<p n="uses:" v="org.apache.camel.model,org.apache.camel.converter,org.apache.camel,org.apache.camel.spi,org.apache.camel.util,org.apache.camel.impl,javax.xml.bind.annotation"/>
<p n="version" t="version" v="1.3.0.SNAPSHOT"/>
</capability>
<capability name="package">
<p n="package" v="org.apache.camel.processor"/>
<p n="uses:" v="org.apache.camel.converter,org.apache.commons.logging,org.apache.camel.processor.aggregate,org.apache.camel.model,org.apache.camel.processor.resequencer,org.apache.camel.impl.converter,org.apache.camel,org.apache.camel.spi,org.apache.camel.util,org.apache.camel.impl"/>
<p n="version" t="version" v="1.3.0.SNAPSHOT"/>
</capability>
<capability name="package">
<p n="package" v="org.apache.camel.component.vm"/>
<p n="uses:" v="org.apache.camel,org.apache.camel.component.seda"/>
<p n="version" t="version" v="1.3.0.SNAPSHOT"/>
</capability>
<capability name="package">
<p n="package" v="org.apache.camel.component.mock"/>
<p n="uses:" v="org.apache.camel.builder,org.apache.camel,org.apache.camel.util,org.apache.commons.logging,org.apache.camel.impl"/>
<p n="version" t="version" v="1.3.0.SNAPSHOT"/>
</capability>
<capability name="package">
<p n="package" v="org.apache.camel.component.timer"/>
<p n="uses:" v="org.apache.camel,org.apache.commons.logging,org.apache.camel.impl"/>
<p n="version" t="version" v="1.3.0.SNAPSHOT"/>
</capability>
<capability name="package">
<p n="package" v="org.apache.camel.model.language"/>
<p n="uses:" v="org.apache.camel,org.apache.camel.spi,org.apache.camel.language.bean,javax.xml.bind.annotation.adapters,org.apache.camel.util,org.apache.camel.impl,javax.xml.bind.annotation"/>
<p n="version" t="version" v="1.3.0.SNAPSHOT"/>
</capability>
<capability name="package">
<p n="package" v="org.apache.camel.model"/>
<p n="uses:" v="org.apache.camel.model.loadbalancer,org.apache.camel.converter,javax.xml.bind.annotation.adapters,org.apache.camel.model.config,org.apache.commons.logging,org.apache.camel.model.dataformat,javax.xml.bind.annotation,org.apache.camel.processor.loadbalancer,org.apache.camel.processor,org.apache.camel.processor.aggregate,org.apache.camel.model.language,org.apache.camel.processor.resequencer,org.apache.camel.builder,org.apache.camel.spi,org.apache.camel,org.apache.camel.util,org.apache.camel.component.bean,org.apache.camel.impl,org.apache.camel.processor.idempotent"/>
<p n="version" t="version" v="1.3.0.SNAPSHOT"/>
</capability>
<capability name="package">
<p n="package" v="org.apache.camel.builder"/>
<p n="uses:" v="org.apache.commons.logging,org.apache.camel.model.dataformat,org.apache.camel.processor,org.apache.camel.model.language,org.apache.camel.model,org.apache.camel,org.apache.camel.util,org.apache.camel.impl,org.apache.camel.builder.xml"/>
<p n="version" t="version" v="1.3.0.SNAPSHOT"/>
</capability>
<capability name="package">
<p n="package" v="org.apache.camel.component.jmx"/>
<p n="uses:" v="javax.management,org.apache.camel,javax.management.monitor,org.apache.commons.logging,org.apache.camel.impl"/>
<p n="version" t="version" v="1.3.0.SNAPSHOT"/>
</capability>
<capability name="package">
<p n="package" v="org.apache.camel.spi"/>
<p n="uses:" v="javax.management,org.apache.camel,org.apache.camel.management,org.apache.camel.impl"/>
<p n="version" t="version" v="1.3.0.SNAPSHOT"/>
</capability>
<capability name="package">
<p n="package" v="org.apache.camel"/>
<p n="uses:" v="org.apache.camel.builder,org.apache.camel.spi,org.apache.camel.util,org.apache.camel.impl"/>
<p n="version" t="version" v="1.3.0.SNAPSHOT"/>
</capability>
<capability name="package">
<p n="package" v="org.apache.camel.component.bean"/>
<p n="uses:" v="org.apache.camel.converter,org.apache.commons.logging,org.apache.camel.builder,org.apache.camel,org.apache.camel.spi,org.apache.camel.language,org.apache.camel.util,org.apache.camel.impl,org.apache.camel.builder.xml"/>
<p n="version" t="version" v="1.3.0.SNAPSHOT"/>
</capability>
<capability name="package">
<p n="package" v="org.apache.camel.language"/>
<p n="uses:" v="org.apache.camel.spi,org.apache.camel,org.apache.camel.component.bean"/>
<p n="version" t="version" v="1.3.0.SNAPSHOT"/>
</capability>
<capability name="package">
<p n="package" v="org.apache.camel.view"/>
<p n="uses:" v="org.apache.camel.model.language,org.apache.camel.model,org.apache.camel,org.apache.camel.util,org.apache.commons.logging"/>
<p n="version" t="version" v="1.3.0.SNAPSHOT"/>
</capability>
<capability name="package">
<p n="package" v="org.apache.camel.processor.validation"/>
<p n="uses:" v="javax.xml.transform.dom,org.xml.sax,javax.xml.validation,org.apache.camel,org.apache.commons.logging,javax.xml.transform"/>
<p n="version" t="version" v="1.3.0.SNAPSHOT"/>
</capability>
<capability name="package">
<p n="package" v="org.apache.camel.processor.idempotent"/>
<p n="uses:" v="org.apache.camel,org.apache.camel.util,org.apache.commons.logging,org.apache.camel.impl"/>
<p n="version" t="version" v="1.3.0.SNAPSHOT"/>
</capability>
<capability name="package">
<p n="package" v="org.apache.camel.component.file.strategy"/>
<p n="uses:" v="org.apache.camel.component.file,org.apache.camel,org.apache.camel.util,org.apache.commons.logging"/>
<p n="version" t="version" v="1.3.0.SNAPSHOT"/>
</capability>
<require extend="false" filter="(&amp;(package=javax.management)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package javax.management</require>
<require extend="false" filter="(&amp;(package=javax.management.modelmbean)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package javax.management.modelmbean</require>
<require extend="false" filter="(&amp;(package=javax.management.monitor)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package javax.management.monitor</require>
<require extend="false" filter="(&amp;(package=javax.management.remote)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package javax.management.remote</require>
<require extend="false" filter="(&amp;(package=javax.naming)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package javax.naming</require>
<require extend="false" filter="(&amp;(package=javax.naming.spi)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package javax.naming.spi</require>
<require extend="false" filter="(&amp;(package=javax.xml.bind.annotation)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package javax.xml.bind.annotation</require>
<require extend="false" filter="(&amp;(package=javax.xml.namespace)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package javax.xml.namespace</require>
<require extend="false" filter="(&amp;(package=javax.xml.parsers)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package javax.xml.parsers</require>
<require extend="false" filter="(&amp;(package=javax.xml.stream)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package javax.xml.stream</require>
<require extend="false" filter="(&amp;(package=javax.xml.transform)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package javax.xml.transform</require>
<require extend="false" filter="(&amp;(package=javax.xml.transform.dom)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package javax.xml.transform.dom</require>
<require extend="false" filter="(&amp;(package=javax.xml.transform.sax)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package javax.xml.transform.sax</require>
<require extend="false" filter="(&amp;(package=javax.xml.transform.stream)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package javax.xml.transform.stream</require>
<require extend="false" filter="(&amp;(package=javax.xml.validation)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package javax.xml.validation</require>
<require extend="false" filter="(&amp;(package=javax.xml.xpath)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package javax.xml.xpath</require>
<require extend="false" filter="(&amp;(package=org.apache.camel)(version&gt;=1.3.0.SNAPSHOT))" multiple="false" name="package" optional="false">Import package org.apache.camel ;version=1.3.0.SNAPSHOT</require>
<require extend="false" filter="(&amp;(package=org.apache.camel.builder)(version&gt;=1.3.0.SNAPSHOT))" multiple="false" name="package" optional="false">Import package org.apache.camel.builder ;version=1.3.0.SNAPSHOT</require>
<require extend="false" filter="(&amp;(package=org.apache.camel.builder.xml)(version&gt;=1.3.0.SNAPSHOT))" multiple="false" name="package" optional="false">Import package org.apache.camel.builder.xml ;version=1.3.0.SNAPSHOT</require>
<require extend="false" filter="(&amp;(package=org.apache.camel.component.bean)(version&gt;=1.3.0.SNAPSHOT))" multiple="false" name="package" optional="false">Import package org.apache.camel.component.bean ;version=1.3.0.SNAPSHOT</require>
<require extend="false" filter="(&amp;(package=org.apache.camel.component.direct)(version&gt;=1.3.0.SNAPSHOT))" multiple="false" name="package" optional="false">Import package org.apache.camel.component.direct ;version=1.3.0.SNAPSHOT</require>
<require extend="false" filter="(&amp;(package=org.apache.camel.component.file)(version&gt;=1.3.0.SNAPSHOT))" multiple="false" name="package" optional="false">Import package org.apache.camel.component.file ;version=1.3.0.SNAPSHOT</require>
<require extend="false" filter="(&amp;(package=org.apache.camel.component.file.strategy)(version&gt;=1.3.0.SNAPSHOT))" multiple="false" name="package" optional="false">Import package org.apache.camel.component.file.strategy ;version=1.3.0.SNAPSHOT</require>
<require extend="false" filter="(&amp;(package=org.apache.camel.component.jmx)(version&gt;=1.3.0.SNAPSHOT))" multiple="false" name="package" optional="false">Import package org.apache.camel.component.jmx ;version=1.3.0.SNAPSHOT</require>
<require extend="false" filter="(&amp;(package=org.apache.camel.component.log)(version&gt;=1.3.0.SNAPSHOT))" multiple="false" name="package" optional="false">Import package org.apache.camel.component.log ;version=1.3.0.SNAPSHOT</require>
<require extend="false" filter="(&amp;(package=org.apache.camel.component.mock)(version&gt;=1.3.0.SNAPSHOT))" multiple="false" name="package" optional="false">Import package org.apache.camel.component.mock ;version=1.3.0.SNAPSHOT</require>
<require extend="false" filter="(&amp;(package=org.apache.camel.component.ref)(version&gt;=1.3.0.SNAPSHOT))" multiple="false" name="package" optional="false">Import package org.apache.camel.component.ref ;version=1.3.0.SNAPSHOT</require>
<require extend="false" filter="(&amp;(package=org.apache.camel.component.seda)(version&gt;=1.3.0.SNAPSHOT))" multiple="false" name="package" optional="false">Import package org.apache.camel.component.seda ;version=1.3.0.SNAPSHOT</require>
<require extend="false" filter="(&amp;(package=org.apache.camel.component.timer)(version&gt;=1.3.0.SNAPSHOT))" multiple="false" name="package" optional="false">Import package org.apache.camel.component.timer ;version=1.3.0.SNAPSHOT</require>
<require extend="false" filter="(&amp;(package=org.apache.camel.component.vm)(version&gt;=1.3.0.SNAPSHOT))" multiple="false" name="package" optional="false">Import package org.apache.camel.component.vm ;version=1.3.0.SNAPSHOT</require>
<require extend="false" filter="(&amp;(package=org.apache.camel.converter)(version&gt;=1.3.0.SNAPSHOT))" multiple="false" name="package" optional="false">Import package org.apache.camel.converter ;version=1.3.0.SNAPSHOT</require>
<require extend="false" filter="(&amp;(package=org.apache.camel.converter.jaxp)(version&gt;=1.3.0.SNAPSHOT))" multiple="false" name="package" optional="false">Import package org.apache.camel.converter.jaxp ;version=1.3.0.SNAPSHOT</require>
<require extend="false" filter="(&amp;(package=org.apache.camel.impl)(version&gt;=1.3.0.SNAPSHOT))" multiple="false" name="package" optional="false">Import package org.apache.camel.impl ;version=1.3.0.SNAPSHOT</require>
<require extend="false" filter="(&amp;(package=org.apache.camel.impl.converter)(version&gt;=1.3.0.SNAPSHOT))" multiple="false" name="package" optional="false">Import package org.apache.camel.impl.converter ;version=1.3.0.SNAPSHOT</require>
<require extend="false" filter="(&amp;(package=org.apache.camel.language)(version&gt;=1.3.0.SNAPSHOT))" multiple="false" name="package" optional="false">Import package org.apache.camel.language ;version=1.3.0.SNAPSHOT</require>
<require extend="false" filter="(&amp;(package=org.apache.camel.language.bean)(version&gt;=1.3.0.SNAPSHOT))" multiple="false" name="package" optional="false">Import package org.apache.camel.language.bean ;version=1.3.0.SNAPSHOT</require>
<require extend="false" filter="(&amp;(package=org.apache.camel.language.simple)(version&gt;=1.3.0.SNAPSHOT))" multiple="false" name="package" optional="false">Import package org.apache.camel.language.simple ;version=1.3.0.SNAPSHOT</require>
<require extend="false" filter="(&amp;(package=org.apache.camel.management)(version&gt;=1.3.0.SNAPSHOT))" multiple="false" name="package" optional="false">Import package org.apache.camel.management ;version=1.3.0.SNAPSHOT</require>
<require extend="false" filter="(&amp;(package=org.apache.camel.model)(version&gt;=1.3.0.SNAPSHOT))" multiple="false" name="package" optional="false">Import package org.apache.camel.model ;version=1.3.0.SNAPSHOT</require>
<require extend="false" filter="(&amp;(package=org.apache.camel.model.config)(version&gt;=1.3.0.SNAPSHOT))" multiple="false" name="package" optional="false">Import package org.apache.camel.model.config ;version=1.3.0.SNAPSHOT</require>
<require extend="false" filter="(&amp;(package=org.apache.camel.model.dataformat)(version&gt;=1.3.0.SNAPSHOT))" multiple="false" name="package" optional="false">Import package org.apache.camel.model.dataformat ;version=1.3.0.SNAPSHOT</require>
<require extend="false" filter="(&amp;(package=org.apache.camel.model.language)(version&gt;=1.3.0.SNAPSHOT))" multiple="false" name="package" optional="false">Import package org.apache.camel.model.language ;version=1.3.0.SNAPSHOT</require>
<require extend="false" filter="(&amp;(package=org.apache.camel.model.loadbalancer)(version&gt;=1.3.0.SNAPSHOT))" multiple="false" name="package" optional="false">Import package org.apache.camel.model.loadbalancer ;version=1.3.0.SNAPSHOT</require>
<require extend="false" filter="(&amp;(package=org.apache.camel.processor)(version&gt;=1.3.0.SNAPSHOT))" multiple="false" name="package" optional="false">Import package org.apache.camel.processor ;version=1.3.0.SNAPSHOT</require>
<require extend="false" filter="(&amp;(package=org.apache.camel.processor.aggregate)(version&gt;=1.3.0.SNAPSHOT))" multiple="false" name="package" optional="false">Import package org.apache.camel.processor.aggregate ;version=1.3.0.SNAPSHOT</require>
<require extend="false" filter="(&amp;(package=org.apache.camel.processor.idempotent)(version&gt;=1.3.0.SNAPSHOT))" multiple="false" name="package" optional="false">Import package org.apache.camel.processor.idempotent ;version=1.3.0.SNAPSHOT</require>
<require extend="false" filter="(&amp;(package=org.apache.camel.processor.loadbalancer)(version&gt;=1.3.0.SNAPSHOT))" multiple="false" name="package" optional="false">Import package org.apache.camel.processor.loadbalancer ;version=1.3.0.SNAPSHOT</require>
<require extend="false" filter="(&amp;(package=org.apache.camel.processor.resequencer)(version&gt;=1.3.0.SNAPSHOT))" multiple="false" name="package" optional="false">Import package org.apache.camel.processor.resequencer ;version=1.3.0.SNAPSHOT</require>
<require extend="false" filter="(&amp;(package=org.apache.camel.processor.validation)(version&gt;=1.3.0.SNAPSHOT))" multiple="false" name="package" optional="false">Import package org.apache.camel.processor.validation ;version=1.3.0.SNAPSHOT</require>
<require extend="false" filter="(&amp;(package=org.apache.camel.spi)(version&gt;=1.3.0.SNAPSHOT))" multiple="false" name="package" optional="false">Import package org.apache.camel.spi ;version=1.3.0.SNAPSHOT</require>
<require extend="false" filter="(&amp;(package=org.apache.camel.util)(version&gt;=1.3.0.SNAPSHOT))" multiple="false" name="package" optional="false">Import package org.apache.camel.util ;version=1.3.0.SNAPSHOT</require>
<require extend="false" filter="(&amp;(package=org.apache.camel.util.jndi)(version&gt;=1.3.0.SNAPSHOT))" multiple="false" name="package" optional="false">Import package org.apache.camel.util.jndi ;version=1.3.0.SNAPSHOT</require>
<require extend="false" filter="(&amp;(package=org.apache.camel.view)(version&gt;=1.3.0.SNAPSHOT))" multiple="false" name="package" optional="false">Import package org.apache.camel.view ;version=1.3.0.SNAPSHOT</require>
<require extend="false" filter="(&amp;(package=org.apache.commons.logging)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package org.apache.commons.logging</require>
<require extend="false" filter="(&amp;(package=org.springframework.jmx.export.annotation)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package org.springframework.jmx.export.annotation</require>
<require extend="false" filter="(&amp;(package=org.springframework.jmx.export.assembler)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package org.springframework.jmx.export.assembler</require>
<require extend="false" filter="(&amp;(package=org.springframework.jmx.export.metadata)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package org.springframework.jmx.export.metadata</require>
<require extend="false" filter="(&amp;(package=org.w3c.dom)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package org.w3c.dom</require>
<require extend="false" filter="(&amp;(package=org.xml.sax)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package org.xml.sax</require>
</resource>
<resource id="37" presentationname="camel-mina" symbolicname="org.apache.camel.camel-mina" uri="http://people.apache.org/repo/m2-snapshot-repository/org/apache/camel/camel-mina/1.3-SNAPSHOT/camel-mina-1.3-SNAPSHOT.jar" version="1.3.0.SNAPSHOT">
<description>Camel MINA support</description>
<size>24951</size>
<documentation>http://www.apache.org/</documentation>
<source>http://svn.apache.org/viewvc/activemq/camel/trunk/camel-mina</source>
<license>http://www.apache.org/licenses/LICENSE-2.0.txt</license>
<category id="org.apache.camel"/>
<capability name="bundle">
<p n="manifestversion" v="2"/>
<p n="presentationname" v="camel-mina"/>
<p n="symbolicname" v="org.apache.camel.camel-mina"/>
<p n="version" t="version" v="1.3.0.SNAPSHOT"/>
</capability>
<capability name="package">
<p n="package" v="org.apache.camel.component.mina"/>
<p n="uses:" v="org.apache.mina.transport.vmpipe,org.apache.mina.common,org.apache.camel.converter,org.apache.mina.transport.socket.nio,org.apache.commons.logging,org.apache.mina.common.support,org.apache.mina.filter.codec.textline,org.apache.camel.spi,org.apache.camel,org.apache.camel.util,org.apache.mina.filter.codec.serialization,org.apache.camel.impl,org.apache.mina.filter.codec"/>
<p n="version" t="version" v="1.3.0.SNAPSHOT"/>
</capability>
<require extend="false" filter="(&amp;(package=org.apache.camel)(version&gt;=1.3.0.SNAPSHOT))" multiple="false" name="package" optional="false">Import package org.apache.camel ;version=1.3.0.SNAPSHOT</require>
<require extend="false" filter="(&amp;(package=org.apache.camel.component.mina)(version&gt;=1.3.0.SNAPSHOT))" multiple="false" name="package" optional="false">Import package org.apache.camel.component.mina ;version=1.3.0.SNAPSHOT</require>
<require extend="false" filter="(&amp;(package=org.apache.camel.converter)(version&gt;=1.3.0.SNAPSHOT))" multiple="false" name="package" optional="false">Import package org.apache.camel.converter ;version=1.3.0.SNAPSHOT</require>
<require extend="false" filter="(&amp;(package=org.apache.camel.impl)(version&gt;=1.3.0.SNAPSHOT))" multiple="false" name="package" optional="false">Import package org.apache.camel.impl ;version=1.3.0.SNAPSHOT</require>
<require extend="false" filter="(&amp;(package=org.apache.camel.spi)(version&gt;=1.3.0.SNAPSHOT))" multiple="false" name="package" optional="false">Import package org.apache.camel.spi ;version=1.3.0.SNAPSHOT</require>
<require extend="false" filter="(&amp;(package=org.apache.camel.util)(version&gt;=1.3.0.SNAPSHOT))" multiple="false" name="package" optional="false">Import package org.apache.camel.util ;version=1.3.0.SNAPSHOT</require>
<require extend="false" filter="(&amp;(package=org.apache.commons.logging)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package org.apache.commons.logging</require>
<require extend="false" filter="(&amp;(package=org.apache.mina.common)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package org.apache.mina.common</require>
<require extend="false" filter="(&amp;(package=org.apache.mina.common.support)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package org.apache.mina.common.support</require>
<require extend="false" filter="(&amp;(package=org.apache.mina.filter.codec)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package org.apache.mina.filter.codec</require>
<require extend="false" filter="(&amp;(package=org.apache.mina.filter.codec.serialization)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package org.apache.mina.filter.codec.serialization</require>
<require extend="false" filter="(&amp;(package=org.apache.mina.filter.codec.textline)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package org.apache.mina.filter.codec.textline</require>
<require extend="false" filter="(&amp;(package=org.apache.mina.transport.socket.nio)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package org.apache.mina.transport.socket.nio</require>
<require extend="false" filter="(&amp;(package=org.apache.mina.transport.vmpipe)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package org.apache.mina.transport.vmpipe</require>
</resource>
<resource id="38" presentationname="camel-ftp" symbolicname="org.apache.camel.camel-ftp" uri="http://people.apache.org/repo/m2-snapshot-repository/org/apache/camel/camel-ftp/1.3-SNAPSHOT/camel-ftp-1.3-SNAPSHOT.jar" version="1.3.0.SNAPSHOT">
<description>Camel FTP support</description>
<size>33695</size>
<documentation>http://www.apache.org/</documentation>
<source>http://svn.apache.org/viewvc/activemq/camel/trunk/camel-ftp</source>
<license>http://www.apache.org/licenses/LICENSE-2.0.txt</license>
<category id="org.apache.camel"/>
<capability name="bundle">
<p n="manifestversion" v="2"/>
<p n="presentationname" v="camel-ftp"/>
<p n="symbolicname" v="org.apache.camel.camel-ftp"/>
<p n="version" t="version" v="1.3.0.SNAPSHOT"/>
</capability>
<capability name="package">
<p n="package" v="org.apache.camel.component.file.remote"/>
<p n="uses:" v="com.jcraft.jsch,org.apache.commons.net.ftp,org.apache.camel,org.apache.commons.logging,org.apache.camel.impl"/>
<p n="version" t="version" v="1.3.0.SNAPSHOT"/>
</capability>
<require extend="false" filter="(&amp;(package=com.jcraft.jsch)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package com.jcraft.jsch</require>
<require extend="false" filter="(&amp;(package=org.apache.camel)(version&gt;=1.3.0.SNAPSHOT))" multiple="false" name="package" optional="false">Import package org.apache.camel ;version=1.3.0.SNAPSHOT</require>
<require extend="false" filter="(&amp;(package=org.apache.camel.component.file.remote)(version&gt;=1.3.0.SNAPSHOT))" multiple="false" name="package" optional="false">Import package org.apache.camel.component.file.remote ;version=1.3.0.SNAPSHOT</require>
<require extend="false" filter="(&amp;(package=org.apache.camel.impl)(version&gt;=1.3.0.SNAPSHOT))" multiple="false" name="package" optional="false">Import package org.apache.camel.impl ;version=1.3.0.SNAPSHOT</require>
<require extend="false" filter="(&amp;(package=org.apache.commons.logging)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package org.apache.commons.logging</require>
<require extend="false" filter="(&amp;(package=org.apache.commons.net.ftp)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package org.apache.commons.net.ftp</require>
</resource>
<resource id="39" presentationname="camel-spring" symbolicname="org.apache.camel.camel-spring" uri="http://people.apache.org/repo/m2-snapshot-repository/org/apache/camel/camel-spring/1.3-SNAPSHOT/camel-spring-1.3-SNAPSHOT.jar" version="1.3.0.SNAPSHOT">
<description>Camel Spring support</description>
<size>189597</size>
<documentation>http://www.apache.org/</documentation>
<source>http://svn.apache.org/viewvc/activemq/camel/trunk/camel-spring</source>
<license>http://www.apache.org/licenses/LICENSE-2.0.txt</license>
<category id="org.apache.camel"/>
<capability name="bundle">
<p n="manifestversion" v="2"/>
<p n="presentationname" v="camel-spring"/>
<p n="symbolicname" v="org.apache.camel.camel-spring"/>
<p n="version" t="version" v="1.3.0.SNAPSHOT"/>
</capability>
<capability name="package">
<p n="package" v="org.apache.camel.component.ref"/>
<p n="uses:" v="org.apache.camel,org.apache.camel.spi,org.apache.camel.impl"/>
<p n="version" t="version" v="1.3.0.SNAPSHOT"/>
</capability>
<capability name="package">
<p n="package" v="org.apache.camel.component.file"/>
<p n="uses:" v="org.apache.camel,org.apache.camel.util,org.apache.commons.logging,org.apache.camel.impl,org.apache.camel.component.file.strategy"/>
<p n="version" t="version" v="1.3.0.SNAPSHOT"/>
</capability>
<capability name="package">
<p n="package" v="org.apache.camel.spring.handler"/>
<p n="uses:" v="org.springframework.util.xml,org.apache.camel.model.loadbalancer,org.springframework.beans.factory.parsing,org.w3c.dom,org.apache.camel.model.dataformat,org.springframework.beans.factory.support,org.springframework.beans.factory.config,org.springframework.beans.factory.xml,org.apache.camel.spi,org.springframework.beans,org.apache.camel.spring,org.apache.camel.util,org.apache.camel.spring.remoting,javax.xml.bind,org.springframework.beans.factory,org.apache.camel.builder.xml"/>
<p n="version" t="version" v="0.0.0"/>
</capability>
<capability name="package">
<p n="package" v="org.apache.camel.spring.spi"/>
<p n="uses:" v="org.apache.commons.logging,org.springframework.context,org.aopalliance.intercept,org.apache.camel.processor,org.springframework.transaction,org.springframework.beans.factory.config,org.springframework.core.io,org.springframework.beans.factory.wiring,org.apache.camel.spi,org.apache.camel,org.apache.camel.component.bean,org.springframework.beans.factory,org.springframework.transaction.support"/>
<p n="version" t="version" v="0.0.0"/>
</capability>
<capability name="package">
<p n="package" v="org.apache.camel.component.event"/>
<p n="uses:" v="org.apache.camel,org.springframework.beans,org.apache.camel.impl,org.springframework.context,org.apache.camel.processor.loadbalancer"/>
<p n="version" t="version" v="1.3.0.SNAPSHOT"/>
</capability>
<capability name="package">
<p n="package" v="org.apache.camel.spring.util"/>
<p n="uses:" v="org.apache.commons.logging,org.apache.camel.util,org.springframework.util,org.springframework.beans.factory"/>
<p n="version" t="version" v="0.0.0"/>
</capability>
<capability name="package">
<p n="package" v="org.apache.camel.component"/>
<p n="uses:" v="org.springframework.core.io,org.apache.camel.component.validator,org.apache.camel,org.apache.commons.logging,org.apache.camel.impl"/>
<p n="version" t="version" v="1.3.0.SNAPSHOT"/>
</capability>
<capability name="package">
<p n="package" v="org.apache.camel.component.xslt"/>
<p n="uses:" v="org.apache.camel.converter.jaxp,org.springframework.core.io,org.apache.camel,org.apache.commons.logging,org.apache.camel.impl,org.apache.camel.builder.xml,org.apache.camel.component"/>
<p n="version" t="version" v="1.3.0.SNAPSHOT"/>
</capability>
<capability name="package">
<p n="package" v="org.apache.camel.component.vm"/>
<p n="uses:" v="org.apache.camel,org.apache.camel.component.seda"/>
<p n="version" t="version" v="1.3.0.SNAPSHOT"/>
</capability>
<capability name="package">
<p n="package" v="org.apache.camel.component.log"/>
<p n="uses:" v="org.apache.camel,org.apache.commons.logging,org.apache.camel.impl,org.apache.camel.processor"/>
<p n="version" t="version" v="1.3.0.SNAPSHOT"/>
</capability>
<capability name="package">
<p n="package" v="org.apache.camel.component.timer"/>
<p n="uses:" v="org.apache.camel,org.apache.commons.logging,org.apache.camel.impl"/>
<p n="version" t="version" v="1.3.0.SNAPSHOT"/>
</capability>
<capability name="package">
<p n="package" v="org.apache.camel.component.mock"/>
<p n="uses:" v="org.apache.camel.builder,org.apache.camel,org.apache.camel.util,org.apache.commons.logging,org.apache.camel.impl"/>
<p n="version" t="version" v="1.3.0.SNAPSHOT"/>
</capability>
<capability name="package">
<p n="package" v="org.apache.camel.component.jmx"/>
<p n="uses:" v="javax.management,org.apache.camel,javax.management.monitor,org.apache.commons.logging,org.apache.camel.impl"/>
<p n="version" t="version" v="1.3.0.SNAPSHOT"/>
</capability>
<capability name="package">
<p n="package" v="org.apache.camel.component.validator"/>
<p n="uses:" v="org.springframework.core.io,org.apache.camel,org.apache.commons.logging,org.apache.camel.impl,javax.xml.transform.stream,org.apache.camel.processor.validation,org.apache.camel.component,javax.xml.transform"/>
<p n="version" t="version" v="1.3.0.SNAPSHOT"/>
</capability>
<capability name="package">
<p n="package" v="org.apache.camel.component.bean"/>
<p n="uses:" v="org.apache.camel.converter,org.apache.commons.logging,org.apache.camel.builder,org.apache.camel,org.apache.camel.spi,org.apache.camel.language,org.apache.camel.util,org.apache.camel.impl,org.apache.camel.builder.xml"/>
<p n="version" t="version" v="1.3.0.SNAPSHOT"/>
</capability>
<capability name="package">
<p n="package" v="org.apache.camel.spring"/>
<p n="uses:" v="org.apache.camel.spring.spi,org.apache.camel.component.event,org.apache.camel.spring.util,org.springframework.context.support,org.apache.camel.management,org.apache.camel.util,org.apache.camel.impl,org.springframework.beans.factory,org.springframework.transaction.support,javax.management,org.springframework.context.event,org.apache.commons.logging,org.springframework.context,javax.xml.bind.annotation,org.apache.camel.model,org.springframework.beans.factory.config,org.apache.camel.builder,org.apache.camel,org.apache.camel.spi,org.springframework.beans,org.apache.camel.component.bean,org.springframework.util,org.apache.camel.view"/>
<p n="version" t="version" v="0.0.0"/>
</capability>
<capability name="package">
<p n="package" v="org.apache.camel.spring.processor"/>
<p n="version" t="version" v="0.0.0"/>
</capability>
<capability name="package">
<p n="package" v="org.apache.camel.spring.remoting"/>
<p n="uses:" v="org.springframework.remoting.support,org.apache.camel,org.apache.camel.util,org.springframework.beans,org.apache.camel.component.bean,org.springframework.context,org.springframework.beans.factory,org.aopalliance.intercept"/>
<p n="version" t="version" v="0.0.0"/>
</capability>
<capability name="package">
<p n="package" v="org.apache.camel.component.file.strategy"/>
<p n="uses:" v="org.apache.camel.component.file,org.apache.camel,org.apache.camel.util,org.apache.commons.logging"/>
<p n="version" t="version" v="1.3.0.SNAPSHOT"/>
</capability>
<capability name="package">
<p n="package" v="org.apache.camel.component.direct"/>
<p n="uses:" v="org.apache.camel.impl.converter,org.apache.camel,org.apache.commons.logging,org.apache.camel.impl"/>
<p n="version" t="version" v="1.3.0.SNAPSHOT"/>
</capability>
<capability name="package">
<p n="package" v="org.apache.camel.component.seda"/>
<p n="uses:" v="org.apache.camel.impl.converter,org.apache.camel,org.apache.commons.logging,org.apache.camel.impl"/>
<p n="version" t="version" v="1.3.0.SNAPSHOT"/>
</capability>
<require extend="false" filter="(&amp;(package=javax.management)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package javax.management</require>
<require extend="false" filter="(&amp;(package=javax.management.monitor)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package javax.management.monitor</require>
<require extend="false" filter="(&amp;(package=javax.xml.bind)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package javax.xml.bind</require>
<require extend="false" filter="(&amp;(package=javax.xml.bind.annotation)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package javax.xml.bind.annotation</require>
<require extend="false" filter="(&amp;(package=javax.xml.transform)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package javax.xml.transform</require>
<require extend="false" filter="(&amp;(package=javax.xml.transform.stream)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package javax.xml.transform.stream</require>
<require extend="false" filter="(&amp;(package=org.aopalliance.intercept)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package org.aopalliance.intercept</require>
<require extend="false" filter="(&amp;(package=org.apache.camel)(version&gt;=1.3.0.SNAPSHOT))" multiple="false" name="package" optional="false">Import package org.apache.camel ;version=1.3.0.SNAPSHOT</require>
<require extend="false" filter="(&amp;(package=org.apache.camel.builder)(version&gt;=1.3.0.SNAPSHOT))" multiple="false" name="package" optional="false">Import package org.apache.camel.builder ;version=1.3.0.SNAPSHOT</require>
<require extend="false" filter="(&amp;(package=org.apache.camel.builder.xml)(version&gt;=1.3.0.SNAPSHOT))" multiple="false" name="package" optional="false">Import package org.apache.camel.builder.xml ;version=1.3.0.SNAPSHOT</require>
<require extend="false" filter="(&amp;(package=org.apache.camel.component)(version&gt;=1.3.0.SNAPSHOT))" multiple="false" name="package" optional="false">Import package org.apache.camel.component ;version=1.3.0.SNAPSHOT</require>
<require extend="false" filter="(&amp;(package=org.apache.camel.component.bean)(version&gt;=1.3.0.SNAPSHOT))" multiple="false" name="package" optional="false">Import package org.apache.camel.component.bean ;version=1.3.0.SNAPSHOT</require>
<require extend="false" filter="(&amp;(package=org.apache.camel.component.direct)(version&gt;=1.3.0.SNAPSHOT))" multiple="false" name="package" optional="false">Import package org.apache.camel.component.direct ;version=1.3.0.SNAPSHOT</require>
<require extend="false" filter="(&amp;(package=org.apache.camel.component.event)(version&gt;=1.3.0.SNAPSHOT))" multiple="false" name="package" optional="false">Import package org.apache.camel.component.event ;version=1.3.0.SNAPSHOT</require>
<require extend="false" filter="(&amp;(package=org.apache.camel.component.file)(version&gt;=1.3.0.SNAPSHOT))" multiple="false" name="package" optional="false">Import package org.apache.camel.component.file ;version=1.3.0.SNAPSHOT</require>
<require extend="false" filter="(&amp;(package=org.apache.camel.component.file.strategy)(version&gt;=1.3.0.SNAPSHOT))" multiple="false" name="package" optional="false">Import package org.apache.camel.component.file.strategy ;version=1.3.0.SNAPSHOT</require>
<require extend="false" filter="(&amp;(package=org.apache.camel.component.jmx)(version&gt;=1.3.0.SNAPSHOT))" multiple="false" name="package" optional="false">Import package org.apache.camel.component.jmx ;version=1.3.0.SNAPSHOT</require>
<require extend="false" filter="(&amp;(package=org.apache.camel.component.log)(version&gt;=1.3.0.SNAPSHOT))" multiple="false" name="package" optional="false">Import package org.apache.camel.component.log ;version=1.3.0.SNAPSHOT</require>
<require extend="false" filter="(&amp;(package=org.apache.camel.component.mock)(version&gt;=1.3.0.SNAPSHOT))" multiple="false" name="package" optional="false">Import package org.apache.camel.component.mock ;version=1.3.0.SNAPSHOT</require>
<require extend="false" filter="(&amp;(package=org.apache.camel.component.ref)(version&gt;=1.3.0.SNAPSHOT))" multiple="false" name="package" optional="false">Import package org.apache.camel.component.ref ;version=1.3.0.SNAPSHOT</require>
<require extend="false" filter="(&amp;(package=org.apache.camel.component.seda)(version&gt;=1.3.0.SNAPSHOT))" multiple="false" name="package" optional="false">Import package org.apache.camel.component.seda ;version=1.3.0.SNAPSHOT</require>
<require extend="false" filter="(&amp;(package=org.apache.camel.component.timer)(version&gt;=1.3.0.SNAPSHOT))" multiple="false" name="package" optional="false">Import package org.apache.camel.component.timer ;version=1.3.0.SNAPSHOT</require>
<require extend="false" filter="(&amp;(package=org.apache.camel.component.validator)(version&gt;=1.3.0.SNAPSHOT))" multiple="false" name="package" optional="false">Import package org.apache.camel.component.validator ;version=1.3.0.SNAPSHOT</require>
<require extend="false" filter="(&amp;(package=org.apache.camel.component.vm)(version&gt;=1.3.0.SNAPSHOT))" multiple="false" name="package" optional="false">Import package org.apache.camel.component.vm ;version=1.3.0.SNAPSHOT</require>
<require extend="false" filter="(&amp;(package=org.apache.camel.component.xslt)(version&gt;=1.3.0.SNAPSHOT))" multiple="false" name="package" optional="false">Import package org.apache.camel.component.xslt ;version=1.3.0.SNAPSHOT</require>
<require extend="false" filter="(&amp;(package=org.apache.camel.converter)(version&gt;=1.3.0.SNAPSHOT))" multiple="false" name="package" optional="false">Import package org.apache.camel.converter ;version=1.3.0.SNAPSHOT</require>
<require extend="false" filter="(&amp;(package=org.apache.camel.converter.jaxp)(version&gt;=1.3.0.SNAPSHOT))" multiple="false" name="package" optional="false">Import package org.apache.camel.converter.jaxp ;version=1.3.0.SNAPSHOT</require>
<require extend="false" filter="(&amp;(package=org.apache.camel.impl)(version&gt;=1.3.0.SNAPSHOT))" multiple="false" name="package" optional="false">Import package org.apache.camel.impl ;version=1.3.0.SNAPSHOT</require>
<require extend="false" filter="(&amp;(package=org.apache.camel.impl.converter)(version&gt;=1.3.0.SNAPSHOT))" multiple="false" name="package" optional="false">Import package org.apache.camel.impl.converter ;version=1.3.0.SNAPSHOT</require>
<require extend="false" filter="(&amp;(package=org.apache.camel.language)(version&gt;=1.3.0.SNAPSHOT))" multiple="false" name="package" optional="false">Import package org.apache.camel.language ;version=1.3.0.SNAPSHOT</require>
<require extend="false" filter="(&amp;(package=org.apache.camel.management)(version&gt;=1.3.0.SNAPSHOT))" multiple="false" name="package" optional="false">Import package org.apache.camel.management ;version=1.3.0.SNAPSHOT</require>
<require extend="false" filter="(&amp;(package=org.apache.camel.model)(version&gt;=1.3.0.SNAPSHOT))" multiple="false" name="package" optional="false">Import package org.apache.camel.model ;version=1.3.0.SNAPSHOT</require>
<require extend="false" filter="(&amp;(package=org.apache.camel.model.dataformat)(version&gt;=1.3.0.SNAPSHOT))" multiple="false" name="package" optional="false">Import package org.apache.camel.model.dataformat ;version=1.3.0.SNAPSHOT</require>
<require extend="false" filter="(&amp;(package=org.apache.camel.model.loadbalancer)(version&gt;=1.3.0.SNAPSHOT))" multiple="false" name="package" optional="false">Import package org.apache.camel.model.loadbalancer ;version=1.3.0.SNAPSHOT</require>
<require extend="false" filter="(&amp;(package=org.apache.camel.processor)(version&gt;=1.3.0.SNAPSHOT))" multiple="false" name="package" optional="false">Import package org.apache.camel.processor ;version=1.3.0.SNAPSHOT</require>
<require extend="false" filter="(&amp;(package=org.apache.camel.processor.loadbalancer)(version&gt;=1.3.0.SNAPSHOT))" multiple="false" name="package" optional="false">Import package org.apache.camel.processor.loadbalancer ;version=1.3.0.SNAPSHOT</require>
<require extend="false" filter="(&amp;(package=org.apache.camel.processor.validation)(version&gt;=1.3.0.SNAPSHOT))" multiple="false" name="package" optional="false">Import package org.apache.camel.processor.validation ;version=1.3.0.SNAPSHOT</require>
<require extend="false" filter="(&amp;(package=org.apache.camel.spi)(version&gt;=1.3.0.SNAPSHOT))" multiple="false" name="package" optional="false">Import package org.apache.camel.spi ;version=1.3.0.SNAPSHOT</require>
<require extend="false" filter="(&amp;(package=org.apache.camel.spring)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package org.apache.camel.spring</require>
<require extend="false" filter="(&amp;(package=org.apache.camel.spring.handler)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package org.apache.camel.spring.handler</require>
<require extend="false" filter="(&amp;(package=org.apache.camel.spring.processor)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package org.apache.camel.spring.processor</require>
<require extend="false" filter="(&amp;(package=org.apache.camel.spring.remoting)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package org.apache.camel.spring.remoting</require>
<require extend="false" filter="(&amp;(package=org.apache.camel.spring.spi)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package org.apache.camel.spring.spi</require>
<require extend="false" filter="(&amp;(package=org.apache.camel.spring.util)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package org.apache.camel.spring.util</require>
<require extend="false" filter="(&amp;(package=org.apache.camel.util)(version&gt;=1.3.0.SNAPSHOT))" multiple="false" name="package" optional="false">Import package org.apache.camel.util ;version=1.3.0.SNAPSHOT</require>
<require extend="false" filter="(&amp;(package=org.apache.camel.view)(version&gt;=1.3.0.SNAPSHOT))" multiple="false" name="package" optional="false">Import package org.apache.camel.view ;version=1.3.0.SNAPSHOT</require>
<require extend="false" filter="(&amp;(package=org.apache.commons.logging)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package org.apache.commons.logging</require>
<require extend="false" filter="(&amp;(package=org.springframework.beans)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package org.springframework.beans</require>
<require extend="false" filter="(&amp;(package=org.springframework.beans.factory)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package org.springframework.beans.factory</require>
<require extend="false" filter="(&amp;(package=org.springframework.beans.factory.config)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package org.springframework.beans.factory.config</require>
<require extend="false" filter="(&amp;(package=org.springframework.beans.factory.parsing)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package org.springframework.beans.factory.parsing</require>
<require extend="false" filter="(&amp;(package=org.springframework.beans.factory.support)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package org.springframework.beans.factory.support</require>
<require extend="false" filter="(&amp;(package=org.springframework.beans.factory.wiring)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package org.springframework.beans.factory.wiring</require>
<require extend="false" filter="(&amp;(package=org.springframework.beans.factory.xml)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package org.springframework.beans.factory.xml</require>
<require extend="false" filter="(&amp;(package=org.springframework.context)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package org.springframework.context</require>
<require extend="false" filter="(&amp;(package=org.springframework.context.event)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package org.springframework.context.event</require>
<require extend="false" filter="(&amp;(package=org.springframework.context.support)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package org.springframework.context.support</require>
<require extend="false" filter="(&amp;(package=org.springframework.core.io)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package org.springframework.core.io</require>
<require extend="false" filter="(&amp;(package=org.springframework.remoting.support)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package org.springframework.remoting.support</require>
<require extend="false" filter="(&amp;(package=org.springframework.transaction)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package org.springframework.transaction</require>
<require extend="false" filter="(&amp;(package=org.springframework.transaction.support)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package org.springframework.transaction.support</require>
<require extend="false" filter="(&amp;(package=org.springframework.util)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package org.springframework.util</require>
<require extend="false" filter="(&amp;(package=org.springframework.util.xml)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package org.springframework.util.xml</require>
<require extend="false" filter="(&amp;(package=org.w3c.dom)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package org.w3c.dom</require>
</resource>
<resource id="40" presentationname="camel-mail" symbolicname="org.apache.camel.camel-mail" uri="http://people.apache.org/repo/m2-snapshot-repository/org/apache/camel/camel-mail/1.3-SNAPSHOT/camel-mail-1.3-SNAPSHOT.jar" version="1.3.0.SNAPSHOT">
<description>Camel Mail support</description>
<size>31967</size>
<documentation>http://www.apache.org/</documentation>
<source>http://svn.apache.org/viewvc/activemq/camel/trunk/camel-mail</source>
<license>http://www.apache.org/licenses/LICENSE-2.0.txt</license>
<category id="org.apache.camel"/>
<capability name="bundle">
<p n="manifestversion" v="2"/>
<p n="presentationname" v="camel-mail"/>
<p n="symbolicname" v="org.apache.camel.camel-mail"/>
<p n="version" t="version" v="1.3.0.SNAPSHOT"/>
</capability>
<capability name="package">
<p n="package" v="org.apache.camel.component.mail"/>
<p n="uses:" v="org.springframework.mail,org.apache.camel.converter,org.apache.commons.logging,javax.mail.event,javax.mail.internet,org.apache.camel,org.apache.camel.util,javax.mail,org.springframework.mail.javamail,org.apache.camel.impl"/>
<p n="version" t="version" v="1.3.0.SNAPSHOT"/>
</capability>
<require extend="false" filter="(&amp;(package=javax.mail)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package javax.mail</require>
<require extend="false" filter="(&amp;(package=javax.mail.event)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package javax.mail.event</require>
<require extend="false" filter="(&amp;(package=javax.mail.internet)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package javax.mail.internet</require>
<require extend="false" filter="(&amp;(package=org.apache.camel)(version&gt;=1.3.0.SNAPSHOT))" multiple="false" name="package" optional="false">Import package org.apache.camel ;version=1.3.0.SNAPSHOT</require>
<require extend="false" filter="(&amp;(package=org.apache.camel.component.mail)(version&gt;=1.3.0.SNAPSHOT))" multiple="false" name="package" optional="false">Import package org.apache.camel.component.mail ;version=1.3.0.SNAPSHOT</require>
<require extend="false" filter="(&amp;(package=org.apache.camel.converter)(version&gt;=1.3.0.SNAPSHOT))" multiple="false" name="package" optional="false">Import package org.apache.camel.converter ;version=1.3.0.SNAPSHOT</require>
<require extend="false" filter="(&amp;(package=org.apache.camel.impl)(version&gt;=1.3.0.SNAPSHOT))" multiple="false" name="package" optional="false">Import package org.apache.camel.impl ;version=1.3.0.SNAPSHOT</require>
<require extend="false" filter="(&amp;(package=org.apache.camel.util)(version&gt;=1.3.0.SNAPSHOT))" multiple="false" name="package" optional="false">Import package org.apache.camel.util ;version=1.3.0.SNAPSHOT</require>
<require extend="false" filter="(&amp;(package=org.apache.commons.logging)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package org.apache.commons.logging</require>
<require extend="false" filter="(&amp;(package=org.springframework.mail)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package org.springframework.mail</require>
<require extend="false" filter="(&amp;(package=org.springframework.mail.javamail)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package org.springframework.mail.javamail</require>
</resource>
<resource id="41" presentationname="camel-juel" symbolicname="org.apache.camel.camel-juel" uri="http://people.apache.org/repo/m2-snapshot-repository/org/apache/camel/camel-juel/1.3-SNAPSHOT/camel-juel-1.3-SNAPSHOT.jar" version="1.3.0.SNAPSHOT">
<description>Camel JUEL support</description>
<size>11910</size>
<documentation>http://www.apache.org/</documentation>
<source>http://svn.apache.org/viewvc/activemq/camel/trunk/camel-juel</source>
<license>http://www.apache.org/licenses/LICENSE-2.0.txt</license>
<category id="org.apache.camel"/>
<capability name="bundle">
<p n="manifestversion" v="2"/>
<p n="presentationname" v="camel-juel"/>
<p n="symbolicname" v="org.apache.camel.camel-juel"/>
<p n="version" t="version" v="1.3.0.SNAPSHOT"/>
</capability>
<capability name="package">
<p n="package" v="org.apache.camel.language.juel"/>
<p n="uses:" v="org.apache.camel.spi,org.apache.camel,de.odysseus.el.util,org.apache.camel.language,org.apache.camel.impl,javax.el"/>
<p n="version" t="version" v="1.3.0.SNAPSHOT"/>
</capability>
<require extend="false" filter="(&amp;(package=de.odysseus.el.util)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package de.odysseus.el.util</require>
<require extend="false" filter="(&amp;(package=javax.el)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package javax.el</require>
<require extend="false" filter="(&amp;(package=org.apache.camel)(version&gt;=1.3.0.SNAPSHOT))" multiple="false" name="package" optional="false">Import package org.apache.camel ;version=1.3.0.SNAPSHOT</require>
<require extend="false" filter="(&amp;(package=org.apache.camel.impl)(version&gt;=1.3.0.SNAPSHOT))" multiple="false" name="package" optional="false">Import package org.apache.camel.impl ;version=1.3.0.SNAPSHOT</require>
<require extend="false" filter="(&amp;(package=org.apache.camel.language)(version&gt;=1.3.0.SNAPSHOT))" multiple="false" name="package" optional="false">Import package org.apache.camel.language ;version=1.3.0.SNAPSHOT</require>
<require extend="false" filter="(&amp;(package=org.apache.camel.language.juel)(version&gt;=1.3.0.SNAPSHOT))" multiple="false" name="package" optional="false">Import package org.apache.camel.language.juel ;version=1.3.0.SNAPSHOT</require>
<require extend="false" filter="(&amp;(package=org.apache.camel.spi)(version&gt;=1.3.0.SNAPSHOT))" multiple="false" name="package" optional="false">Import package org.apache.camel.spi ;version=1.3.0.SNAPSHOT</require>
</resource>
<resource id="42" presentationname="camel-bam" symbolicname="org.apache.camel.camel-bam" uri="http://people.apache.org/repo/m2-snapshot-repository/org/apache/camel/camel-bam/1.3-SNAPSHOT/camel-bam-1.3-SNAPSHOT.jar" version="1.3.0.SNAPSHOT">
<description>Camel BAM support</description>
<size>46314</size>
<documentation>http://www.apache.org/</documentation>
<source>http://svn.apache.org/viewvc/activemq/camel/trunk/camel-bam</source>
<license>http://www.apache.org/licenses/LICENSE-2.0.txt</license>
<category id="org.apache.camel"/>
<capability name="bundle">
<p n="manifestversion" v="2"/>
<p n="presentationname" v="camel-bam"/>
<p n="symbolicname" v="org.apache.camel.camel-bam"/>
<p n="version" t="version" v="1.3.0.SNAPSHOT"/>
</capability>
<capability name="package">
<p n="package" v="org.apache.camel.bam.model"/>
<p n="uses:" v="org.springframework.orm.jpa,org.apache.camel.bam.rules,org.apache.commons.logging,org.apache.camel.util,javax.persistence,org.apache.camel.bam.processor"/>
<p n="version" t="version" v="1.3.0.SNAPSHOT"/>
</capability>
<capability name="package">
<p n="package" v="org.apache.camel.bam.rules"/>
<p n="uses:" v="org.apache.camel.model,org.apache.camel.bam.model,org.apache.camel,org.apache.camel.bam,org.apache.commons.logging,org.apache.camel.util,org.apache.camel.impl"/>
<p n="version" t="version" v="1.3.0.SNAPSHOT"/>
</capability>
<capability name="package">
<p n="package" v="org.apache.camel.bam"/>
<p n="uses:" v="org.apache.camel.bam.rules,org.apache.camel.bam.processor,org.springframework.transaction,org.apache.camel.builder,org.springframework.orm.jpa,org.apache.camel.bam.model,org.apache.camel,org.apache.camel.util,org.apache.camel.impl,org.springframework.transaction.support"/>
<p n="version" t="version" v="1.3.0.SNAPSHOT"/>
</capability>
<capability name="package">
<p n="package" v="org.apache.camel.bam.processor"/>
<p n="uses:" v="org.apache.camel.bam.rules,org.apache.commons.logging,org.springframework.dao,org.springframework.transaction,org.springframework.orm.jpa,org.apache.camel.bam.model,org.apache.camel.spi,org.apache.camel,org.apache.camel.util,javax.persistence,org.apache.camel.impl,org.springframework.transaction.support"/>
<p n="version" t="version" v="1.3.0.SNAPSHOT"/>
</capability>
<require extend="false" filter="(&amp;(package=javax.persistence)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package javax.persistence</require>
<require extend="false" filter="(&amp;(package=org.apache.camel)(version&gt;=1.3.0.SNAPSHOT))" multiple="false" name="package" optional="false">Import package org.apache.camel ;version=1.3.0.SNAPSHOT</require>
<require extend="false" filter="(&amp;(package=org.apache.camel.bam)(version&gt;=1.3.0.SNAPSHOT))" multiple="false" name="package" optional="false">Import package org.apache.camel.bam ;version=1.3.0.SNAPSHOT</require>
<require extend="false" filter="(&amp;(package=org.apache.camel.bam.model)(version&gt;=1.3.0.SNAPSHOT))" multiple="false" name="package" optional="false">Import package org.apache.camel.bam.model ;version=1.3.0.SNAPSHOT</require>
<require extend="false" filter="(&amp;(package=org.apache.camel.bam.processor)(version&gt;=1.3.0.SNAPSHOT))" multiple="false" name="package" optional="false">Import package org.apache.camel.bam.processor ;version=1.3.0.SNAPSHOT</require>
<require extend="false" filter="(&amp;(package=org.apache.camel.bam.rules)(version&gt;=1.3.0.SNAPSHOT))" multiple="false" name="package" optional="false">Import package org.apache.camel.bam.rules ;version=1.3.0.SNAPSHOT</require>
<require extend="false" filter="(&amp;(package=org.apache.camel.builder)(version&gt;=1.3.0.SNAPSHOT))" multiple="false" name="package" optional="false">Import package org.apache.camel.builder ;version=1.3.0.SNAPSHOT</require>
<require extend="false" filter="(&amp;(package=org.apache.camel.impl)(version&gt;=1.3.0.SNAPSHOT))" multiple="false" name="package" optional="false">Import package org.apache.camel.impl ;version=1.3.0.SNAPSHOT</require>
<require extend="false" filter="(&amp;(package=org.apache.camel.model)(version&gt;=1.3.0.SNAPSHOT))" multiple="false" name="package" optional="false">Import package org.apache.camel.model ;version=1.3.0.SNAPSHOT</require>
<require extend="false" filter="(&amp;(package=org.apache.camel.spi)(version&gt;=1.3.0.SNAPSHOT))" multiple="false" name="package" optional="false">Import package org.apache.camel.spi ;version=1.3.0.SNAPSHOT</require>
<require extend="false" filter="(&amp;(package=org.apache.camel.util)(version&gt;=1.3.0.SNAPSHOT))" multiple="false" name="package" optional="false">Import package org.apache.camel.util ;version=1.3.0.SNAPSHOT</require>
<require extend="false" filter="(&amp;(package=org.apache.commons.logging)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package org.apache.commons.logging</require>
<require extend="false" filter="(&amp;(package=org.springframework.dao)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package org.springframework.dao</require>
<require extend="false" filter="(&amp;(package=org.springframework.orm.jpa)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package org.springframework.orm.jpa</require>
<require extend="false" filter="(&amp;(package=org.springframework.transaction)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package org.springframework.transaction</require>
<require extend="false" filter="(&amp;(package=org.springframework.transaction.support)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package org.springframework.transaction.support</require>
</resource>
<resource id="43" presentationname="camel-msv" symbolicname="org.apache.camel.camel-msv" uri="http://people.apache.org/repo/m2-snapshot-repository/org/apache/camel/camel-msv/1.3-SNAPSHOT/camel-msv-1.3-SNAPSHOT.jar" version="1.3.0.SNAPSHOT">
<description>Camel MSV support</description>
<size>8752</size>
<documentation>http://www.apache.org/</documentation>
<source>http://svn.apache.org/viewvc/activemq/camel/trunk/camel-msv</source>
<license>http://www.apache.org/licenses/LICENSE-2.0.txt</license>
<category id="org.apache.camel"/>
<capability name="bundle">
<p n="manifestversion" v="2"/>
<p n="presentationname" v="camel-msv"/>
<p n="symbolicname" v="org.apache.camel.camel-msv"/>
<p n="version" t="version" v="1.3.0.SNAPSHOT"/>
</capability>
<require extend="false" filter="(&amp;(package=*)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package *</require>
</resource>
<resource id="44" presentationname="camel-velocity" symbolicname="org.apache.camel.camel-velocity" uri="http://people.apache.org/repo/m2-snapshot-repository/org/apache/camel/camel-velocity/1.3-SNAPSHOT/camel-velocity-1.3-SNAPSHOT.jar" version="1.3.0.SNAPSHOT">
<description>Camel Velocity support</description>
<size>7190</size>
<documentation>http://www.apache.org/</documentation>
<source>http://svn.apache.org/viewvc/activemq/camel/trunk/camel-velocity</source>
<license>http://www.apache.org/licenses/LICENSE-2.0.txt</license>
<category id="org.apache.camel"/>
<capability name="bundle">
<p n="manifestversion" v="2"/>
<p n="presentationname" v="camel-velocity"/>
<p n="symbolicname" v="org.apache.camel.camel-velocity"/>
<p n="version" t="version" v="1.3.0.SNAPSHOT"/>
</capability>
<capability name="package">
<p n="package" v="org.apache.camel.component.velocity"/>
<p n="uses:" v="org.springframework.core.io,org.apache.camel,org.apache.velocity.app,org.apache.velocity,org.apache.velocity.context,org.apache.camel.util,org.apache.camel.impl,org.apache.camel.component"/>
<p n="version" t="version" v="1.3.0.SNAPSHOT"/>
</capability>
<require extend="false" filter="(&amp;(package=org.apache.camel)(version&gt;=1.3.0.SNAPSHOT))" multiple="false" name="package" optional="false">Import package org.apache.camel ;version=1.3.0.SNAPSHOT</require>
<require extend="false" filter="(&amp;(package=org.apache.camel.component)(version&gt;=1.3.0.SNAPSHOT))" multiple="false" name="package" optional="false">Import package org.apache.camel.component ;version=1.3.0.SNAPSHOT</require>
<require extend="false" filter="(&amp;(package=org.apache.camel.component.velocity)(version&gt;=1.3.0.SNAPSHOT))" multiple="false" name="package" optional="false">Import package org.apache.camel.component.velocity ;version=1.3.0.SNAPSHOT</require>
<require extend="false" filter="(&amp;(package=org.apache.camel.impl)(version&gt;=1.3.0.SNAPSHOT))" multiple="false" name="package" optional="false">Import package org.apache.camel.impl ;version=1.3.0.SNAPSHOT</require>
<require extend="false" filter="(&amp;(package=org.apache.camel.util)(version&gt;=1.3.0.SNAPSHOT))" multiple="false" name="package" optional="false">Import package org.apache.camel.util ;version=1.3.0.SNAPSHOT</require>
<require extend="false" filter="(&amp;(package=org.apache.velocity)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package org.apache.velocity</require>
<require extend="false" filter="(&amp;(package=org.apache.velocity.app)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package org.apache.velocity.app</require>
<require extend="false" filter="(&amp;(package=org.apache.velocity.context)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package org.apache.velocity.context</require>
<require extend="false" filter="(&amp;(package=org.springframework.core.io)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package org.springframework.core.io</require>
</resource>
<resource id="45" presentationname="camel-xmpp" symbolicname="org.apache.camel.camel-xmpp" uri="http://people.apache.org/repo/m2-snapshot-repository/org/apache/camel/camel-xmpp/1.3-SNAPSHOT/camel-xmpp-1.3-SNAPSHOT.jar" version="1.3.0.SNAPSHOT">
<description>Camel XMPP support</description>
<size>23170</size>
<documentation>http://www.apache.org/</documentation>
<source>http://svn.apache.org/viewvc/activemq/camel/trunk/camel-xmpp</source>
<license>http://www.apache.org/licenses/LICENSE-2.0.txt</license>
<category id="org.apache.camel"/>
<capability name="bundle">
<p n="manifestversion" v="2"/>
<p n="presentationname" v="camel-xmpp"/>
<p n="symbolicname" v="org.apache.camel.camel-xmpp"/>
<p n="version" t="version" v="1.3.0.SNAPSHOT"/>
</capability>
<capability name="package">
<p n="package" v="org.apache.camel.component.xmpp"/>
<p n="uses:" v="org.jivesoftware.smack.filter,org.jivesoftware.smack.packet,org.apache.camel,org.jivesoftware.smack,org.apache.commons.logging,org.apache.camel.impl"/>
<p n="version" t="version" v="1.3.0.SNAPSHOT"/>
</capability>
<require extend="false" filter="(&amp;(package=org.apache.camel)(version&gt;=1.3.0.SNAPSHOT))" multiple="false" name="package" optional="false">Import package org.apache.camel ;version=1.3.0.SNAPSHOT</require>
<require extend="false" filter="(&amp;(package=org.apache.camel.component.xmpp)(version&gt;=1.3.0.SNAPSHOT))" multiple="false" name="package" optional="false">Import package org.apache.camel.component.xmpp ;version=1.3.0.SNAPSHOT</require>
<require extend="false" filter="(&amp;(package=org.apache.camel.impl)(version&gt;=1.3.0.SNAPSHOT))" multiple="false" name="package" optional="false">Import package org.apache.camel.impl ;version=1.3.0.SNAPSHOT</require>
<require extend="false" filter="(&amp;(package=org.apache.commons.logging)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package org.apache.commons.logging</require>
<require extend="false" filter="(&amp;(package=org.jivesoftware.smack)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package org.jivesoftware.smack</require>
<require extend="false" filter="(&amp;(package=org.jivesoftware.smack.filter)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package org.jivesoftware.smack.filter</require>
<require extend="false" filter="(&amp;(package=org.jivesoftware.smack.packet)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package org.jivesoftware.smack.packet</require>
</resource>
<resource id="46" presentationname="camel-ibatis" symbolicname="org.apache.camel.camel-ibatis" uri="http://people.apache.org/repo/m2-snapshot-repository/org/apache/camel/camel-ibatis/1.3-SNAPSHOT/camel-ibatis-1.3-SNAPSHOT.jar" version="1.3.0.SNAPSHOT">
<description>Camel iBatis support</description>
<size>13959</size>
<documentation>http://www.apache.org/</documentation>
<source>http://svn.apache.org/viewvc/activemq/camel/trunk/camel-ibatis</source>
<license>http://www.apache.org/licenses/LICENSE-2.0.txt</license>
<category id="org.apache.camel"/>
<capability name="bundle">
<p n="manifestversion" v="2"/>
<p n="presentationname" v="camel-ibatis"/>
<p n="symbolicname" v="org.apache.camel.camel-ibatis"/>
<p n="version" t="version" v="1.3.0.SNAPSHOT"/>
</capability>
<capability name="package">
<p n="package" v="org.apache.camel.component.ibatis"/>
<p n="uses:" v="org.springframework.core.io,org.apache.camel,com.ibatis.sqlmap.client,org.apache.commons.logging,org.apache.camel.impl"/>
<p n="version" t="version" v="1.3.0.SNAPSHOT"/>
</capability>
<require extend="false" filter="(&amp;(package=com.ibatis.sqlmap.client)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package com.ibatis.sqlmap.client</require>
<require extend="false" filter="(&amp;(package=org.apache.camel)(version&gt;=1.3.0.SNAPSHOT))" multiple="false" name="package" optional="false">Import package org.apache.camel ;version=1.3.0.SNAPSHOT</require>
<require extend="false" filter="(&amp;(package=org.apache.camel.component.ibatis)(version&gt;=1.3.0.SNAPSHOT))" multiple="false" name="package" optional="false">Import package org.apache.camel.component.ibatis ;version=1.3.0.SNAPSHOT</require>
<require extend="false" filter="(&amp;(package=org.apache.camel.impl)(version&gt;=1.3.0.SNAPSHOT))" multiple="false" name="package" optional="false">Import package org.apache.camel.impl ;version=1.3.0.SNAPSHOT</require>
<require extend="false" filter="(&amp;(package=org.apache.commons.logging)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package org.apache.commons.logging</require>
<require extend="false" filter="(&amp;(package=org.springframework.core.io)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package org.springframework.core.io</require>
</resource>
<resource id="47" presentationname="camel-quartz" symbolicname="org.apache.camel.camel-quartz" uri="http://people.apache.org/repo/m2-snapshot-repository/org/apache/camel/camel-quartz/1.3-SNAPSHOT/camel-quartz-1.3-SNAPSHOT.jar" version="1.3.0.SNAPSHOT">
<description>Camel Quartz support</description>
<size>19183</size>
<documentation>http://www.apache.org/</documentation>
<source>http://svn.apache.org/viewvc/activemq/camel/trunk/camel-quartz</source>
<license>http://www.apache.org/licenses/LICENSE-2.0.txt</license>
<category id="org.apache.camel"/>
<capability name="bundle">
<p n="manifestversion" v="2"/>
<p n="presentationname" v="camel-quartz"/>
<p n="symbolicname" v="org.apache.camel.camel-quartz"/>
<p n="version" t="version" v="1.3.0.SNAPSHOT"/>
</capability>
<capability name="package">
<p n="package" v="org.apache.camel.component.quartz"/>
<p n="uses:" v="org.apache.camel,org.quartz.impl,org.apache.commons.logging,org.apache.camel.util,org.apache.camel.impl,org.quartz,org.apache.camel.processor.loadbalancer"/>
<p n="version" t="version" v="1.3.0.SNAPSHOT"/>
</capability>
<require extend="false" filter="(&amp;(package=org.apache.camel)(version&gt;=1.3.0.SNAPSHOT))" multiple="false" name="package" optional="false">Import package org.apache.camel ;version=1.3.0.SNAPSHOT</require>
<require extend="false" filter="(&amp;(package=org.apache.camel.component.quartz)(version&gt;=1.3.0.SNAPSHOT))" multiple="false" name="package" optional="false">Import package org.apache.camel.component.quartz ;version=1.3.0.SNAPSHOT</require>
<require extend="false" filter="(&amp;(package=org.apache.camel.impl)(version&gt;=1.3.0.SNAPSHOT))" multiple="false" name="package" optional="false">Import package org.apache.camel.impl ;version=1.3.0.SNAPSHOT</require>
<require extend="false" filter="(&amp;(package=org.apache.camel.processor.loadbalancer)(version&gt;=1.3.0.SNAPSHOT))" multiple="false" name="package" optional="false">Import package org.apache.camel.processor.loadbalancer ;version=1.3.0.SNAPSHOT</require>
<require extend="false" filter="(&amp;(package=org.apache.camel.util)(version&gt;=1.3.0.SNAPSHOT))" multiple="false" name="package" optional="false">Import package org.apache.camel.util ;version=1.3.0.SNAPSHOT</require>
<require extend="false" filter="(&amp;(package=org.apache.commons.logging)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package org.apache.commons.logging</require>
<require extend="false" filter="(&amp;(package=org.quartz)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package org.quartz</require>
<require extend="false" filter="(&amp;(package=org.quartz.impl)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package org.quartz.impl</require>
</resource>
<resource id="48" presentationname="camel-atom" symbolicname="org.apache.camel.camel-atom" uri="http://people.apache.org/repo/m2-snapshot-repository/org/apache/camel/camel-atom/1.3-SNAPSHOT/camel-atom-1.3-SNAPSHOT.jar" version="1.3.0.SNAPSHOT">
<description>Camel Atom support</description>
<size>17477</size>
<documentation>http://www.apache.org/</documentation>
<source>http://svn.apache.org/viewvc/activemq/camel/trunk/camel-atom</source>
<license>http://www.apache.org/licenses/LICENSE-2.0.txt</license>
<category id="org.apache.camel"/>
<capability name="bundle">
<p n="manifestversion" v="2"/>
<p n="presentationname" v="camel-atom"/>
<p n="symbolicname" v="org.apache.camel.camel-atom"/>
<p n="version" t="version" v="1.3.0.SNAPSHOT"/>
</capability>
<capability name="package">
<p n="package" v="org.apache.camel.component.atom"/>
<p n="uses:" v="org.apache.abdera.model,org.apache.abdera,org.apache.commons.logging,org.apache.abdera.parser,org.apache.camel,org.apache.camel.util,org.apache.camel.impl,org.apache.abdera.factory"/>
<p n="version" t="version" v="1.3.0.SNAPSHOT"/>
</capability>
<require extend="false" filter="(&amp;(package=org.apache.abdera)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package org.apache.abdera</require>
<require extend="false" filter="(&amp;(package=org.apache.abdera.factory)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package org.apache.abdera.factory</require>
<require extend="false" filter="(&amp;(package=org.apache.abdera.model)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package org.apache.abdera.model</require>
<require extend="false" filter="(&amp;(package=org.apache.abdera.parser)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package org.apache.abdera.parser</require>
<require extend="false" filter="(&amp;(package=org.apache.camel)(version&gt;=1.3.0.SNAPSHOT))" multiple="false" name="package" optional="false">Import package org.apache.camel ;version=1.3.0.SNAPSHOT</require>
<require extend="false" filter="(&amp;(package=org.apache.camel.component.atom)(version&gt;=1.3.0.SNAPSHOT))" multiple="false" name="package" optional="false">Import package org.apache.camel.component.atom ;version=1.3.0.SNAPSHOT</require>
<require extend="false" filter="(&amp;(package=org.apache.camel.impl)(version&gt;=1.3.0.SNAPSHOT))" multiple="false" name="package" optional="false">Import package org.apache.camel.impl ;version=1.3.0.SNAPSHOT</require>
<require extend="false" filter="(&amp;(package=org.apache.camel.util)(version&gt;=1.3.0.SNAPSHOT))" multiple="false" name="package" optional="false">Import package org.apache.camel.util ;version=1.3.0.SNAPSHOT</require>
<require extend="false" filter="(&amp;(package=org.apache.commons.logging)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package org.apache.commons.logging</require>
</resource>
<resource id="49" presentationname="camel-http" symbolicname="org.apache.camel.camel-http" uri="http://people.apache.org/repo/m2-snapshot-repository/org/apache/camel/camel-http/1.3-SNAPSHOT/camel-http-1.3-SNAPSHOT.jar" version="1.3.0.SNAPSHOT">
<description>Camel HTTP support</description>
<size>22148</size>
<documentation>http://www.apache.org/</documentation>
<source>http://svn.apache.org/viewvc/activemq/camel/trunk/camel-http</source>
<license>http://www.apache.org/licenses/LICENSE-2.0.txt</license>
<category id="org.apache.camel"/>
<capability name="bundle">
<p n="manifestversion" v="2"/>
<p n="presentationname" v="camel-http"/>
<p n="symbolicname" v="org.apache.camel.camel-http"/>
<p n="version" t="version" v="1.3.0.SNAPSHOT"/>
</capability>
<capability name="package">
<p n="package" v="org.apache.camel.component.http"/>
<p n="uses:" v="javax.servlet.http,org.apache.commons.httpclient.params,org.apache.commons.httpclient,org.apache.commons.httpclient.methods,javax.servlet,org.apache.camel,org.apache.camel.util,org.apache.camel.impl"/>
<p n="version" t="version" v="1.3.0.SNAPSHOT"/>
</capability>
<require extend="false" filter="(&amp;(package=javax.servlet)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package javax.servlet</require>
<require extend="false" filter="(&amp;(package=javax.servlet.http)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package javax.servlet.http</require>
<require extend="false" filter="(&amp;(package=org.apache.camel)(version&gt;=1.3.0.SNAPSHOT))" multiple="false" name="package" optional="false">Import package org.apache.camel ;version=1.3.0.SNAPSHOT</require>
<require extend="false" filter="(&amp;(package=org.apache.camel.component.http)(version&gt;=1.3.0.SNAPSHOT))" multiple="false" name="package" optional="false">Import package org.apache.camel.component.http ;version=1.3.0.SNAPSHOT</require>
<require extend="false" filter="(&amp;(package=org.apache.camel.impl)(version&gt;=1.3.0.SNAPSHOT))" multiple="false" name="package" optional="false">Import package org.apache.camel.impl ;version=1.3.0.SNAPSHOT</require>
<require extend="false" filter="(&amp;(package=org.apache.camel.util)(version&gt;=1.3.0.SNAPSHOT))" multiple="false" name="package" optional="false">Import package org.apache.camel.util ;version=1.3.0.SNAPSHOT</require>
<require extend="false" filter="(&amp;(package=org.apache.commons.httpclient)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package org.apache.commons.httpclient</require>
<require extend="false" filter="(&amp;(package=org.apache.commons.httpclient.methods)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package org.apache.commons.httpclient.methods</require>
<require extend="false" filter="(&amp;(package=org.apache.commons.httpclient.params)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package org.apache.commons.httpclient.params</require>
</resource>
<resource id="50" presentationname="camel-jetty" symbolicname="org.apache.camel.camel-jetty" uri="http://people.apache.org/repo/m2-snapshot-repository/org/apache/camel/camel-jetty/1.3-SNAPSHOT/camel-jetty-1.3-SNAPSHOT.jar" version="1.3.0.SNAPSHOT">
<description>Camel Jetty support</description>
<size>20282</size>
<documentation>http://www.apache.org/</documentation>
<source>http://svn.apache.org/viewvc/activemq/camel/trunk/camel-jetty</source>
<license>http://www.apache.org/licenses/LICENSE-2.0.txt</license>
<category id="org.apache.camel"/>
<capability name="bundle">
<p n="manifestversion" v="2"/>
<p n="presentationname" v="camel-jetty"/>
<p n="symbolicname" v="org.apache.camel.camel-jetty"/>
<p n="version" t="version" v="1.3.0.SNAPSHOT"/>
</capability>
<capability name="package">
<p n="package" v="org.apache.camel.component.jetty"/>
<p n="uses:" v="javax.servlet.http,org.mortbay.jetty.nio,org.mortbay.jetty.security,javax.servlet,org.apache.camel,org.mortbay.jetty.servlet,org.apache.camel.component.http,org.mortbay.jetty.client,org.mortbay.io,org.apache.camel.impl,org.mortbay.jetty,org.mortbay.util.ajax"/>
<p n="version" t="version" v="1.3.0.SNAPSHOT"/>
</capability>
<require extend="false" filter="(&amp;(package=javax.servlet)(version&gt;=2.5.0))" multiple="false" name="package" optional="false">Import package javax.servlet ;version=2.5.0</require>
<require extend="false" filter="(&amp;(package=javax.servlet.http)(version&gt;=2.5.0))" multiple="false" name="package" optional="false">Import package javax.servlet.http ;version=2.5.0</require>
<require extend="false" filter="(&amp;(package=org.apache.camel)(version&gt;=1.3.0.SNAPSHOT))" multiple="false" name="package" optional="false">Import package org.apache.camel ;version=1.3.0.SNAPSHOT</require>
<require extend="false" filter="(&amp;(package=org.apache.camel.component.http)(version&gt;=1.3.0.SNAPSHOT))" multiple="false" name="package" optional="false">Import package org.apache.camel.component.http ;version=1.3.0.SNAPSHOT</require>
<require extend="false" filter="(&amp;(package=org.apache.camel.component.jetty)(version&gt;=1.3.0.SNAPSHOT))" multiple="false" name="package" optional="false">Import package org.apache.camel.component.jetty ;version=1.3.0.SNAPSHOT</require>
<require extend="false" filter="(&amp;(package=org.apache.camel.impl)(version&gt;=1.3.0.SNAPSHOT))" multiple="false" name="package" optional="false">Import package org.apache.camel.impl ;version=1.3.0.SNAPSHOT</require>
<require extend="false" filter="(&amp;(package=org.mortbay.io)(version&gt;=6.1.0))" multiple="false" name="package" optional="false">Import package org.mortbay.io ;version=6.1.0</require>
<require extend="false" filter="(&amp;(package=org.mortbay.jetty)(version&gt;=6.1.0))" multiple="false" name="package" optional="false">Import package org.mortbay.jetty ;version=6.1.0</require>
<require extend="false" filter="(&amp;(package=org.mortbay.jetty.client)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package org.mortbay.jetty.client</require>
<require extend="false" filter="(&amp;(package=org.mortbay.jetty.nio)(version&gt;=6.1.0))" multiple="false" name="package" optional="false">Import package org.mortbay.jetty.nio ;version=6.1.0</require>
<require extend="false" filter="(&amp;(package=org.mortbay.jetty.security)(version&gt;=6.1.0))" multiple="false" name="package" optional="false">Import package org.mortbay.jetty.security ;version=6.1.0</require>
<require extend="false" filter="(&amp;(package=org.mortbay.jetty.servlet)(version&gt;=6.1.0))" multiple="false" name="package" optional="false">Import package org.mortbay.jetty.servlet ;version=6.1.0</require>
<require extend="false" filter="(&amp;(package=org.mortbay.util.ajax)(version&gt;=6.1.0))" multiple="false" name="package" optional="false">Import package org.mortbay.util.ajax ;version=6.1.0</require>
</resource>
<resource id="51" presentationname="camel-ognl" symbolicname="org.apache.camel.camel-ognl" uri="http://people.apache.org/repo/m2-snapshot-repository/org/apache/camel/camel-ognl/1.3-SNAPSHOT/camel-ognl-1.3-SNAPSHOT.jar" version="1.3.0.SNAPSHOT">
<description>Camel OGNL support</description>
<size>12609</size>
<documentation>http://www.apache.org/</documentation>
<source>http://svn.apache.org/viewvc/activemq/camel/trunk/camel-ognl</source>
<license>http://www.apache.org/licenses/LICENSE-2.0.txt</license>
<category id="org.apache.camel"/>
<capability name="bundle">
<p n="manifestversion" v="2"/>
<p n="presentationname" v="camel-ognl"/>
<p n="symbolicname" v="org.apache.camel.camel-ognl"/>
<p n="version" t="version" v="1.3.0.SNAPSHOT"/>
</capability>
<capability name="package">
<p n="package" v="org.apache.camel.language.ognl"/>
<p n="uses:" v="org.apache.camel,org.apache.camel.spi,ognl,org.apache.camel.language,org.apache.camel.impl"/>
<p n="version" t="version" v="1.3.0.SNAPSHOT"/>
</capability>
<require extend="false" filter="(&amp;(package=ognl)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package ognl</require>
<require extend="false" filter="(&amp;(package=org.apache.camel)(version&gt;=1.3.0.SNAPSHOT))" multiple="false" name="package" optional="false">Import package org.apache.camel ;version=1.3.0.SNAPSHOT</require>
<require extend="false" filter="(&amp;(package=org.apache.camel.impl)(version&gt;=1.3.0.SNAPSHOT))" multiple="false" name="package" optional="false">Import package org.apache.camel.impl ;version=1.3.0.SNAPSHOT</require>
<require extend="false" filter="(&amp;(package=org.apache.camel.language)(version&gt;=1.3.0.SNAPSHOT))" multiple="false" name="package" optional="false">Import package org.apache.camel.language ;version=1.3.0.SNAPSHOT</require>
<require extend="false" filter="(&amp;(package=org.apache.camel.language.ognl)(version&gt;=1.3.0.SNAPSHOT))" multiple="false" name="package" optional="false">Import package org.apache.camel.language.ognl ;version=1.3.0.SNAPSHOT</require>
<require extend="false" filter="(&amp;(package=org.apache.camel.spi)(version&gt;=1.3.0.SNAPSHOT))" multiple="false" name="package" optional="false">Import package org.apache.camel.spi ;version=1.3.0.SNAPSHOT</require>
</resource>
<resource id="52" presentationname="camel-saxon" symbolicname="org.apache.camel.camel-saxon" uri="http://people.apache.org/repo/m2-snapshot-repository/org/apache/camel/camel-saxon/1.3-SNAPSHOT/camel-saxon-1.3-SNAPSHOT.jar" version="1.3.0.SNAPSHOT">
<description>Camel SAXON support</description>
<size>24312</size>
<documentation>http://www.apache.org/</documentation>
<source>http://svn.apache.org/viewvc/activemq/camel/trunk/camel-saxon</source>
<license>http://www.apache.org/licenses/LICENSE-2.0.txt</license>
<category id="org.apache.camel"/>
<capability name="bundle">
<p n="manifestversion" v="2"/>
<p n="presentationname" v="camel-saxon"/>
<p n="symbolicname" v="org.apache.camel.camel-saxon"/>
<p n="version" t="version" v="1.3.0.SNAPSHOT"/>
</capability>
<capability name="package">
<p n="package" v="org.apache.camel.component.xquery"/>
<p n="uses:" v="net.sf.saxon.query,net.sf.saxon.functions,net.sf.saxon.om,javax.xml.transform,org.apache.camel.converter.jaxp,net.sf.saxon.trans,org.springframework.core.io,org.apache.camel.util,javax.xml.transform.stream,org.apache.camel.impl,org.apache.camel.converter,org.w3c.dom,org.apache.commons.logging,org.apache.camel.component,javax.xml.transform.dom,org.apache.camel,org.apache.camel.spi,net.sf.saxon,org.apache.camel.component.bean,org.apache.camel.language"/>
<p n="version" t="version" v="1.3.0.SNAPSHOT"/>
</capability>
<require extend="false" filter="(&amp;(package=javax.xml.transform)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package javax.xml.transform</require>
<require extend="false" filter="(&amp;(package=javax.xml.transform.dom)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package javax.xml.transform.dom</require>
<require extend="false" filter="(&amp;(package=javax.xml.transform.stream)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package javax.xml.transform.stream</require>
<require extend="false" filter="(&amp;(package=net.sf.saxon)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package net.sf.saxon</require>
<require extend="false" filter="(&amp;(package=net.sf.saxon.functions)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package net.sf.saxon.functions</require>
<require extend="false" filter="(&amp;(package=net.sf.saxon.om)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package net.sf.saxon.om</require>
<require extend="false" filter="(&amp;(package=net.sf.saxon.query)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package net.sf.saxon.query</require>
<require extend="false" filter="(&amp;(package=net.sf.saxon.trans)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package net.sf.saxon.trans</require>
<require extend="false" filter="(&amp;(package=org.apache.camel)(version&gt;=1.3.0.SNAPSHOT))" multiple="false" name="package" optional="false">Import package org.apache.camel ;version=1.3.0.SNAPSHOT</require>
<require extend="false" filter="(&amp;(package=org.apache.camel.component)(version&gt;=1.3.0.SNAPSHOT))" multiple="false" name="package" optional="false">Import package org.apache.camel.component ;version=1.3.0.SNAPSHOT</require>
<require extend="false" filter="(&amp;(package=org.apache.camel.component.bean)(version&gt;=1.3.0.SNAPSHOT))" multiple="false" name="package" optional="false">Import package org.apache.camel.component.bean ;version=1.3.0.SNAPSHOT</require>
<require extend="false" filter="(&amp;(package=org.apache.camel.component.xquery)(version&gt;=1.3.0.SNAPSHOT))" multiple="false" name="package" optional="false">Import package org.apache.camel.component.xquery ;version=1.3.0.SNAPSHOT</require>
<require extend="false" filter="(&amp;(package=org.apache.camel.converter)(version&gt;=1.3.0.SNAPSHOT))" multiple="false" name="package" optional="false">Import package org.apache.camel.converter ;version=1.3.0.SNAPSHOT</require>
<require extend="false" filter="(&amp;(package=org.apache.camel.converter.jaxp)(version&gt;=1.3.0.SNAPSHOT))" multiple="false" name="package" optional="false">Import package org.apache.camel.converter.jaxp ;version=1.3.0.SNAPSHOT</require>
<require extend="false" filter="(&amp;(package=org.apache.camel.impl)(version&gt;=1.3.0.SNAPSHOT))" multiple="false" name="package" optional="false">Import package org.apache.camel.impl ;version=1.3.0.SNAPSHOT</require>
<require extend="false" filter="(&amp;(package=org.apache.camel.language)(version&gt;=1.3.0.SNAPSHOT))" multiple="false" name="package" optional="false">Import package org.apache.camel.language ;version=1.3.0.SNAPSHOT</require>
<require extend="false" filter="(&amp;(package=org.apache.camel.spi)(version&gt;=1.3.0.SNAPSHOT))" multiple="false" name="package" optional="false">Import package org.apache.camel.spi ;version=1.3.0.SNAPSHOT</require>
<require extend="false" filter="(&amp;(package=org.apache.camel.util)(version&gt;=1.3.0.SNAPSHOT))" multiple="false" name="package" optional="false">Import package org.apache.camel.util ;version=1.3.0.SNAPSHOT</require>
<require extend="false" filter="(&amp;(package=org.apache.commons.logging)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package org.apache.commons.logging</require>
<require extend="false" filter="(&amp;(package=org.springframework.core.io)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package org.springframework.core.io</require>
<require extend="false" filter="(&amp;(package=org.w3c.dom)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package org.w3c.dom</require>
</resource>
<resource id="53" presentationname="camel-xmlbeans" symbolicname="org.apache.camel.camel-xmlbeans" uri="http://people.apache.org/repo/m2-snapshot-repository/org/apache/camel/camel-xmlbeans/1.3-SNAPSHOT/camel-xmlbeans-1.3-SNAPSHOT.jar" version="1.3.0.SNAPSHOT">
<description>Camel XMLBeans support</description>
<size>11273</size>
<documentation>http://www.apache.org/</documentation>
<source>http://svn.apache.org/viewvc/activemq/camel/trunk/camel-xmlbeans</source>
<license>http://www.apache.org/licenses/LICENSE-2.0.txt</license>
<category id="org.apache.camel"/>
<capability name="bundle">
<p n="manifestversion" v="2"/>
<p n="presentationname" v="camel-xmlbeans"/>
<p n="symbolicname" v="org.apache.camel.camel-xmlbeans"/>
<p n="version" t="version" v="1.3.0.SNAPSHOT"/>
</capability>
<capability name="package">
<p n="package" v="org.apache.camel.converter.xmlbeans"/>
<p n="uses:" v="org.apache.xmlbeans,org.xml.sax,org.apache.camel.converter,org.w3c.dom,org.apache.xmlbeans.impl.piccolo.xml,javax.xml.transform,org.apache.camel.converter.jaxp,org.apache.camel,javax.xml.parsers,org.apache.camel.spi,org.apache.camel.util"/>
<p n="version" t="version" v="1.3.0.SNAPSHOT"/>
</capability>
<require extend="false" filter="(&amp;(package=javax.xml.parsers)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package javax.xml.parsers</require>
<require extend="false" filter="(&amp;(package=javax.xml.transform)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package javax.xml.transform</require>
<require extend="false" filter="(&amp;(package=org.apache.camel)(version&gt;=1.3.0.SNAPSHOT))" multiple="false" name="package" optional="false">Import package org.apache.camel ;version=1.3.0.SNAPSHOT</require>
<require extend="false" filter="(&amp;(package=org.apache.camel.converter)(version&gt;=1.3.0.SNAPSHOT))" multiple="false" name="package" optional="false">Import package org.apache.camel.converter ;version=1.3.0.SNAPSHOT</require>
<require extend="false" filter="(&amp;(package=org.apache.camel.converter.jaxp)(version&gt;=1.3.0.SNAPSHOT))" multiple="false" name="package" optional="false">Import package org.apache.camel.converter.jaxp ;version=1.3.0.SNAPSHOT</require>
<require extend="false" filter="(&amp;(package=org.apache.camel.converter.xmlbeans)(version&gt;=1.3.0.SNAPSHOT))" multiple="false" name="package" optional="false">Import package org.apache.camel.converter.xmlbeans ;version=1.3.0.SNAPSHOT</require>
<require extend="false" filter="(&amp;(package=org.apache.camel.spi)(version&gt;=1.3.0.SNAPSHOT))" multiple="false" name="package" optional="false">Import package org.apache.camel.spi ;version=1.3.0.SNAPSHOT</require>
<require extend="false" filter="(&amp;(package=org.apache.camel.util)(version&gt;=1.3.0.SNAPSHOT))" multiple="false" name="package" optional="false">Import package org.apache.camel.util ;version=1.3.0.SNAPSHOT</require>
<require extend="false" filter="(&amp;(package=org.apache.xmlbeans)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package org.apache.xmlbeans</require>
<require extend="false" filter="(&amp;(package=org.apache.xmlbeans.impl.piccolo.xml)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package org.apache.xmlbeans.impl.piccolo.xml</require>
<require extend="false" filter="(&amp;(package=org.w3c.dom)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package org.w3c.dom</require>
<require extend="false" filter="(&amp;(package=org.xml.sax)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package org.xml.sax</require>
</resource>
<resource id="54" presentationname="camel-rmi" symbolicname="org.apache.camel.camel-rmi" uri="http://people.apache.org/repo/m2-snapshot-repository/org/apache/camel/camel-rmi/1.3-SNAPSHOT/camel-rmi-1.3-SNAPSHOT.jar" version="1.3.0.SNAPSHOT">
<description>Camel RMI support</description>
<size>15397</size>
<documentation>http://www.apache.org/</documentation>
<source>http://svn.apache.org/viewvc/activemq/camel/trunk/camel-rmi</source>
<license>http://www.apache.org/licenses/LICENSE-2.0.txt</license>
<category id="org.apache.camel"/>
<capability name="bundle">
<p n="manifestversion" v="2"/>
<p n="presentationname" v="camel-rmi"/>
<p n="symbolicname" v="org.apache.camel.camel-rmi"/>
<p n="version" t="version" v="1.3.0.SNAPSHOT"/>
</capability>
<capability name="package">
<p n="package" v="org.apache.camel.component.rmi"/>
<p n="uses:" v="org.apache.camel,org.apache.camel.component.bean,org.apache.camel.impl"/>
<p n="version" t="version" v="1.3.0.SNAPSHOT"/>
</capability>
<require extend="false" filter="(&amp;(package=org.apache.camel)(version&gt;=1.3.0.SNAPSHOT))" multiple="false" name="package" optional="false">Import package org.apache.camel ;version=1.3.0.SNAPSHOT</require>
<require extend="false" filter="(&amp;(package=org.apache.camel.component.bean)(version&gt;=1.3.0.SNAPSHOT))" multiple="false" name="package" optional="false">Import package org.apache.camel.component.bean ;version=1.3.0.SNAPSHOT</require>
<require extend="false" filter="(&amp;(package=org.apache.camel.component.rmi)(version&gt;=1.3.0.SNAPSHOT))" multiple="false" name="package" optional="false">Import package org.apache.camel.component.rmi ;version=1.3.0.SNAPSHOT</require>
<require extend="false" filter="(&amp;(package=org.apache.camel.impl)(version&gt;=1.3.0.SNAPSHOT))" multiple="false" name="package" optional="false">Import package org.apache.camel.impl ;version=1.3.0.SNAPSHOT</require>
</resource>
<resource id="55" presentationname="camel-script" symbolicname="org.apache.camel.camel-script" uri="http://people.apache.org/repo/m2-snapshot-repository/org/apache/camel/camel-script/1.3-SNAPSHOT/camel-script-1.3-SNAPSHOT.jar" version="1.3.0.SNAPSHOT">
<description>Camel Script support</description>
<size>19112</size>
<documentation>http://www.apache.org/</documentation>
<source>http://svn.apache.org/viewvc/activemq/camel/trunk/camel-script</source>
<license>http://www.apache.org/licenses/LICENSE-2.0.txt</license>
<category id="org.apache.camel"/>
<capability name="bundle">
<p n="manifestversion" v="2"/>
<p n="presentationname" v="camel-script"/>
<p n="symbolicname" v="org.apache.camel.camel-script"/>
<p n="version" t="version" v="1.3.0.SNAPSHOT"/>
</capability>
<capability name="package">
<p n="package" v="org.apache.camel.builder.script"/>
<p n="uses:" v="javax.script,org.springframework.core.io,org.apache.camel.converter,org.apache.camel.spi,org.apache.camel,org.apache.commons.logging,org.apache.camel.language"/>
<p n="version" t="version" v="1.3.0.SNAPSHOT"/>
</capability>
<require extend="false" filter="(&amp;(package=javax.script)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package javax.script</require>
<require extend="false" filter="(&amp;(package=org.apache.camel)(version&gt;=1.3.0.SNAPSHOT))" multiple="false" name="package" optional="false">Import package org.apache.camel ;version=1.3.0.SNAPSHOT</require>
<require extend="false" filter="(&amp;(package=org.apache.camel.builder.script)(version&gt;=1.3.0.SNAPSHOT))" multiple="false" name="package" optional="false">Import package org.apache.camel.builder.script ;version=1.3.0.SNAPSHOT</require>
<require extend="false" filter="(&amp;(package=org.apache.camel.converter)(version&gt;=1.3.0.SNAPSHOT))" multiple="false" name="package" optional="false">Import package org.apache.camel.converter ;version=1.3.0.SNAPSHOT</require>
<require extend="false" filter="(&amp;(package=org.apache.camel.language)(version&gt;=1.3.0.SNAPSHOT))" multiple="false" name="package" optional="false">Import package org.apache.camel.language ;version=1.3.0.SNAPSHOT</require>
<require extend="false" filter="(&amp;(package=org.apache.camel.spi)(version&gt;=1.3.0.SNAPSHOT))" multiple="false" name="package" optional="false">Import package org.apache.camel.spi ;version=1.3.0.SNAPSHOT</require>
<require extend="false" filter="(&amp;(package=org.apache.commons.logging)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package org.apache.commons.logging</require>
<require extend="false" filter="(&amp;(package=org.springframework.core.io)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package org.springframework.core.io</require>
</resource>
<resource id="56" presentationname="camel-josql" symbolicname="org.apache.camel.camel-josql" uri="http://people.apache.org/repo/m2-snapshot-repository/org/apache/camel/camel-josql/1.3-SNAPSHOT/camel-josql-1.3-SNAPSHOT.jar" version="1.3.0.SNAPSHOT">
<description>Camel JoSQL support</description>
<size>10816</size>
<documentation>http://www.apache.org/</documentation>
<source>http://svn.apache.org/viewvc/activemq/camel/trunk/camel-josql</source>
<license>http://www.apache.org/licenses/LICENSE-2.0.txt</license>
<category id="org.apache.camel"/>
<capability name="bundle">
<p n="manifestversion" v="2"/>
<p n="presentationname" v="camel-josql"/>
<p n="symbolicname" v="org.apache.camel.camel-josql"/>
<p n="version" t="version" v="1.3.0.SNAPSHOT"/>
</capability>
<capability name="package">
<p n="package" v="org.apache.camel.builder.sql"/>
<p n="uses:" v="org.josql,org.apache.camel,org.apache.camel.util,org.apache.camel.language"/>
<p n="version" t="version" v="1.3.0.SNAPSHOT"/>
</capability>
<require extend="false" filter="(&amp;(package=org.apache.camel)(version&gt;=1.3.0.SNAPSHOT))" multiple="false" name="package" optional="false">Import package org.apache.camel ;version=1.3.0.SNAPSHOT</require>
<require extend="false" filter="(&amp;(package=org.apache.camel.builder.sql)(version&gt;=1.3.0.SNAPSHOT))" multiple="false" name="package" optional="false">Import package org.apache.camel.builder.sql ;version=1.3.0.SNAPSHOT</require>
<require extend="false" filter="(&amp;(package=org.apache.camel.language)(version&gt;=1.3.0.SNAPSHOT))" multiple="false" name="package" optional="false">Import package org.apache.camel.language ;version=1.3.0.SNAPSHOT</require>
<require extend="false" filter="(&amp;(package=org.apache.camel.util)(version&gt;=1.3.0.SNAPSHOT))" multiple="false" name="package" optional="false">Import package org.apache.camel.util ;version=1.3.0.SNAPSHOT</require>
<require extend="false" filter="(&amp;(package=org.josql)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package org.josql</require>
</resource>
<resource id="57" presentationname="camel-jms" symbolicname="org.apache.camel.camel-jms" uri="http://people.apache.org/repo/m2-snapshot-repository/org/apache/camel/camel-jms/1.3-SNAPSHOT/camel-jms-1.3-SNAPSHOT.jar" version="1.3.0.SNAPSHOT">
<description>Camel JMS support</description>
<size>56508</size>
<documentation>http://www.apache.org/</documentation>
<source>http://svn.apache.org/viewvc/activemq/camel/trunk/camel-jms</source>
<license>http://www.apache.org/licenses/LICENSE-2.0.txt</license>
<category id="org.apache.camel"/>
<capability name="bundle">
<p n="manifestversion" v="2"/>
<p n="presentationname" v="camel-jms"/>
<p n="symbolicname" v="org.apache.camel.camel-jms"/>
<p n="version" t="version" v="1.3.0.SNAPSHOT"/>
</capability>
<capability name="package">
<p n="package" v="org.apache.camel.component.jms.requestor"/>
<p n="uses:" v="org.springframework.jms.listener,org.springframework.jms.support.destination,org.apache.camel,org.apache.camel.component.jms,org.apache.camel.util,org.apache.commons.logging,org.springframework.core.task,org.apache.camel.impl,javax.jms"/>
<p n="version" t="version" v="1.3.0.SNAPSHOT"/>
</capability>
<capability name="package">
<p n="package" v="org.apache.camel.component.jms"/>
<p n="uses:" v="org.springframework.jms.listener,org.springframework.jms.listener.serversession,org.springframework.jms.core,javax.xml.transform,org.apache.camel.converter.jaxp,org.apache.camel.util,org.apache.camel.impl,org.springframework.jms.connection,org.apache.camel.component.jms.requestor,org.apache.camel.converter,org.w3c.dom,org.apache.commons.logging,org.springframework.context,org.springframework.transaction,org.springframework.jms.support.converter,org.springframework.jms.support.destination,org.apache.camel,org.springframework.core.task,org.springframework.beans,javax.jms"/>
<p n="version" t="version" v="1.3.0.SNAPSHOT"/>
</capability>
<require extend="false" filter="(&amp;(package=javax.jms)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package javax.jms</require>
<require extend="false" filter="(&amp;(package=javax.xml.transform)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package javax.xml.transform</require>
<require extend="false" filter="(&amp;(package=org.apache.camel)(version&gt;=1.3.0.SNAPSHOT))" multiple="false" name="package" optional="false">Import package org.apache.camel ;version=1.3.0.SNAPSHOT</require>
<require extend="false" filter="(&amp;(package=org.apache.camel.component.jms)(version&gt;=1.3.0.SNAPSHOT))" multiple="false" name="package" optional="false">Import package org.apache.camel.component.jms ;version=1.3.0.SNAPSHOT</require>
<require extend="false" filter="(&amp;(package=org.apache.camel.component.jms.requestor)(version&gt;=1.3.0.SNAPSHOT))" multiple="false" name="package" optional="false">Import package org.apache.camel.component.jms.requestor ;version=1.3.0.SNAPSHOT</require>
<require extend="false" filter="(&amp;(package=org.apache.camel.converter)(version&gt;=1.3.0.SNAPSHOT))" multiple="false" name="package" optional="false">Import package org.apache.camel.converter ;version=1.3.0.SNAPSHOT</require>
<require extend="false" filter="(&amp;(package=org.apache.camel.converter.jaxp)(version&gt;=1.3.0.SNAPSHOT))" multiple="false" name="package" optional="false">Import package org.apache.camel.converter.jaxp ;version=1.3.0.SNAPSHOT</require>
<require extend="false" filter="(&amp;(package=org.apache.camel.impl)(version&gt;=1.3.0.SNAPSHOT))" multiple="false" name="package" optional="false">Import package org.apache.camel.impl ;version=1.3.0.SNAPSHOT</require>
<require extend="false" filter="(&amp;(package=org.apache.camel.util)(version&gt;=1.3.0.SNAPSHOT))" multiple="false" name="package" optional="false">Import package org.apache.camel.util ;version=1.3.0.SNAPSHOT</require>
<require extend="false" filter="(&amp;(package=org.apache.commons.logging)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package org.apache.commons.logging</require>
<require extend="false" filter="(&amp;(package=org.springframework.beans)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package org.springframework.beans</require>
<require extend="false" filter="(&amp;(package=org.springframework.context)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package org.springframework.context</require>
<require extend="false" filter="(&amp;(package=org.springframework.core.task)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package org.springframework.core.task</require>
<require extend="false" filter="(&amp;(package=org.springframework.jms.connection)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package org.springframework.jms.connection</require>
<require extend="false" filter="(&amp;(package=org.springframework.jms.core)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package org.springframework.jms.core</require>
<require extend="false" filter="(&amp;(package=org.springframework.jms.listener)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package org.springframework.jms.listener</require>
<require extend="false" filter="(&amp;(package=org.springframework.jms.listener.serversession)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package org.springframework.jms.listener.serversession</require>
<require extend="false" filter="(&amp;(package=org.springframework.jms.support.converter)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package org.springframework.jms.support.converter</require>
<require extend="false" filter="(&amp;(package=org.springframework.jms.support.destination)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package org.springframework.jms.support.destination</require>
<require extend="false" filter="(&amp;(package=org.springframework.transaction)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package org.springframework.transaction</require>
<require extend="false" filter="(&amp;(package=org.w3c.dom)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package org.w3c.dom</require>
</resource>
<resource id="58" presentationname="camel-xstream" symbolicname="org.apache.camel.camel-xstream" uri="http://people.apache.org/repo/m2-snapshot-repository/org/apache/camel/camel-xstream/1.3-SNAPSHOT/camel-xstream-1.3-SNAPSHOT.jar" version="1.3.0.SNAPSHOT">
<description>Camel XStream support</description>
<size>4773</size>
<documentation>http://www.apache.org/</documentation>
<source>http://svn.apache.org/viewvc/activemq/camel/trunk/camel-xstream</source>
<license>http://www.apache.org/licenses/LICENSE-2.0.txt</license>
<category id="org.apache.camel"/>
<capability name="bundle">
<p n="manifestversion" v="2"/>
<p n="presentationname" v="camel-xstream"/>
<p n="symbolicname" v="org.apache.camel.camel-xstream"/>
<p n="version" t="version" v="1.3.0.SNAPSHOT"/>
</capability>
<capability name="package">
<p n="package" v="org.apache.camel.dataformat.xstream"/>
<p n="uses:" v="org.apache.camel.converter.jaxp,com.thoughtworks.xstream.io,com.thoughtworks.xstream.io.xml,com.thoughtworks.xstream,org.apache.camel.spi,org.apache.camel,javax.xml.stream"/>
<p n="version" t="version" v="1.3.0.SNAPSHOT"/>
</capability>
<require extend="false" filter="(&amp;(package=com.thoughtworks.xstream)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package com.thoughtworks.xstream</require>
<require extend="false" filter="(&amp;(package=com.thoughtworks.xstream.io)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package com.thoughtworks.xstream.io</require>
<require extend="false" filter="(&amp;(package=com.thoughtworks.xstream.io.xml)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package com.thoughtworks.xstream.io.xml</require>
<require extend="false" filter="(&amp;(package=javax.xml.stream)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package javax.xml.stream</require>
<require extend="false" filter="(&amp;(package=org.apache.camel)(version&gt;=1.3.0.SNAPSHOT))" multiple="false" name="package" optional="false">Import package org.apache.camel ;version=1.3.0.SNAPSHOT</require>
<require extend="false" filter="(&amp;(package=org.apache.camel.converter.jaxp)(version&gt;=1.3.0.SNAPSHOT))" multiple="false" name="package" optional="false">Import package org.apache.camel.converter.jaxp ;version=1.3.0.SNAPSHOT</require>
<require extend="false" filter="(&amp;(package=org.apache.camel.dataformat.xstream)(version&gt;=1.3.0.SNAPSHOT))" multiple="false" name="package" optional="false">Import package org.apache.camel.dataformat.xstream ;version=1.3.0.SNAPSHOT</require>
<require extend="false" filter="(&amp;(package=org.apache.camel.spi)(version&gt;=1.3.0.SNAPSHOT))" multiple="false" name="package" optional="false">Import package org.apache.camel.spi ;version=1.3.0.SNAPSHOT</require>
</resource>
<resource id="59" presentationname="camel-jing" symbolicname="org.apache.camel.camel-jing" uri="http://people.apache.org/repo/m2-snapshot-repository/org/apache/camel/camel-jing/1.3-SNAPSHOT/camel-jing-1.3-SNAPSHOT.jar" version="1.3.0.SNAPSHOT">
<description>Camel Jing support</description>
<size>14992</size>
<documentation>http://www.apache.org/</documentation>
<source>http://svn.apache.org/viewvc/activemq/camel/trunk/camel-jing</source>
<license>http://www.apache.org/licenses/LICENSE-2.0.txt</license>
<category id="org.apache.camel"/>
<capability name="bundle">
<p n="manifestversion" v="2"/>
<p n="presentationname" v="camel-jing"/>
<p n="symbolicname" v="org.apache.camel.camel-jing"/>
<p n="version" t="version" v="1.3.0.SNAPSHOT"/>
</capability>
<capability name="package">
<p n="package" v="org.apache.camel.component.validator.jing"/>
<p n="uses:" v="org.xml.sax,com.thaiopensource.util,org.apache.commons.logging,org.apache.camel.component,javax.xml.transform,javax.xml.transform.sax,org.springframework.core.io,com.thaiopensource.validate,org.apache.camel,com.thaiopensource.xml.sax,org.apache.camel.util,com.thaiopensource.relaxng,org.apache.camel.impl,org.apache.camel.processor.validation"/>
<p n="version" t="version" v="1.3.0.SNAPSHOT"/>
</capability>
<require extend="false" filter="(&amp;(package=com.thaiopensource.relaxng)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package com.thaiopensource.relaxng</require>
<require extend="false" filter="(&amp;(package=com.thaiopensource.util)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package com.thaiopensource.util</require>
<require extend="false" filter="(&amp;(package=com.thaiopensource.validate)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package com.thaiopensource.validate</require>
<require extend="false" filter="(&amp;(package=com.thaiopensource.xml.sax)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package com.thaiopensource.xml.sax</require>
<require extend="false" filter="(&amp;(package=javax.xml.transform)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package javax.xml.transform</require>
<require extend="false" filter="(&amp;(package=javax.xml.transform.sax)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package javax.xml.transform.sax</require>
<require extend="false" filter="(&amp;(package=org.apache.camel)(version&gt;=1.3.0.SNAPSHOT))" multiple="false" name="package" optional="false">Import package org.apache.camel ;version=1.3.0.SNAPSHOT</require>
<require extend="false" filter="(&amp;(package=org.apache.camel.component)(version&gt;=1.3.0.SNAPSHOT))" multiple="false" name="package" optional="false">Import package org.apache.camel.component ;version=1.3.0.SNAPSHOT</require>
<require extend="false" filter="(&amp;(package=org.apache.camel.component.validator.jing)(version&gt;=1.3.0.SNAPSHOT))" multiple="false" name="package" optional="false">Import package org.apache.camel.component.validator.jing ;version=1.3.0.SNAPSHOT</require>
<require extend="false" filter="(&amp;(package=org.apache.camel.impl)(version&gt;=1.3.0.SNAPSHOT))" multiple="false" name="package" optional="false">Import package org.apache.camel.impl ;version=1.3.0.SNAPSHOT</require>
<require extend="false" filter="(&amp;(package=org.apache.camel.processor.validation)(version&gt;=1.3.0.SNAPSHOT))" multiple="false" name="package" optional="false">Import package org.apache.camel.processor.validation ;version=1.3.0.SNAPSHOT</require>
<require extend="false" filter="(&amp;(package=org.apache.camel.util)(version&gt;=1.3.0.SNAPSHOT))" multiple="false" name="package" optional="false">Import package org.apache.camel.util ;version=1.3.0.SNAPSHOT</require>
<require extend="false" filter="(&amp;(package=org.apache.commons.logging)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package org.apache.commons.logging</require>
<require extend="false" filter="(&amp;(package=org.springframework.core.io)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package org.springframework.core.io</require>
<require extend="false" filter="(&amp;(package=org.xml.sax)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package org.xml.sax</require>
</resource>
<resource id="60" presentationname="camel-jdbc" symbolicname="org.apache.camel.camel-jdbc" uri="http://people.apache.org/repo/m2-snapshot-repository/org/apache/camel/camel-jdbc/1.3-SNAPSHOT/camel-jdbc-1.3-SNAPSHOT.jar" version="1.3.0.SNAPSHOT">
<description>Camel JDBC support</description>
<size>13336</size>
<documentation>http://www.apache.org/</documentation>
<source>http://svn.apache.org/viewvc/activemq/camel/trunk/camel-jdbc</source>
<license>http://www.apache.org/licenses/LICENSE-2.0.txt</license>
<category id="org.apache.camel"/>
<capability name="bundle">
<p n="manifestversion" v="2"/>
<p n="presentationname" v="camel-jdbc"/>
<p n="symbolicname" v="org.apache.camel.camel-jdbc"/>
<p n="version" t="version" v="1.3.0.SNAPSHOT"/>
</capability>
<capability name="package">
<p n="package" v="org.apache.camel.component.jdbc"/>
<p n="uses:" v="org.apache.camel.spi,org.apache.camel,org.apache.camel.util,org.apache.camel.impl,javax.sql"/>
<p n="version" t="version" v="1.3.0.SNAPSHOT"/>
</capability>
<require extend="false" filter="(&amp;(package=javax.sql)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package javax.sql</require>
<require extend="false" filter="(&amp;(package=org.apache.camel)(version&gt;=1.3.0.SNAPSHOT))" multiple="false" name="package" optional="false">Import package org.apache.camel ;version=1.3.0.SNAPSHOT</require>
<require extend="false" filter="(&amp;(package=org.apache.camel.component.jdbc)(version&gt;=1.3.0.SNAPSHOT))" multiple="false" name="package" optional="false">Import package org.apache.camel.component.jdbc ;version=1.3.0.SNAPSHOT</require>
<require extend="false" filter="(&amp;(package=org.apache.camel.impl)(version&gt;=1.3.0.SNAPSHOT))" multiple="false" name="package" optional="false">Import package org.apache.camel.impl ;version=1.3.0.SNAPSHOT</require>
<require extend="false" filter="(&amp;(package=org.apache.camel.spi)(version&gt;=1.3.0.SNAPSHOT))" multiple="false" name="package" optional="false">Import package org.apache.camel.spi ;version=1.3.0.SNAPSHOT</require>
<require extend="false" filter="(&amp;(package=org.apache.camel.util)(version&gt;=1.3.0.SNAPSHOT))" multiple="false" name="package" optional="false">Import package org.apache.camel.util ;version=1.3.0.SNAPSHOT</require>
</resource>
<resource id="61" presentationname="camel-stringtemplate" symbolicname="org.apache.camel.camel-stringtemplate" uri="http://people.apache.org/repo/m2-snapshot-repository/org/apache/camel/camel-stringtemplate/1.3-SNAPSHOT/camel-stringtemplate-1.3-SNAPSHOT.jar" version="1.3.0.SNAPSHOT">
<description>Camel StringTemplate support</description>
<size>4151</size>
<documentation>http://www.apache.org/</documentation>
<source>http://svn.apache.org/viewvc/activemq/camel/trunk/camel-stringtemplate</source>
<license>http://www.apache.org/licenses/LICENSE-2.0.txt</license>
<category id="org.apache.camel"/>
<capability name="bundle">
<p n="manifestversion" v="2"/>
<p n="presentationname" v="camel-stringtemplate"/>
<p n="symbolicname" v="org.apache.camel.camel-stringtemplate"/>
<p n="version" t="version" v="1.3.0.SNAPSHOT"/>
</capability>
<require extend="false" filter="(&amp;(package=*)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package *</require>
</resource>
<resource id="62" presentationname="camel-jaxb" symbolicname="org.apache.camel.camel-jaxb" uri="http://people.apache.org/repo/m2-snapshot-repository/org/apache/camel/camel-jaxb/1.3-SNAPSHOT/camel-jaxb-1.3-SNAPSHOT.jar" version="1.3.0.SNAPSHOT">
<description>Camel JAXB support</description>
<size>23180</size>
<documentation>http://www.apache.org/</documentation>
<source>http://svn.apache.org/viewvc/activemq/camel/trunk/camel-jaxb</source>
<license>http://www.apache.org/licenses/LICENSE-2.0.txt</license>
<category id="org.apache.camel"/>
<capability name="bundle">
<p n="manifestversion" v="2"/>
<p n="presentationname" v="camel-jaxb"/>
<p n="symbolicname" v="org.apache.camel.camel-jaxb"/>
<p n="version" t="version" v="1.3.0.SNAPSHOT"/>
</capability>
<capability name="package">
<p n="package" v="org.apache.camel.converter.jaxb"/>
<p n="uses:" v="org.apache.camel.converter,org.w3c.dom,javax.xml.bind.util,org.apache.commons.logging,javax.xml.bind.annotation,javax.xml.transform,org.apache.camel.converter.jaxp,org.apache.camel,org.apache.camel.spi,javax.xml.parsers,org.apache.camel.util,javax.xml.bind"/>
<p n="version" t="version" v="1.3.0.SNAPSHOT"/>
</capability>
<require extend="false" filter="(&amp;(package=javax.xml.bind)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package javax.xml.bind</require>
<require extend="false" filter="(&amp;(package=javax.xml.bind.annotation)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package javax.xml.bind.annotation</require>
<require extend="false" filter="(&amp;(package=javax.xml.bind.util)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package javax.xml.bind.util</require>
<require extend="false" filter="(&amp;(package=javax.xml.parsers)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package javax.xml.parsers</require>
<require extend="false" filter="(&amp;(package=javax.xml.transform)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package javax.xml.transform</require>
<require extend="false" filter="(&amp;(package=org.apache.camel)(version&gt;=1.3.0.SNAPSHOT))" multiple="false" name="package" optional="false">Import package org.apache.camel ;version=1.3.0.SNAPSHOT</require>
<require extend="false" filter="(&amp;(package=org.apache.camel.converter)(version&gt;=1.3.0.SNAPSHOT))" multiple="false" name="package" optional="false">Import package org.apache.camel.converter ;version=1.3.0.SNAPSHOT</require>
<require extend="false" filter="(&amp;(package=org.apache.camel.converter.jaxb)(version&gt;=1.3.0.SNAPSHOT))" multiple="false" name="package" optional="false">Import package org.apache.camel.converter.jaxb ;version=1.3.0.SNAPSHOT</require>
<require extend="false" filter="(&amp;(package=org.apache.camel.converter.jaxp)(version&gt;=1.3.0.SNAPSHOT))" multiple="false" name="package" optional="false">Import package org.apache.camel.converter.jaxp ;version=1.3.0.SNAPSHOT</require>
<require extend="false" filter="(&amp;(package=org.apache.camel.spi)(version&gt;=1.3.0.SNAPSHOT))" multiple="false" name="package" optional="false">Import package org.apache.camel.spi ;version=1.3.0.SNAPSHOT</require>
<require extend="false" filter="(&amp;(package=org.apache.camel.util)(version&gt;=1.3.0.SNAPSHOT))" multiple="false" name="package" optional="false">Import package org.apache.camel.util ;version=1.3.0.SNAPSHOT</require>
<require extend="false" filter="(&amp;(package=org.apache.commons.logging)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package org.apache.commons.logging</require>
<require extend="false" filter="(&amp;(package=org.w3c.dom)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package org.w3c.dom</require>
</resource>
<resource id="63" presentationname="camel-jpa" symbolicname="org.apache.camel.camel-jpa" uri="http://people.apache.org/repo/m2-snapshot-repository/org/apache/camel/camel-jpa/1.3-SNAPSHOT/camel-jpa-1.3-SNAPSHOT.jar" version="1.3.0.SNAPSHOT">
<description>Camel JPA support</description>
<size>35133</size>
<documentation>http://www.apache.org/</documentation>
<source>http://svn.apache.org/viewvc/activemq/camel/trunk/camel-jpa</source>
<license>http://www.apache.org/licenses/LICENSE-2.0.txt</license>
<category id="org.apache.camel"/>
<capability name="bundle">
<p n="manifestversion" v="2"/>
<p n="presentationname" v="camel-jpa"/>
<p n="symbolicname" v="org.apache.camel.camel-jpa"/>
<p n="version" t="version" v="1.3.0.SNAPSHOT"/>
</capability>
<capability name="package">
<p n="package" v="org.apache.camel.component.jpa"/>
<p n="uses:" v="org.apache.camel.converter,org.apache.commons.logging,org.springframework.transaction,org.springframework.orm.jpa,org.apache.camel.builder,org.apache.camel,org.apache.camel.spi,javax.persistence,org.apache.camel.util,org.apache.camel.impl,org.springframework.transaction.support"/>
<p n="version" t="version" v="1.3.0.SNAPSHOT"/>
</capability>
<require extend="false" filter="(&amp;(package=javax.persistence)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package javax.persistence</require>
<require extend="false" filter="(&amp;(package=org.apache.camel)(version&gt;=1.3.0.SNAPSHOT))" multiple="false" name="package" optional="false">Import package org.apache.camel ;version=1.3.0.SNAPSHOT</require>
<require extend="false" filter="(&amp;(package=org.apache.camel.builder)(version&gt;=1.3.0.SNAPSHOT))" multiple="false" name="package" optional="false">Import package org.apache.camel.builder ;version=1.3.0.SNAPSHOT</require>
<require extend="false" filter="(&amp;(package=org.apache.camel.component.jpa)(version&gt;=1.3.0.SNAPSHOT))" multiple="false" name="package" optional="false">Import package org.apache.camel.component.jpa ;version=1.3.0.SNAPSHOT</require>
<require extend="false" filter="(&amp;(package=org.apache.camel.converter)(version&gt;=1.3.0.SNAPSHOT))" multiple="false" name="package" optional="false">Import package org.apache.camel.converter ;version=1.3.0.SNAPSHOT</require>
<require extend="false" filter="(&amp;(package=org.apache.camel.impl)(version&gt;=1.3.0.SNAPSHOT))" multiple="false" name="package" optional="false">Import package org.apache.camel.impl ;version=1.3.0.SNAPSHOT</require>
<require extend="false" filter="(&amp;(package=org.apache.camel.spi)(version&gt;=1.3.0.SNAPSHOT))" multiple="false" name="package" optional="false">Import package org.apache.camel.spi ;version=1.3.0.SNAPSHOT</require>
<require extend="false" filter="(&amp;(package=org.apache.camel.util)(version&gt;=1.3.0.SNAPSHOT))" multiple="false" name="package" optional="false">Import package org.apache.camel.util ;version=1.3.0.SNAPSHOT</require>
<require extend="false" filter="(&amp;(package=org.apache.commons.logging)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package org.apache.commons.logging</require>
<require extend="false" filter="(&amp;(package=org.springframework.orm.jpa)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package org.springframework.orm.jpa</require>
<require extend="false" filter="(&amp;(package=org.springframework.transaction)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package org.springframework.transaction</require>
<require extend="false" filter="(&amp;(package=org.springframework.transaction.support)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package org.springframework.transaction.support</require>
</resource>
<resource id="64" presentationname="camel-irc" symbolicname="org.apache.camel.camel-irc" uri="http://people.apache.org/repo/m2-snapshot-repository/org/apache/camel/camel-irc/1.3-SNAPSHOT/camel-irc-1.3-SNAPSHOT.jar" version="1.3.0.SNAPSHOT">
<description>Camel IRC support</description>
<size>26372</size>
<documentation>http://www.apache.org/</documentation>
<source>http://svn.apache.org/viewvc/activemq/camel/trunk/camel-irc</source>
<license>http://www.apache.org/licenses/LICENSE-2.0.txt</license>
<category id="org.apache.camel"/>
<capability name="bundle">
<p n="manifestversion" v="2"/>
<p n="presentationname" v="camel-irc"/>
<p n="symbolicname" v="org.apache.camel.camel-irc"/>
<p n="version" t="version" v="1.3.0.SNAPSHOT"/>
</capability>
<capability name="package">
<p n="package" v="org.apache.camel.component.irc"/>
<p n="uses:" v="org.apache.camel,org.schwering.irc.lib,org.apache.commons.logging,org.apache.camel.impl"/>
<p n="version" t="version" v="1.3.0.SNAPSHOT"/>
</capability>
<require extend="false" filter="(&amp;(package=org.apache.camel)(version&gt;=1.3.0.SNAPSHOT))" multiple="false" name="package" optional="false">Import package org.apache.camel ;version=1.3.0.SNAPSHOT</require>
<require extend="false" filter="(&amp;(package=org.apache.camel.component.irc)(version&gt;=1.3.0.SNAPSHOT))" multiple="false" name="package" optional="false">Import package org.apache.camel.component.irc ;version=1.3.0.SNAPSHOT</require>
<require extend="false" filter="(&amp;(package=org.apache.camel.impl)(version&gt;=1.3.0.SNAPSHOT))" multiple="false" name="package" optional="false">Import package org.apache.camel.impl ;version=1.3.0.SNAPSHOT</require>
<require extend="false" filter="(&amp;(package=org.apache.commons.logging)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package org.apache.commons.logging</require>
<require extend="false" filter="(&amp;(package=org.schwering.irc.lib)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package org.schwering.irc.lib</require>
</resource>
<resource id="65" presentationname="camel-cxf" symbolicname="org.apache.camel.camel-cxf" uri="http://people.apache.org/repo/m2-snapshot-repository/org/apache/camel/camel-cxf/1.3-SNAPSHOT/camel-cxf-1.3-SNAPSHOT.jar" version="1.3.0.SNAPSHOT">
<description>Camel CXF support</description>
<size>133939</size>
<documentation>http://www.apache.org/</documentation>
<source>http://svn.apache.org/viewvc/activemq/camel/trunk/camel-cxf</source>
<license>http://www.apache.org/licenses/LICENSE-2.0.txt</license>
<category id="org.apache.camel"/>
<capability name="bundle">
<p n="manifestversion" v="2"/>
<p n="presentationname" v="camel-cxf"/>
<p n="symbolicname" v="org.apache.camel.camel-cxf"/>
<p n="version" t="version" v="1.3.0.SNAPSHOT"/>
</capability>
<capability name="package">
<p n="package" v="org.apache.camel.component.cxf.interceptors"/>
<p n="uses:" v="org.apache.cxf.common.logging,javax.xml.namespace,org.apache.cxf.common.i18n,org.apache.cxf.bindings.xformat,org.apache.cxf.binding.xml,org.apache.cxf.phase,org.apache.cxf.message,org.apache.cxf.binding.soap.interceptor,org.apache.camel.component.cxf,org.apache.cxf.ws.addressing,org.apache.cxf.service,javax.xml.stream,javax.wsdl,org.apache.cxf.endpoint,org.apache.camel.component.cxf.invoker,org.w3c.dom,org.apache.cxf.binding.soap.model,org.apache.cxf.service.model,org.apache.cxf.transport,org.apache.cxf.interceptor,org.apache.cxf.binding.soap,org.apache.commons.io,org.apache.cxf.staxutils,org.apache.cxf.wsdl11,org.apache.cxf.helpers"/>
<p n="version" t="version" v="1.3.0.SNAPSHOT"/>
</capability>
<capability name="package">
<p n="package" v="org.apache.camel.component.cxf.util"/>
<p n="uses:" v="org.apache.cxf.common.logging,org.apache.cxf.jaxws,javax.xml.namespace,org.apache.cxf.frontend,org.apache.cxf.common.i18n,javax.xml.transform,org.apache.cxf.service.factory,org.apache.cxf.jaxws.support,org.apache.cxf.message,org.apache.cxf.binding.soap.interceptor,org.apache.cxf.ws.addressing,org.apache.camel.component.cxf,org.apache.cxf.service,javax.xml.stream,org.apache.cxf.endpoint,org.w3c.dom,org.apache.cxf.service.model,org.apache.cxf.transport,org.apache.cxf.interceptor,javax.xml.transform.dom,org.apache.cxf.common.classloader,org.apache.camel,org.apache.cxf.io,javax.jws,org.apache.cxf,org.apache.cxf.staxutils,org.apache.cxf.wsdl11"/>
<p n="version" t="version" v="1.3.0.SNAPSHOT"/>
</capability>
<capability name="package">
<p n="package" v="org.apache.camel.component.cxf.invoker"/>
<p n="uses:" v="javax.xml.namespace,org.apache.cxf.jaxws.binding.soap,org.apache.cxf.frontend,org.apache.cxf.phase,org.apache.cxf.service.factory,org.apache.cxf.message,org.apache.cxf.jaxws.support,org.apache.cxf.binding,org.apache.camel.component.cxf,org.apache.camel.component.cxf.phase,org.apache.cxf.service,org.apache.cxf.endpoint,org.w3c.dom,org.apache.cxf.service.model,org.apache.cxf.transport,org.apache.cxf.interceptor,org.apache.camel.component.cxf.interceptors,org.apache.cxf.io,org.apache.cxf,org.apache.cxf.helpers"/>
<p n="version" t="version" v="1.3.0.SNAPSHOT"/>
</capability>
<capability name="package">
<p n="package" v="org.apache.camel.component.cxf.phase"/>
<p n="uses:" v="org.apache.cxf.common.util,org.apache.cxf.phase"/>
<p n="version" t="version" v="1.3.0.SNAPSHOT"/>
</capability>
<capability name="package">
<p n="package" v="org.apache.camel.component.cxf"/>
<p n="uses:" v="org.apache.cxf.service.invoker,javax.xml.namespace,org.apache.cxf.frontend,org.apache.cxf.phase,javax.xml.transform,org.apache.cxf.message,javax.wsdl.factory,org.springframework.core.io,org.apache.cxf.binding,org.apache.camel.impl.converter,org.apache.camel.util,org.apache.camel.impl,org.apache.cxf.service,javax.wsdl,javax.wsdl.xml,org.apache.cxf.endpoint,org.apache.camel.component.cxf.util,org.apache.camel.component.cxf.invoker,org.w3c.dom,org.apache.commons.logging,org.springframework.context,org.apache.cxf.service.model,org.apache.cxf.interceptor,org.apache.cxf.transport,org.apache.cxf.common.classloader,org.apache.camel,org.apache.cxf.io,org.apache.cxf,org.apache.camel.spring,org.apache.cxf.configuration.spring,org.apache.camel.component.cxf.spring,org.springframework.util,org.apache.cxf.helpers"/>
<p n="version" t="version" v="1.3.0.SNAPSHOT"/>
</capability>
<capability name="package">
<p n="package" v="org.apache.camel.component.cxf.transport"/>
<p n="uses:" v="org.apache.cxf.common.logging,javax.xml.namespace,org.apache.cxf.service.model,org.apache.cxf.transport,org.apache.cxf.configuration,org.apache.cxf.message,javax.annotation,org.apache.camel,org.apache.cxf.io,org.apache.cxf,org.apache.camel.component.cxf,org.apache.cxf.ws.addressing,org.apache.camel.impl,org.apache.cxf.wsdl"/>
<p n="version" t="version" v="1.3.0.SNAPSHOT"/>
</capability>
<capability name="package">
<p n="package" v="org.apache.camel.component.cxf.spring"/>
<p n="uses:" v="javax.xml.namespace,org.apache.cxf.frontend,org.w3c.dom,org.apache.cxf.service.factory,org.springframework.beans.factory.support,org.springframework.beans.factory.config,org.springframework.beans.factory.xml,org.apache.cxf.common.util,org.apache.cxf.configuration.spring,org.springframework.beans.factory,com.sun.xml.bind.v2.schemagen.xmlschema"/>
<p n="version" t="version" v="1.3.0.SNAPSHOT"/>
</capability>
<require extend="false" filter="(&amp;(package=com.sun.xml.bind.v2.schemagen.xmlschema)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package com.sun.xml.bind.v2.schemagen.xmlschema</require>
<require extend="false" filter="(&amp;(package=javax.annotation)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package javax.annotation</require>
<require extend="false" filter="(&amp;(package=javax.jws)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package javax.jws</require>
<require extend="false" filter="(&amp;(package=javax.wsdl)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package javax.wsdl</require>
<require extend="false" filter="(&amp;(package=javax.wsdl.factory)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package javax.wsdl.factory</require>
<require extend="false" filter="(&amp;(package=javax.wsdl.xml)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package javax.wsdl.xml</require>
<require extend="false" filter="(&amp;(package=javax.xml.namespace)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package javax.xml.namespace</require>
<require extend="false" filter="(&amp;(package=javax.xml.stream)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package javax.xml.stream</require>
<require extend="false" filter="(&amp;(package=javax.xml.transform)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package javax.xml.transform</require>
<require extend="false" filter="(&amp;(package=javax.xml.transform.dom)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package javax.xml.transform.dom</require>
<require extend="false" filter="(&amp;(package=org.apache.camel)(version&gt;=1.3.0.SNAPSHOT))" multiple="false" name="package" optional="false">Import package org.apache.camel ;version=1.3.0.SNAPSHOT</require>
<require extend="false" filter="(&amp;(package=org.apache.camel.component.cxf)(version&gt;=1.3.0.SNAPSHOT))" multiple="false" name="package" optional="false">Import package org.apache.camel.component.cxf ;version=1.3.0.SNAPSHOT</require>
<require extend="false" filter="(&amp;(package=org.apache.camel.component.cxf.interceptors)(version&gt;=1.3.0.SNAPSHOT))" multiple="false" name="package" optional="false">Import package org.apache.camel.component.cxf.interceptors ;version=1.3.0.SNAPSHOT</require>
<require extend="false" filter="(&amp;(package=org.apache.camel.component.cxf.invoker)(version&gt;=1.3.0.SNAPSHOT))" multiple="false" name="package" optional="false">Import package org.apache.camel.component.cxf.invoker ;version=1.3.0.SNAPSHOT</require>
<require extend="false" filter="(&amp;(package=org.apache.camel.component.cxf.phase)(version&gt;=1.3.0.SNAPSHOT))" multiple="false" name="package" optional="false">Import package org.apache.camel.component.cxf.phase ;version=1.3.0.SNAPSHOT</require>
<require extend="false" filter="(&amp;(package=org.apache.camel.component.cxf.spring)(version&gt;=1.3.0.SNAPSHOT))" multiple="false" name="package" optional="false">Import package org.apache.camel.component.cxf.spring ;version=1.3.0.SNAPSHOT</require>
<require extend="false" filter="(&amp;(package=org.apache.camel.component.cxf.transport)(version&gt;=1.3.0.SNAPSHOT))" multiple="false" name="package" optional="false">Import package org.apache.camel.component.cxf.transport ;version=1.3.0.SNAPSHOT</require>
<require extend="false" filter="(&amp;(package=org.apache.camel.component.cxf.util)(version&gt;=1.3.0.SNAPSHOT))" multiple="false" name="package" optional="false">Import package org.apache.camel.component.cxf.util ;version=1.3.0.SNAPSHOT</require>
<require extend="false" filter="(&amp;(package=org.apache.camel.impl)(version&gt;=1.3.0.SNAPSHOT))" multiple="false" name="package" optional="false">Import package org.apache.camel.impl ;version=1.3.0.SNAPSHOT</require>
<require extend="false" filter="(&amp;(package=org.apache.camel.impl.converter)(version&gt;=1.3.0.SNAPSHOT))" multiple="false" name="package" optional="false">Import package org.apache.camel.impl.converter ;version=1.3.0.SNAPSHOT</require>
<require extend="false" filter="(&amp;(package=org.apache.camel.spring)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package org.apache.camel.spring</require>
<require extend="false" filter="(&amp;(package=org.apache.camel.util)(version&gt;=1.3.0.SNAPSHOT))" multiple="false" name="package" optional="false">Import package org.apache.camel.util ;version=1.3.0.SNAPSHOT</require>
<require extend="false" filter="(&amp;(package=org.apache.commons.io)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package org.apache.commons.io</require>
<require extend="false" filter="(&amp;(package=org.apache.commons.logging)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package org.apache.commons.logging</require>
<require extend="false" filter="(&amp;(package=org.apache.cxf)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package org.apache.cxf</require>
<require extend="false" filter="(&amp;(package=org.apache.cxf.binding)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package org.apache.cxf.binding</require>
<require extend="false" filter="(&amp;(package=org.apache.cxf.binding.soap)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package org.apache.cxf.binding.soap</require>
<require extend="false" filter="(&amp;(package=org.apache.cxf.binding.soap.interceptor)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package org.apache.cxf.binding.soap.interceptor</require>
<require extend="false" filter="(&amp;(package=org.apache.cxf.binding.soap.model)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package org.apache.cxf.binding.soap.model</require>
<require extend="false" filter="(&amp;(package=org.apache.cxf.binding.xml)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package org.apache.cxf.binding.xml</require>
<require extend="false" filter="(&amp;(package=org.apache.cxf.bindings.xformat)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package org.apache.cxf.bindings.xformat</require>
<require extend="false" filter="(&amp;(package=org.apache.cxf.common.classloader)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package org.apache.cxf.common.classloader</require>
<require extend="false" filter="(&amp;(package=org.apache.cxf.common.i18n)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package org.apache.cxf.common.i18n</require>
<require extend="false" filter="(&amp;(package=org.apache.cxf.common.logging)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package org.apache.cxf.common.logging</require>
<require extend="false" filter="(&amp;(package=org.apache.cxf.common.util)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package org.apache.cxf.common.util</require>
<require extend="false" filter="(&amp;(package=org.apache.cxf.configuration)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package org.apache.cxf.configuration</require>
<require extend="false" filter="(&amp;(package=org.apache.cxf.configuration.spring)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package org.apache.cxf.configuration.spring</require>
<require extend="false" filter="(&amp;(package=org.apache.cxf.endpoint)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package org.apache.cxf.endpoint</require>
<require extend="false" filter="(&amp;(package=org.apache.cxf.frontend)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package org.apache.cxf.frontend</require>
<require extend="false" filter="(&amp;(package=org.apache.cxf.helpers)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package org.apache.cxf.helpers</require>
<require extend="false" filter="(&amp;(package=org.apache.cxf.interceptor)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package org.apache.cxf.interceptor</require>
<require extend="false" filter="(&amp;(package=org.apache.cxf.io)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package org.apache.cxf.io</require>
<require extend="false" filter="(&amp;(package=org.apache.cxf.jaxws)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package org.apache.cxf.jaxws</require>
<require extend="false" filter="(&amp;(package=org.apache.cxf.jaxws.binding.soap)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package org.apache.cxf.jaxws.binding.soap</require>
<require extend="false" filter="(&amp;(package=org.apache.cxf.jaxws.support)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package org.apache.cxf.jaxws.support</require>
<require extend="false" filter="(&amp;(package=org.apache.cxf.message)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package org.apache.cxf.message</require>
<require extend="false" filter="(&amp;(package=org.apache.cxf.phase)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package org.apache.cxf.phase</require>
<require extend="false" filter="(&amp;(package=org.apache.cxf.service)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package org.apache.cxf.service</require>
<require extend="false" filter="(&amp;(package=org.apache.cxf.service.factory)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package org.apache.cxf.service.factory</require>
<require extend="false" filter="(&amp;(package=org.apache.cxf.service.invoker)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package org.apache.cxf.service.invoker</require>
<require extend="false" filter="(&amp;(package=org.apache.cxf.service.model)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package org.apache.cxf.service.model</require>
<require extend="false" filter="(&amp;(package=org.apache.cxf.staxutils)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package org.apache.cxf.staxutils</require>
<require extend="false" filter="(&amp;(package=org.apache.cxf.transport)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package org.apache.cxf.transport</require>
<require extend="false" filter="(&amp;(package=org.apache.cxf.ws.addressing)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package org.apache.cxf.ws.addressing</require>
<require extend="false" filter="(&amp;(package=org.apache.cxf.wsdl)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package org.apache.cxf.wsdl</require>
<require extend="false" filter="(&amp;(package=org.apache.cxf.wsdl11)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package org.apache.cxf.wsdl11</require>
<require extend="false" filter="(&amp;(package=org.springframework.beans.factory)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package org.springframework.beans.factory</require>
<require extend="false" filter="(&amp;(package=org.springframework.beans.factory.config)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package org.springframework.beans.factory.config</require>
<require extend="false" filter="(&amp;(package=org.springframework.beans.factory.support)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package org.springframework.beans.factory.support</require>
<require extend="false" filter="(&amp;(package=org.springframework.beans.factory.xml)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package org.springframework.beans.factory.xml</require>
<require extend="false" filter="(&amp;(package=org.springframework.context)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package org.springframework.context</require>
<require extend="false" filter="(&amp;(package=org.springframework.core.io)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package org.springframework.core.io</require>
<require extend="false" filter="(&amp;(package=org.springframework.util)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package org.springframework.util</require>
<require extend="false" filter="(&amp;(package=org.w3c.dom)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package org.w3c.dom</require>
</resource>
<resource id="66" presentationname="camel-amqp" symbolicname="org.apache.camel.camel-amqp" uri="http://people.apache.org/repo/m2-snapshot-repository/org/apache/camel/camel-amqp/1.3-SNAPSHOT/camel-amqp-1.3-SNAPSHOT.jar" version="1.3.0.SNAPSHOT">
<description>Camel AMQP support</description>
<size>5838</size>
<documentation>http://www.apache.org/</documentation>
<source>http://svn.apache.org/viewvc/activemq/camel/trunk/camel-amqp</source>
<license>http://www.apache.org/licenses/LICENSE-2.0.txt</license>
<category id="org.apache.camel"/>
<capability name="bundle">
<p n="manifestversion" v="2"/>
<p n="presentationname" v="camel-amqp"/>
<p n="symbolicname" v="org.apache.camel.camel-amqp"/>
<p n="version" t="version" v="1.3.0.SNAPSHOT"/>
</capability>
<capability name="package">
<p n="package" v="org.apache.camel.component.amqp"/>
<p n="uses:" v="org.apache.qpid.url,org.apache.camel,org.apache.qpid.client,org.apache.camel.component.jms,javax.jms"/>
<p n="version" t="version" v="1.3.0.SNAPSHOT"/>
</capability>
<require extend="false" filter="(&amp;(package=javax.jms)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package javax.jms</require>
<require extend="false" filter="(&amp;(package=org.apache.camel)(version&gt;=1.3.0.SNAPSHOT))" multiple="false" name="package" optional="false">Import package org.apache.camel ;version=1.3.0.SNAPSHOT</require>
<require extend="false" filter="(&amp;(package=org.apache.camel.component.amqp)(version&gt;=1.3.0.SNAPSHOT))" multiple="false" name="package" optional="false">Import package org.apache.camel.component.amqp ;version=1.3.0.SNAPSHOT</require>
<require extend="false" filter="(&amp;(package=org.apache.camel.component.jms)(version&gt;=1.3.0.SNAPSHOT))" multiple="false" name="package" optional="false">Import package org.apache.camel.component.jms ;version=1.3.0.SNAPSHOT</require>
<require extend="false" filter="(&amp;(package=org.apache.qpid.client)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package org.apache.qpid.client</require>
<require extend="false" filter="(&amp;(package=org.apache.qpid.url)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package org.apache.qpid.url</require>
</resource>
<resource id="67" presentationname="camel-csv" symbolicname="org.apache.camel.camel-csv" uri="http://people.apache.org/repo/m2-snapshot-repository/org/apache/camel/camel-csv/1.3-SNAPSHOT/camel-csv-1.3-SNAPSHOT.jar" version="1.3.0.SNAPSHOT">
<description>Camel CSV support</description>
<size>5595</size>
<documentation>http://www.apache.org/</documentation>
<source>http://svn.apache.org/viewvc/activemq/camel/trunk/camel-csv</source>
<license>http://www.apache.org/licenses/LICENSE-2.0.txt</license>
<category id="org.apache.camel"/>
<capability name="bundle">
<p n="manifestversion" v="2"/>
<p n="presentationname" v="camel-csv"/>
<p n="symbolicname" v="org.apache.camel.camel-csv"/>
<p n="version" t="version" v="1.3.0.SNAPSHOT"/>
</capability>
<capability name="package">
<p n="package" v="org.apache.camel.dataformat.csv"/>
<p n="uses:" v="org.apache.commons.csv.writer,org.apache.camel.spi,org.apache.camel,org.apache.camel.util,org.apache.commons.csv"/>
<p n="version" t="version" v="1.3.0.SNAPSHOT"/>
</capability>
<require extend="false" filter="(&amp;(package=org.apache.camel)(version&gt;=1.3.0.SNAPSHOT))" multiple="false" name="package" optional="false">Import package org.apache.camel ;version=1.3.0.SNAPSHOT</require>
<require extend="false" filter="(&amp;(package=org.apache.camel.dataformat.csv)(version&gt;=1.3.0.SNAPSHOT))" multiple="false" name="package" optional="false">Import package org.apache.camel.dataformat.csv ;version=1.3.0.SNAPSHOT</require>
<require extend="false" filter="(&amp;(package=org.apache.camel.spi)(version&gt;=1.3.0.SNAPSHOT))" multiple="false" name="package" optional="false">Import package org.apache.camel.spi ;version=1.3.0.SNAPSHOT</require>
<require extend="false" filter="(&amp;(package=org.apache.camel.util)(version&gt;=1.3.0.SNAPSHOT))" multiple="false" name="package" optional="false">Import package org.apache.camel.util ;version=1.3.0.SNAPSHOT</require>
<require extend="false" filter="(&amp;(package=org.apache.commons.csv)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package org.apache.commons.csv</require>
<require extend="false" filter="(&amp;(package=org.apache.commons.csv.writer)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package org.apache.commons.csv.writer</require>
</resource>
<resource id="68" presentationname="camel-groovy" symbolicname="org.apache.camel.camel-groovy" uri="http://people.apache.org/repo/m2-snapshot-repository/org/apache/camel/camel-groovy/1.3-SNAPSHOT/camel-groovy-1.3-SNAPSHOT.jar" version="1.3.0.SNAPSHOT">
<description>Camel Groovy support</description>
<size>11818</size>
<documentation>http://www.apache.org/</documentation>
<source>http://svn.apache.org/viewvc/activemq/camel/trunk/camel-groovy</source>
<license>http://www.apache.org/licenses/LICENSE-2.0.txt</license>
<category id="org.apache.camel"/>
<capability name="bundle">
<p n="manifestversion" v="2"/>
<p n="presentationname" v="camel-groovy"/>
<p n="symbolicname" v="org.apache.camel.camel-groovy"/>
<p n="version" t="version" v="1.3.0.SNAPSHOT"/>
</capability>
<capability name="package">
<p n="package" v="org.apache.camel.language.groovy"/>
<p n="uses:" v="org.apache.camel.model,org.apache.camel.builder,org.apache.camel.spi,org.apache.camel,org.apache.camel.util,groovy.lang,org.apache.camel.impl"/>
<p n="version" t="version" v="1.3.0.SNAPSHOT"/>
</capability>
<require extend="false" filter="(&amp;(package=groovy.lang)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package groovy.lang</require>
<require extend="false" filter="(&amp;(package=org.apache.camel)(version&gt;=1.3.0.SNAPSHOT))" multiple="false" name="package" optional="false">Import package org.apache.camel ;version=1.3.0.SNAPSHOT</require>
<require extend="false" filter="(&amp;(package=org.apache.camel.builder)(version&gt;=1.3.0.SNAPSHOT))" multiple="false" name="package" optional="false">Import package org.apache.camel.builder ;version=1.3.0.SNAPSHOT</require>
<require extend="false" filter="(&amp;(package=org.apache.camel.impl)(version&gt;=1.3.0.SNAPSHOT))" multiple="false" name="package" optional="false">Import package org.apache.camel.impl ;version=1.3.0.SNAPSHOT</require>
<require extend="false" filter="(&amp;(package=org.apache.camel.language.groovy)(version&gt;=1.3.0.SNAPSHOT))" multiple="false" name="package" optional="false">Import package org.apache.camel.language.groovy ;version=1.3.0.SNAPSHOT</require>
<require extend="false" filter="(&amp;(package=org.apache.camel.model)(version&gt;=1.3.0.SNAPSHOT))" multiple="false" name="package" optional="false">Import package org.apache.camel.model ;version=1.3.0.SNAPSHOT</require>
<require extend="false" filter="(&amp;(package=org.apache.camel.spi)(version&gt;=1.3.0.SNAPSHOT))" multiple="false" name="package" optional="false">Import package org.apache.camel.spi ;version=1.3.0.SNAPSHOT</require>
<require extend="false" filter="(&amp;(package=org.apache.camel.util)(version&gt;=1.3.0.SNAPSHOT))" multiple="false" name="package" optional="false">Import package org.apache.camel.util ;version=1.3.0.SNAPSHOT</require>
</resource>
<resource id="69" presentationname="camel-jhc" symbolicname="org.apache.camel.camel-jhc" uri="http://people.apache.org/repo/m2-snapshot-repository/org/apache/camel/camel-jhc/1.3-SNAPSHOT/camel-jhc-1.3-SNAPSHOT.jar" version="1.3.0.SNAPSHOT">
<description>Camel Jakarta Http Components support</description>
<size>46701</size>
<documentation>http://www.apache.org/</documentation>
<source>http://svn.apache.org/viewvc/activemq/camel/trunk/camel-jhc</source>
<license>http://www.apache.org/licenses/LICENSE-2.0.txt</license>
<category id="org.apache.camel"/>
<capability name="bundle">
<p n="manifestversion" v="2"/>
<p n="presentationname" v="camel-jhc"/>
<p n="symbolicname" v="org.apache.camel.camel-jhc"/>
<p n="version" t="version" v="1.3.0.SNAPSHOT"/>
</capability>
<capability name="package">
<p n="package" v="org.apache.camel.component.jhc"/>
<p n="uses:" v="org.apache.http.nio.reactor,org.apache.http.util.concurrent,org.apache.http.nio.entity,org.apache.http.impl.nio,org.apache.http.impl.nio.reactor,org.apache.camel.util,org.apache.http.nio,org.apache.camel.impl,org.apache.http.nio.util,org.apache.http.protocol,org.apache.http.message,org.apache.http.entity,org.apache.http.impl,org.apache.commons.logging,org.apache.http.params,org.apache.http,org.apache.camel,org.apache.http.util,javax.net.ssl,org.apache.http.nio.protocol"/>
<p n="version" t="version" v="1.3.0.SNAPSHOT"/>
</capability>
<require extend="false" filter="(&amp;(package=javax.net.ssl)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package javax.net.ssl</require>
<require extend="false" filter="(&amp;(package=org.apache.camel)(version&gt;=1.3.0.SNAPSHOT))" multiple="false" name="package" optional="false">Import package org.apache.camel ;version=1.3.0.SNAPSHOT</require>
<require extend="false" filter="(&amp;(package=org.apache.camel.component.jhc)(version&gt;=1.3.0.SNAPSHOT))" multiple="false" name="package" optional="false">Import package org.apache.camel.component.jhc ;version=1.3.0.SNAPSHOT</require>
<require extend="false" filter="(&amp;(package=org.apache.camel.impl)(version&gt;=1.3.0.SNAPSHOT))" multiple="false" name="package" optional="false">Import package org.apache.camel.impl ;version=1.3.0.SNAPSHOT</require>
<require extend="false" filter="(&amp;(package=org.apache.camel.util)(version&gt;=1.3.0.SNAPSHOT))" multiple="false" name="package" optional="false">Import package org.apache.camel.util ;version=1.3.0.SNAPSHOT</require>
<require extend="false" filter="(&amp;(package=org.apache.commons.logging)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package org.apache.commons.logging</require>
<require extend="false" filter="(&amp;(package=org.apache.http)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package org.apache.http</require>
<require extend="false" filter="(&amp;(package=org.apache.http.entity)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package org.apache.http.entity</require>
<require extend="false" filter="(&amp;(package=org.apache.http.impl)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package org.apache.http.impl</require>
<require extend="false" filter="(&amp;(package=org.apache.http.impl.nio)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package org.apache.http.impl.nio</require>
<require extend="false" filter="(&amp;(package=org.apache.http.impl.nio.reactor)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package org.apache.http.impl.nio.reactor</require>
<require extend="false" filter="(&amp;(package=org.apache.http.message)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package org.apache.http.message</require>
<require extend="false" filter="(&amp;(package=org.apache.http.nio)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package org.apache.http.nio</require>
<require extend="false" filter="(&amp;(package=org.apache.http.nio.entity)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package org.apache.http.nio.entity</require>
<require extend="false" filter="(&amp;(package=org.apache.http.nio.protocol)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package org.apache.http.nio.protocol</require>
<require extend="false" filter="(&amp;(package=org.apache.http.nio.reactor)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package org.apache.http.nio.reactor</require>
<require extend="false" filter="(&amp;(package=org.apache.http.nio.util)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package org.apache.http.nio.util</require>
<require extend="false" filter="(&amp;(package=org.apache.http.params)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package org.apache.http.params</require>
<require extend="false" filter="(&amp;(package=org.apache.http.protocol)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package org.apache.http.protocol</require>
<require extend="false" filter="(&amp;(package=org.apache.http.util)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package org.apache.http.util</require>
<require extend="false" filter="(&amp;(package=org.apache.http.util.concurrent)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package org.apache.http.util.concurrent</require>
</resource>
<resource id="70" presentationname="camel-jcr" symbolicname="org.apache.camel.camel-jcr" uri="http://people.apache.org/repo/m2-snapshot-repository/org/apache/camel/camel-jcr/1.3-SNAPSHOT/camel-jcr-1.3-SNAPSHOT.jar" version="1.3.0.SNAPSHOT">
<description>Camel JCR support</description>
<size>10442</size>
<documentation>http://www.apache.org/</documentation>
<source>http://svn.apache.org/viewvc/activemq/camel/trunk/camel-jcr</source>
<license>http://www.apache.org/licenses/LICENSE-2.0.txt</license>
<category id="org.apache.camel"/>
<capability name="bundle">
<p n="manifestversion" v="2"/>
<p n="presentationname" v="camel-jcr"/>
<p n="symbolicname" v="org.apache.camel.camel-jcr"/>
<p n="version" t="version" v="1.3.0.SNAPSHOT"/>
</capability>
<capability name="package">
<p n="package" v="org.apache.camel.component.jcr"/>
<p n="uses:" v="org.apache.jackrabbit.value,org.apache.camel.spi,org.apache.camel,org.apache.camel.impl,javax.jcr"/>
<p n="version" t="version" v="1.3.0.SNAPSHOT"/>
</capability>
<require extend="false" filter="(&amp;(package=javax.jcr)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package javax.jcr</require>
<require extend="false" filter="(&amp;(package=org.apache.camel)(version&gt;=1.3.0.SNAPSHOT))" multiple="false" name="package" optional="false">Import package org.apache.camel ;version=1.3.0.SNAPSHOT</require>
<require extend="false" filter="(&amp;(package=org.apache.camel.component.jcr)(version&gt;=1.3.0.SNAPSHOT))" multiple="false" name="package" optional="false">Import package org.apache.camel.component.jcr ;version=1.3.0.SNAPSHOT</require>
<require extend="false" filter="(&amp;(package=org.apache.camel.impl)(version&gt;=1.3.0.SNAPSHOT))" multiple="false" name="package" optional="false">Import package org.apache.camel.impl ;version=1.3.0.SNAPSHOT</require>
<require extend="false" filter="(&amp;(package=org.apache.camel.spi)(version&gt;=1.3.0.SNAPSHOT))" multiple="false" name="package" optional="false">Import package org.apache.camel.spi ;version=1.3.0.SNAPSHOT</require>
<require extend="false" filter="(&amp;(package=org.apache.jackrabbit.value)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package org.apache.jackrabbit.value</require>
</resource>
<resource id="71" presentationname="camel-osgi" symbolicname="org.apache.camel.camel-osgi" uri="http://people.apache.org/repo/m2-snapshot-repository/org/apache/camel/camel-osgi/1.3-SNAPSHOT/camel-osgi-1.3-SNAPSHOT.jar" version="1.3.0.SNAPSHOT">
<description>Camel OSGi support</description>
<size>14320</size>
<documentation>http://www.apache.org/</documentation>
<source>http://svn.apache.org/viewvc/activemq/camel/trunk/camel-osgi</source>
<license>http://www.apache.org/licenses/LICENSE-2.0.txt</license>
<category id="org.apache.camel"/>
<capability name="bundle">
<p n="manifestversion" v="2"/>
<p n="presentationname" v="camel-osgi"/>
<p n="symbolicname" v="org.apache.camel.camel-osgi"/>
<p n="version" t="version" v="1.3.0.SNAPSHOT"/>
</capability>
<capability name="package">
<p n="package" v="org.apache.camel.osgi"/>
<p n="uses:" v="org.apache.camel.spring.handler,org.springframework.osgi.internal.context.support,org.osgi.framework,org.apache.commons.logging,javax.xml.bind.annotation,org.springframework.osgi.context,org.springframework.beans.factory.xml,org.apache.camel,org.apache.camel.spi,org.apache.camel.spring,javax.xml.bind"/>
<p n="version" t="version" v="1.3.0.SNAPSHOT"/>
</capability>
<require extend="false" filter="(&amp;(package=javax.xml.bind)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package javax.xml.bind</require>
<require extend="false" filter="(&amp;(package=javax.xml.bind.annotation)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package javax.xml.bind.annotation</require>
<require extend="false" filter="(&amp;(package=org.apache.camel)(version&gt;=1.3.0.SNAPSHOT))" multiple="false" name="package" optional="false">Import package org.apache.camel ;version=1.3.0.SNAPSHOT</require>
<require extend="false" filter="(&amp;(package=org.apache.camel.osgi)(version&gt;=1.3.0.SNAPSHOT))" multiple="false" name="package" optional="false">Import package org.apache.camel.osgi ;version=1.3.0.SNAPSHOT</require>
<require extend="false" filter="(&amp;(package=org.apache.camel.spi)(version&gt;=1.3.0.SNAPSHOT))" multiple="false" name="package" optional="false">Import package org.apache.camel.spi ;version=1.3.0.SNAPSHOT</require>
<require extend="false" filter="(&amp;(package=org.apache.camel.spring)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package org.apache.camel.spring</require>
<require extend="false" filter="(&amp;(package=org.apache.camel.spring.handler)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package org.apache.camel.spring.handler</require>
<require extend="false" filter="(&amp;(package=org.apache.commons.logging)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package org.apache.commons.logging</require>
<require extend="false" filter="(&amp;(package=org.osgi.framework)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package org.osgi.framework</require>
<require extend="false" filter="(&amp;(package=org.springframework.beans.factory.xml)(version&gt;=2.1.0.m4))" multiple="false" name="package" optional="false">Import package org.springframework.beans.factory.xml ;version=2.1.0.m4</require>
<require extend="false" filter="(&amp;(package=org.springframework.osgi.context)(version&gt;=1.0.0.m3))" multiple="false" name="package" optional="false">Import package org.springframework.osgi.context ;version=1.0.0.m3</require>
<require extend="false" filter="(&amp;(package=org.springframework.osgi.internal.context.support)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package org.springframework.osgi.internal.context.support</require>
</resource>
<resource id="72" presentationname="camel-example-spring" symbolicname="org.apache.camel.camel-example-spring" uri="http://people.apache.org/repo/m2-snapshot-repository/org/apache/camel/camel-example-spring/1.3-SNAPSHOT/camel-example-spring-1.3-SNAPSHOT.jar" version="1.3.0.SNAPSHOT">
<description>An example showing how to work with Camel and Spring</description>
<size>11809</size>
<documentation>http://www.apache.org/</documentation>
<source>http://svn.apache.org/viewvc/activemq/camel/trunk/examples/camel-example-spring</source>
<license>http://www.apache.org/licenses/LICENSE-2.0.txt</license>
<category id="org.apache.camel"/>
<capability name="bundle">
<p n="manifestversion" v="2"/>
<p n="presentationname" v="camel-example-spring"/>
<p n="symbolicname" v="org.apache.camel.camel-example-spring"/>
<p n="version" t="version" v="1.3.0.SNAPSHOT"/>
</capability>
<capability name="package">
<p n="package" v="org.apache.camel.example.spring"/>
<p n="uses:" v="org.apache.camel.model,org.apache.camel.builder,org.apache.camel.spring"/>
<p n="version" t="version" v="1.3.0.SNAPSHOT"/>
</capability>
<require extend="false" filter="(&amp;(package=org.apache.camel.builder)(version&gt;=1.3.0.SNAPSHOT))" multiple="false" name="package" optional="false">Import package org.apache.camel.builder ;version=1.3.0.SNAPSHOT</require>
<require extend="false" filter="(&amp;(package=org.apache.camel.example.spring)(version&gt;=1.3.0.SNAPSHOT))" multiple="false" name="package" optional="false">Import package org.apache.camel.example.spring ;version=1.3.0.SNAPSHOT</require>
<require extend="false" filter="(&amp;(package=org.apache.camel.model)(version&gt;=1.3.0.SNAPSHOT))" multiple="false" name="package" optional="false">Import package org.apache.camel.model ;version=1.3.0.SNAPSHOT</require>
<require extend="false" filter="(&amp;(package=org.apache.camel.spring)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package org.apache.camel.spring</require>
</resource>
<resource id="73" presentationname="camel-example-osgi" symbolicname="org.apache.camel.camel-example-osgi" uri="http://people.apache.org/repo/m2-snapshot-repository/org/apache/camel/camel-example-osgi/1.3-SNAPSHOT/camel-example-osgi-1.3-SNAPSHOT.jar" version="1.3.0.SNAPSHOT">
<description>A simple OSGi example which creates a bundle that can be dropped into any OSGi container</description>
<size>10066</size>
<documentation>http://www.apache.org/</documentation>
<source>http://svn.apache.org/viewvc/activemq/camel/trunk/examples/camel-example-osgi</source>
<license>http://www.apache.org/licenses/LICENSE-2.0.txt</license>
<category id="org.apache.camel"/>
<capability name="bundle">
<p n="manifestversion" v="2"/>
<p n="presentationname" v="camel-example-osgi"/>
<p n="symbolicname" v="org.apache.camel.camel-example-osgi"/>
<p n="version" t="version" v="1.3.0.SNAPSHOT"/>
</capability>
<capability name="package">
<p n="package" v="org.apache.camel.example.osgi"/>
<p n="uses:" v="org.apache.commons.logging"/>
<p n="version" t="version" v="1.3.0.SNAPSHOT"/>
</capability>
<require extend="false" filter="(&amp;(package=org.apache.camel.example.osgi)(version&gt;=1.3.0.SNAPSHOT))" multiple="false" name="package" optional="false">Import package org.apache.camel.example.osgi ;version=1.3.0.SNAPSHOT</require>
<require extend="false" filter="(&amp;(package=org.apache.commons.logging)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package org.apache.commons.logging</require>
</resource>
<resource id="74" presentationname="ServiceMix OSGI Common Bundles: acegi" symbolicname="org.apache.servicemix.bundles.acegi" uri="http://people.apache.org/repo/m2-snapshot-repository/org/apache/servicemix/bundles/org.apache.servicemix.bundles.acegi/1.0.0-4.0-SNAPSHOT/org.apache.servicemix.bundles.acegi-1.0.0-4.0-SNAPSHOT.jar" version="1.0.0.SNAPSHOT">
<description>This bundle simply wraps acegi-1.0.0.jar.</description>
<size>455281</size>
<category id="org.apache.servicemix.bundles"/>
<capability name="bundle">
<p n="manifestversion" v="2"/>
<p n="presentationname" v="ServiceMix OSGI Common Bundles: acegi"/>
<p n="symbolicname" v="org.apache.servicemix.bundles.acegi"/>
<p n="version" t="version" v="1.0.0.SNAPSHOT"/>
</capability>
<capability name="package">
<p n="package" v="org.acegisecurity.providers"/>
<p n="uses:" v="org.acegisecurity.providers.cas,org.acegisecurity.event.authentication,org.apache.commons.logging,org.acegisecurity.concurrent,org.springframework.context,org.springframework.context.support,org.acegisecurity.userdetails,org.acegisecurity,org.springframework.util,org.springframework.beans.factory"/>
<p n="version" t="version" v="1.0.0"/>
</capability>
<capability name="package">
<p n="package" v="org.acegisecurity.providers.jaas"/>
<p n="uses:" v="javax.servlet.http,org.acegisecurity.providers,javax.security.auth.login,org.apache.commons.logging,org.acegisecurity.providers.jaas.event,org.springframework.context,javax.security.auth.spi,org.springframework.core.io,org.acegisecurity.context,org.acegisecurity.userdetails,org.acegisecurity.ui.session,org.acegisecurity,org.springframework.beans,org.springframework.util,javax.security.auth,org.springframework.beans.factory,javax.security.auth.callback"/>
<p n="version" t="version" v="1.0.0"/>
</capability>
<capability name="package">
<p n="package" v="org.acegisecurity.afterinvocation"/>
<p n="uses:" v="org.acegisecurity.acl.basic,org.apache.commons.collections.iterators,org.apache.commons.logging,org.springframework.context,org.springframework.context.support,org.acegisecurity.acl,org.acegisecurity,org.springframework.util,org.springframework.beans.factory"/>
<p n="version" t="version" v="1.0.0"/>
</capability>
<capability name="package">
<p n="package" v="org.acegisecurity.providers.anonymous"/>
<p n="uses:" v="javax.servlet.http,org.acegisecurity.providers,org.apache.commons.logging,org.springframework.context,org.springframework.context.support,org.acegisecurity.userdetails.memory,javax.servlet,org.acegisecurity.context,org.acegisecurity,org.acegisecurity.ui,org.springframework.util,org.springframework.beans.factory"/>
<p n="version" t="version" v="1.0.0"/>
</capability>
<capability name="package">
<p n="package" v="org.acegisecurity.acl"/>
<p n="uses:" v="org.acegisecurity,org.apache.commons.logging,org.springframework.util,org.springframework.beans.factory"/>
<p n="version" t="version" v="1.0.0"/>
</capability>
<capability name="package">
<p n="package" v="org.acegisecurity.taglibs.velocity"/>
<p n="uses:" v="org.acegisecurity.taglibs.authz,org.springframework.context,javax.servlet.jsp"/>
<p n="version" t="version" v="1.0.0"/>
</capability>
<capability name="package">
<p n="package" v="org.acegisecurity.providers.cas.populator"/>
<p n="uses:" v="org.acegisecurity.providers.cas,org.acegisecurity.userdetails,org.acegisecurity,org.springframework.util,org.springframework.beans.factory"/>
<p n="version" t="version" v="1.0.0"/>
</capability>
<capability name="package">
<p n="package" v="org.acegisecurity"/>
<p n="uses:" v="org.acegisecurity.providers,org.acegisecurity.providers.rememberme,org.springframework.core,org.acegisecurity.providers.anonymous,org.springframework.context,org.springframework.context.support,org.springframework.util"/>
<p n="version" t="version" v="1.0.0"/>
</capability>
<capability name="package">
<p n="package" v="org.acegisecurity.providers.dao"/>
<p n="uses:" v="org.acegisecurity.providers,org.acegisecurity.providers.encoding,org.acegisecurity.userdetails,org.acegisecurity,org.acegisecurity.providers.dao.cache,org.springframework.dao,org.springframework.util,org.springframework.context,org.springframework.beans.factory,org.springframework.context.support"/>
<p n="version" t="version" v="1.0.0"/>
</capability>
<capability name="package">
<p n="package" v="org.acegisecurity.ldap.search"/>
<p n="uses:" v="javax.naming.directory,org.acegisecurity.userdetails.ldap,org.acegisecurity.ldap,org.acegisecurity.userdetails,org.apache.commons.logging,org.springframework.dao,org.springframework.util"/>
<p n="version" t="version" v="1.0.0"/>
</capability>
<capability name="package">
<p n="package" v="org.acegisecurity.vote"/>
<p n="uses:" v="org.acegisecurity.acl.basic,org.aspectj.lang,org.apache.commons.logging,org.springframework.context,org.springframework.context.support,org.aopalliance.intercept,org.aspectj.lang.reflect,org.acegisecurity.acl,org.acegisecurity,org.springframework.util,org.springframework.beans.factory"/>
<p n="version" t="version" v="1.0.0"/>
</capability>
<capability name="package">
<p n="package" v="org.acegisecurity.acl.basic"/>
<p n="uses:" v="org.apache.commons.logging,org.acegisecurity.acl.basic.cache,org.springframework.dao,org.acegisecurity.acl,org.acegisecurity.userdetails,org.acegisecurity,org.springframework.util,org.springframework.beans.factory"/>
<p n="version" t="version" v="1.0.0"/>
</capability>
<capability name="package">
<p n="package" v="org.acegisecurity.securechannel"/>
<p n="uses:" v="javax.servlet.http,javax.servlet,org.acegisecurity,org.acegisecurity.util,org.apache.commons.logging,org.acegisecurity.intercept.web,org.springframework.util,org.springframework.beans.factory"/>
<p n="version" t="version" v="1.0.0"/>
</capability>
<capability name="package">
<p n="package" v="org.acegisecurity.providers.ldap"/>
<p n="uses:" v="org.acegisecurity.providers,org.acegisecurity.userdetails.ldap,org.acegisecurity.ldap,org.acegisecurity.userdetails,org.acegisecurity,org.apache.commons.logging,org.acegisecurity.providers.dao,org.springframework.util,org.springframework.context.support"/>
<p n="version" t="version" v="1.0.0"/>
</capability>
<capability name="package">
<p n="package" v="org.acegisecurity.ui.switchuser"/>
<p n="uses:" v="javax.servlet.http,org.acegisecurity.providers,org.acegisecurity.event.authentication,org.apache.commons.logging,org.springframework.context,org.springframework.context.support,javax.servlet,org.acegisecurity.context,org.acegisecurity.userdetails,org.acegisecurity,org.springframework.beans,org.acegisecurity.ui,org.springframework.util,org.springframework.beans.factory"/>
<p n="version" t="version" v="1.0.0"/>
</capability>
<capability name="package">
<p n="package" v="org.acegisecurity.providers.encoding"/>
<p n="uses:" v="org.apache.commons.codec.digest,org.springframework.dao,org.apache.commons.codec.binary"/>
<p n="version" t="version" v="1.0.0"/>
</capability>
<capability name="package">
<p n="package" v="org.acegisecurity.util"/>
<p n="uses:" v="javax.servlet.http,org.springframework.web.context,org.apache.commons.logging,org.springframework.context,org.aopalliance.intercept,org.springframework.mock.web,org.acegisecurity.ui.savedrequest,javax.servlet,org.springframework.core.io,org.acegisecurity,org.acegisecurity.intercept.web,org.springframework.beans,org.springframework.util,org.springframework.beans.factory,org.springframework.web.context.support"/>
<p n="version" t="version" v="1.0.0"/>
</capability>
<capability name="package">
<p n="package" v="org.acegisecurity.providers.dao.salt"/>
<p n="uses:" v="org.acegisecurity.userdetails,org.acegisecurity,org.acegisecurity.providers.dao,org.springframework.beans.factory"/>
<p n="version" t="version" v="1.0.0"/>
</capability>
<capability name="package">
<p n="package" v="org.acegisecurity.wrapper"/>
<p n="uses:" v="javax.servlet.http,org.acegisecurity.util,org.apache.commons.logging,org.acegisecurity.ui.savedrequest,javax.servlet,org.acegisecurity.context,org.acegisecurity.userdetails,org.acegisecurity,org.springframework.util"/>
<p n="version" t="version" v="1.0.0"/>
</capability>
<capability name="package">
<p n="package" v="org.acegisecurity.annotation"/>
<p n="uses:" v="org.springframework.metadata,org.acegisecurity"/>
<p n="version" t="version" v="1.0.0"/>
</capability>
<capability name="package">
<p n="package" v="org.acegisecurity.intercept.method.aspectj"/>
<p n="uses:" v="org.acegisecurity.intercept,org.aspectj.lang,org.acegisecurity.intercept.method"/>
<p n="version" t="version" v="1.0.0"/>
</capability>
<capability name="package">
<p n="package" v="org.acegisecurity.providers.ldap.populator"/>
<p n="uses:" v="org.acegisecurity.providers.ldap,javax.naming.directory,org.acegisecurity.userdetails.ldap,org.acegisecurity.ldap,org.acegisecurity,org.apache.commons.logging,org.springframework.util"/>
<p n="version" t="version" v="1.0.0"/>
</capability>
<capability name="package">
<p n="package" v="org.acegisecurity.ui.rememberme"/>
<p n="uses:" v="javax.servlet.http,org.acegisecurity.ui.logout,org.acegisecurity.providers.rememberme,org.springframework.web.bind,org.acegisecurity.event.authentication,org.apache.commons.codec.digest,org.apache.commons.logging,org.springframework.context,javax.servlet,org.acegisecurity.context,org.acegisecurity.userdetails,org.acegisecurity,org.acegisecurity.ui,org.apache.commons.codec.binary,org.springframework.util,org.springframework.beans.factory"/>
<p n="version" t="version" v="1.0.0"/>
</capability>
<capability name="package">
<p n="package" v="org.acegisecurity.ui.digestauth"/>
<p n="uses:" v="javax.servlet.http,org.acegisecurity.providers,org.acegisecurity.util,org.apache.commons.logging,org.apache.commons.codec.digest,org.springframework.context,org.springframework.context.support,javax.servlet,org.acegisecurity.context,org.acegisecurity.userdetails,org.acegisecurity,org.acegisecurity.providers.dao.cache,org.apache.commons.codec.binary,org.acegisecurity.ui,org.acegisecurity.providers.dao,org.springframework.util,org.springframework.beans.factory"/>
<p n="version" t="version" v="1.0.0"/>
</capability>
<capability name="package">
<p n="package" v="org.acegisecurity.providers.ldap.authenticator"/>
<p n="uses:" v="org.acegisecurity.providers.ldap,org.acegisecurity.providers.encoding,org.apache.commons.logging,org.springframework.context,org.springframework.context.support,org.acegisecurity.userdetails.ldap,org.acegisecurity.ldap,org.acegisecurity.userdetails,org.acegisecurity,org.apache.commons.codec.binary,org.springframework.util,org.springframework.beans.factory"/>
<p n="version" t="version" v="1.0.0"/>
</capability>
<capability name="package">
<p n="package" v="org.acegisecurity.userdetails.ldap"/>
<p n="uses:" v="javax.naming.ldap,javax.naming,javax.naming.directory,org.acegisecurity.ldap,org.acegisecurity.userdetails,org.acegisecurity,org.apache.commons.logging,org.springframework.util"/>
<p n="version" t="version" v="1.0.0"/>
</capability>
<capability name="package">
<p n="package" v="org.acegisecurity.providers.cas.proxy"/>
<p n="uses:" v="org.acegisecurity.providers.cas,org.acegisecurity,org.apache.commons.logging,org.springframework.context,org.springframework.util,org.springframework.beans.factory,org.springframework.context.support"/>
<p n="version" t="version" v="1.0.0"/>
</capability>
<capability name="package">
<p n="package" v="org.acegisecurity.ui.session"/>
<p n="uses:" v="javax.servlet.http,javax.servlet,org.springframework.web.context,org.apache.commons.logging,org.springframework.context,org.springframework.web.context.support"/>
<p n="version" t="version" v="1.0.0"/>
</capability>
<capability name="package">
<p n="package" v="org.acegisecurity.ui"/>
<p n="uses:" v="javax.servlet.http,org.acegisecurity.event.authentication,org.acegisecurity.util,org.apache.commons.logging,org.acegisecurity.concurrent,org.springframework.context,org.springframework.context.support,org.acegisecurity.ui.rememberme,org.acegisecurity.ui.savedrequest,javax.servlet,org.acegisecurity.context,org.acegisecurity,org.springframework.util,org.springframework.beans.factory"/>
<p n="version" t="version" v="1.0.0"/>
</capability>
<capability name="package">
<p n="package" v="org.acegisecurity.intercept.method"/>
<p n="uses:" v="org.acegisecurity.intercept,org.springframework.metadata,org.aspectj.lang,org.apache.commons.logging,org.aopalliance.intercept,org.aspectj.lang.reflect,org.springframework.beans.propertyeditors,org.acegisecurity,org.springframework.util,org.springframework.beans.factory"/>
<p n="version" t="version" v="1.0.0"/>
</capability>
<capability name="package">
<p n="package" v="org.acegisecurity.adapters"/>
<p n="uses:" v="javax.servlet.http,org.acegisecurity.providers,org.apache.commons.logging,org.springframework.context,org.springframework.context.support,javax.servlet,org.acegisecurity.context,org.acegisecurity,org.springframework.util,org.springframework.beans.factory"/>
<p n="version" t="version" v="1.0.0"/>
</capability>
<capability name="package">
<p n="package" v="org.acegisecurity.intercept"/>
<p n="uses:" v="org.acegisecurity.runas,org.acegisecurity.context,org.acegisecurity,org.apache.commons.logging,org.springframework.context,org.springframework.util,org.acegisecurity.event.authorization,org.springframework.beans.factory,org.springframework.context.support"/>
<p n="version" t="version" v="1.0.0"/>
</capability>
<capability name="package">
<p n="package" v="org.acegisecurity.ui.basicauth"/>
<p n="uses:" v="javax.servlet.http,org.acegisecurity.providers,org.apache.commons.logging,org.acegisecurity.ui.rememberme,javax.servlet,org.acegisecurity.context,org.acegisecurity,org.acegisecurity.ui,org.apache.commons.codec.binary,org.springframework.util,org.springframework.beans.factory"/>
<p n="version" t="version" v="1.0.0"/>
</capability>
<capability name="package">
<p n="package" v="org.acegisecurity.providers.x509.cache"/>
<p n="uses:" v="net.sf.ehcache,org.acegisecurity.userdetails,org.apache.commons.logging,org.springframework.dao,org.acegisecurity.providers.x509,org.springframework.util,org.springframework.beans.factory"/>
<p n="version" t="version" v="1.0.0"/>
</capability>
<capability name="package">
<p n="package" v="org.acegisecurity.providers.cas"/>
<p n="uses:" v="org.acegisecurity.providers,org.acegisecurity.userdetails,org.acegisecurity,org.apache.commons.logging,org.springframework.context,org.springframework.util,org.springframework.context.support,org.springframework.beans.factory"/>
<p n="version" t="version" v="1.0.0"/>
</capability>
<capability name="package">
<p n="package" v="org.acegisecurity.ui.logout"/>
<p n="uses:" v="javax.servlet.http,javax.servlet,org.acegisecurity.context,org.acegisecurity,org.apache.commons.logging,org.springframework.util"/>
<p n="version" t="version" v="1.0.0"/>
</capability>
<capability name="package">
<p n="package" v="org.acegisecurity.context.httpinvoker"/>
<p n="uses:" v="org.acegisecurity.context,org.springframework.remoting.httpinvoker,org.acegisecurity,org.apache.commons.logging,org.apache.commons.codec.binary"/>
<p n="version" t="version" v="1.0.0"/>
</capability>
<capability name="package">
<p n="package" v="org.acegisecurity.userdetails.jdbc"/>
<p n="uses:" v="org.acegisecurity.userdetails,org.acegisecurity,org.springframework.jdbc.core,org.springframework.dao,org.springframework.context,org.springframework.jdbc.core.support,org.springframework.jdbc.object,javax.sql"/>
<p n="version" t="version" v="1.0.0"/>
</capability>
<capability name="package">
<p n="package" v="org.acegisecurity.event.authentication"/>
<p n="uses:" v="org.acegisecurity.userdetails,org.acegisecurity,org.apache.commons.logging,org.springframework.util,org.springframework.context"/>
<p n="version" t="version" v="1.0.0"/>
</capability>
<capability name="package">
<p n="package" v="org.acegisecurity.providers.jaas.event"/>
<p n="uses:" v="org.acegisecurity,org.springframework.context"/>
<p n="version" t="version" v="1.0.0"/>
</capability>
<capability name="package">
<p n="package" v="org.acegisecurity.ui.savedrequest"/>
<p n="uses:" v="javax.servlet.http,javax.servlet,org.acegisecurity.util,org.apache.commons.logging,org.springframework.util"/>
<p n="version" t="version" v="1.0.0"/>
</capability>
<capability name="package">
<p n="package" v="org.acegisecurity.providers.dao.cache"/>
<p n="uses:" v="net.sf.ehcache,org.acegisecurity.userdetails,org.apache.commons.logging,org.springframework.dao,org.acegisecurity.providers.dao,org.springframework.util,org.springframework.beans.factory"/>
<p n="version" t="version" v="1.0.0"/>
</capability>
<capability name="package">
<p n="package" v="org.acegisecurity.adapters.cas3"/>
<p n="uses:" v="org.acegisecurity.providers,org.jasig.cas.authentication.handler,org.acegisecurity,org.jasig.cas.authentication.principal,org.apache.commons.logging,org.springframework.util,org.jasig.cas.authentication.handler.support"/>
<p n="version" t="version" v="1.0.0"/>
</capability>
<capability name="package">
<p n="package" v="org.acegisecurity.intercept.web"/>
<p n="uses:" v="org.acegisecurity.intercept,javax.servlet.http,org.acegisecurity.util,org.apache.commons.logging,org.apache.commons.lang,org.apache.oro.text.regex,javax.servlet,org.acegisecurity,org.springframework.util,org.springframework.beans.factory"/>
<p n="version" t="version" v="1.0.0"/>
</capability>
<capability name="package">
<p n="package" v="org.acegisecurity.ui.webapp"/>
<p n="uses:" v="javax.servlet.http,org.acegisecurity.providers,org.acegisecurity.util,org.apache.commons.logging,javax.servlet,org.acegisecurity.context,org.acegisecurity,org.acegisecurity.ui,org.springframework.util,org.springframework.beans.factory"/>
<p n="version" t="version" v="1.0.0"/>
</capability>
<capability name="package">
<p n="package" v="org.acegisecurity.captcha"/>
<p n="uses:" v="org.acegisecurity.securechannel,javax.servlet.http,org.acegisecurity.util,org.apache.commons.logging,javax.servlet,org.acegisecurity.context,org.acegisecurity,org.acegisecurity.intercept.web,org.springframework.util,org.springframework.beans.factory"/>
<p n="version" t="version" v="1.0.0"/>
</capability>
<capability name="package">
<p n="package" v="org.acegisecurity.event.authorization"/>
<p n="uses:" v="org.acegisecurity,org.apache.commons.logging,org.springframework.context"/>
<p n="version" t="version" v="1.0.0"/>
</capability>
<capability name="package">
<p n="package" v="org.acegisecurity.acl.basic.jdbc"/>
<p n="uses:" v="org.acegisecurity.acl.basic,org.acegisecurity.acl.basic.cache,org.springframework.jdbc.core,org.apache.commons.logging,org.springframework.dao,org.springframework.jdbc.core.support,org.springframework.context,javax.sql,org.springframework.jdbc.object,org.springframework.util"/>
<p n="version" t="version" v="1.0.0"/>
</capability>
<capability name="package">
<p n="package" v="org.acegisecurity.context.rmi"/>
<p n="uses:" v="org.springframework.remoting.support,org.acegisecurity.context,org.acegisecurity,org.apache.commons.logging,org.aopalliance.intercept"/>
<p n="version" t="version" v="1.0.0"/>
</capability>
<capability name="package">
<p n="package" v="org.acegisecurity.ui.cas"/>
<p n="uses:" v="javax.servlet.http,org.acegisecurity.providers,javax.servlet,org.acegisecurity,org.acegisecurity.ui,org.springframework.util,org.springframework.beans.factory"/>
<p n="version" t="version" v="1.0.0"/>
</capability>
<capability name="package">
<p n="package" v="org.acegisecurity.intercept.method.aopalliance"/>
<p n="uses:" v="org.acegisecurity.intercept,org.acegisecurity,org.springframework.aop.framework,org.springframework.aop.support,org.aopalliance.aop,org.aopalliance.intercept,org.acegisecurity.intercept.method"/>
<p n="version" t="version" v="1.0.0"/>
</capability>
<capability name="package">
<p n="package" v="org.acegisecurity.providers.cas.ticketvalidator"/>
<p n="uses:" v="org.acegisecurity.providers.cas,org.acegisecurity.ui.cas,org.acegisecurity,org.apache.commons.logging,org.springframework.util,org.springframework.beans.factory,edu.yale.its.tp.cas.client"/>
<p n="version" t="version" v="1.0.0"/>
</capability>
<capability name="package">
<p n="package" v="org.acegisecurity.providers.rememberme"/>
<p n="uses:" v="org.acegisecurity.providers,org.acegisecurity,org.apache.commons.logging,org.springframework.util,org.springframework.context,org.springframework.context.support,org.springframework.beans.factory"/>
<p n="version" t="version" v="1.0.0"/>
</capability>
<capability name="package">
<p n="package" v="org.acegisecurity.acl.basic.cache"/>
<p n="uses:" v="org.acegisecurity.acl.basic,net.sf.ehcache,org.apache.commons.logging,org.springframework.dao,org.springframework.util,org.springframework.beans.factory"/>
<p n="version" t="version" v="1.0.0"/>
</capability>
<capability name="package">
<p n="package" v="org.acegisecurity.concurrent"/>
<p n="uses:" v="javax.servlet.http,org.springframework.context,org.springframework.context.support,javax.servlet,org.acegisecurity.userdetails,org.acegisecurity,org.acegisecurity.ui.session,org.springframework.util,org.springframework.beans.factory"/>
<p n="version" t="version" v="1.0.0"/>
</capability>
<capability name="package">
<p n="package" v="org.acegisecurity.taglibs.authz"/>
<p n="uses:" v="org.acegisecurity.acl.basic,javax.servlet.jsp.tagext,org.springframework.web.context,org.apache.commons.logging,org.springframework.context,javax.servlet.jsp,org.springframework.web.util,org.acegisecurity.acl,javax.servlet,org.acegisecurity.context,org.acegisecurity.userdetails,org.acegisecurity,org.springframework.util,org.springframework.beans.factory,org.springframework.web.context.support"/>
<p n="version" t="version" v="1.0.0"/>
</capability>
<capability name="package">
<p n="package" v="org.acegisecurity.ui.x509"/>
<p n="uses:" v="javax.servlet.http,org.acegisecurity.event.authentication,org.apache.commons.logging,org.springframework.context,javax.servlet,org.acegisecurity.context,org.acegisecurity,org.acegisecurity.ui,org.springframework.util,org.acegisecurity.providers.x509,org.springframework.beans.factory"/>
<p n="version" t="version" v="1.0.0"/>
</capability>
<capability name="package">
<p n="package" v="org.acegisecurity.userdetails.memory"/>
<p n="uses:" v="org.springframework.beans.propertyeditors,org.acegisecurity.userdetails,org.acegisecurity,org.apache.commons.logging,org.springframework.dao,org.springframework.util,org.springframework.beans.factory"/>
<p n="version" t="version" v="1.0.0"/>
</capability>
<capability name="package">
<p n="package" v="org.acegisecurity.providers.cas.cache"/>
<p n="uses:" v="org.acegisecurity.providers.cas,net.sf.ehcache,org.apache.commons.logging,org.springframework.dao,org.springframework.util,org.springframework.beans.factory"/>
<p n="version" t="version" v="1.0.0"/>
</capability>
<capability name="package">
<p n="package" v="org.acegisecurity.runas"/>
<p n="uses:" v="org.acegisecurity.providers,org.acegisecurity,org.springframework.context,org.springframework.util,org.springframework.context.support,org.springframework.beans.factory"/>
<p n="version" t="version" v="1.0.0"/>
</capability>
<capability name="package">
<p n="package" v="org.acegisecurity.ldap"/>
<p n="uses:" v="javax.naming.directory,org.apache.commons.logging,org.springframework.dao,org.springframework.context,org.springframework.context.support,javax.naming,org.acegisecurity.userdetails.ldap,org.acegisecurity,org.springframework.util"/>
<p n="version" t="version" v="1.0.0"/>
</capability>
<capability name="package">
<p n="package" v="org.acegisecurity.context"/>
<p n="uses:" v="javax.servlet.http,javax.servlet,org.acegisecurity,org.apache.commons.logging,org.springframework.util,org.springframework.beans.factory"/>
<p n="version" t="version" v="1.0.0"/>
</capability>
<capability name="package">
<p n="package" v="org.acegisecurity.userdetails"/>
<p n="uses:" v="org.acegisecurity,org.springframework.dao,org.springframework.util"/>
<p n="version" t="version" v="1.0.0"/>
</capability>
<capability name="package">
<p n="package" v="org.acegisecurity.adapters.cas"/>
<p n="uses:" v="javax.servlet.http,edu.yale.its.tp.cas.auth,org.acegisecurity.providers,org.springframework.web.context,org.apache.commons.logging,org.springframework.context,javax.servlet,org.acegisecurity,org.springframework.beans.factory,org.springframework.web.context.support"/>
<p n="version" t="version" v="1.0.0"/>
</capability>
<capability name="package">
<p n="package" v="org.acegisecurity.providers.x509.populator"/>
<p n="uses:" v="org.apache.commons.logging,org.springframework.context,org.springframework.context.support,org.apache.oro.text.regex,org.acegisecurity.userdetails,org.acegisecurity,org.springframework.util,org.acegisecurity.providers.x509,org.springframework.beans.factory"/>
<p n="version" t="version" v="1.0.0"/>
</capability>
<capability name="package">
<p n="package" v="org.acegisecurity.providers.x509"/>
<p n="uses:" v="org.acegisecurity.providers,org.acegisecurity.providers.x509.cache,org.acegisecurity.userdetails,org.acegisecurity,org.apache.commons.logging,org.springframework.context,org.springframework.util,org.springframework.beans.factory,org.springframework.context.support"/>
<p n="version" t="version" v="1.0.0"/>
</capability>
<capability name="package">
<p n="package" v="org.acegisecurity.providers.rcp"/>
<p n="uses:" v="org.acegisecurity.providers,org.acegisecurity,org.springframework.util,org.springframework.beans.factory"/>
<p n="version" t="version" v="1.0.0"/>
</capability>
<require extend="false" filter="(&amp;(package=edu.yale.its.tp.cas.auth)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package edu.yale.its.tp.cas.auth</require>
<require extend="false" filter="(&amp;(package=edu.yale.its.tp.cas.client)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package edu.yale.its.tp.cas.client</require>
<require extend="false" filter="(&amp;(package=javax.naming)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package javax.naming</require>
<require extend="false" filter="(&amp;(package=javax.naming.directory)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package javax.naming.directory</require>
<require extend="false" filter="(&amp;(package=javax.naming.ldap)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package javax.naming.ldap</require>
<require extend="false" filter="(&amp;(package=javax.security.auth)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package javax.security.auth</require>
<require extend="false" filter="(&amp;(package=javax.security.auth.callback)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package javax.security.auth.callback</require>
<require extend="false" filter="(&amp;(package=javax.security.auth.login)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package javax.security.auth.login</require>
<require extend="false" filter="(&amp;(package=javax.security.auth.spi)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package javax.security.auth.spi</require>
<require extend="false" filter="(&amp;(package=javax.servlet)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package javax.servlet</require>
<require extend="false" filter="(&amp;(package=javax.servlet.http)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package javax.servlet.http</require>
<require extend="false" filter="(&amp;(package=javax.servlet.jsp)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package javax.servlet.jsp</require>
<require extend="false" filter="(&amp;(package=javax.servlet.jsp.tagext)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package javax.servlet.jsp.tagext</require>
<require extend="false" filter="(&amp;(package=javax.sql)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package javax.sql</require>
<require extend="false" filter="(&amp;(package=net.sf.ehcache)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package net.sf.ehcache</require>
<require extend="false" filter="(&amp;(package=org.acegisecurity)(version&gt;=1.0.0))" multiple="false" name="package" optional="false">Import package org.acegisecurity ;version=1.0.0</require>
<require extend="false" filter="(&amp;(package=org.acegisecurity.acl)(version&gt;=1.0.0))" multiple="false" name="package" optional="false">Import package org.acegisecurity.acl ;version=1.0.0</require>
<require extend="false" filter="(&amp;(package=org.acegisecurity.acl.basic)(version&gt;=1.0.0))" multiple="false" name="package" optional="false">Import package org.acegisecurity.acl.basic ;version=1.0.0</require>
<require extend="false" filter="(&amp;(package=org.acegisecurity.acl.basic.cache)(version&gt;=1.0.0))" multiple="false" name="package" optional="false">Import package org.acegisecurity.acl.basic.cache ;version=1.0.0</require>
<require extend="false" filter="(&amp;(package=org.acegisecurity.acl.basic.jdbc)(version&gt;=1.0.0))" multiple="false" name="package" optional="false">Import package org.acegisecurity.acl.basic.jdbc ;version=1.0.0</require>
<require extend="false" filter="(&amp;(package=org.acegisecurity.adapters)(version&gt;=1.0.0))" multiple="false" name="package" optional="false">Import package org.acegisecurity.adapters ;version=1.0.0</require>
<require extend="false" filter="(&amp;(package=org.acegisecurity.adapters.cas)(version&gt;=1.0.0))" multiple="false" name="package" optional="false">Import package org.acegisecurity.adapters.cas ;version=1.0.0</require>
<require extend="false" filter="(&amp;(package=org.acegisecurity.adapters.cas3)(version&gt;=1.0.0))" multiple="false" name="package" optional="false">Import package org.acegisecurity.adapters.cas3 ;version=1.0.0</require>
<require extend="false" filter="(&amp;(package=org.acegisecurity.afterinvocation)(version&gt;=1.0.0))" multiple="false" name="package" optional="false">Import package org.acegisecurity.afterinvocation ;version=1.0.0</require>
<require extend="false" filter="(&amp;(package=org.acegisecurity.annotation)(version&gt;=1.0.0))" multiple="false" name="package" optional="false">Import package org.acegisecurity.annotation ;version=1.0.0</require>
<require extend="false" filter="(&amp;(package=org.acegisecurity.captcha)(version&gt;=1.0.0))" multiple="false" name="package" optional="false">Import package org.acegisecurity.captcha ;version=1.0.0</require>
<require extend="false" filter="(&amp;(package=org.acegisecurity.concurrent)(version&gt;=1.0.0))" multiple="false" name="package" optional="false">Import package org.acegisecurity.concurrent ;version=1.0.0</require>
<require extend="false" filter="(&amp;(package=org.acegisecurity.context)(version&gt;=1.0.0))" multiple="false" name="package" optional="false">Import package org.acegisecurity.context ;version=1.0.0</require>
<require extend="false" filter="(&amp;(package=org.acegisecurity.context.httpinvoker)(version&gt;=1.0.0))" multiple="false" name="package" optional="false">Import package org.acegisecurity.context.httpinvoker ;version=1.0.0</require>
<require extend="false" filter="(&amp;(package=org.acegisecurity.context.rmi)(version&gt;=1.0.0))" multiple="false" name="package" optional="false">Import package org.acegisecurity.context.rmi ;version=1.0.0</require>
<require extend="false" filter="(&amp;(package=org.acegisecurity.event.authentication)(version&gt;=1.0.0))" multiple="false" name="package" optional="false">Import package org.acegisecurity.event.authentication ;version=1.0.0</require>
<require extend="false" filter="(&amp;(package=org.acegisecurity.event.authorization)(version&gt;=1.0.0))" multiple="false" name="package" optional="false">Import package org.acegisecurity.event.authorization ;version=1.0.0</require>
<require extend="false" filter="(&amp;(package=org.acegisecurity.intercept)(version&gt;=1.0.0))" multiple="false" name="package" optional="false">Import package org.acegisecurity.intercept ;version=1.0.0</require>
<require extend="false" filter="(&amp;(package=org.acegisecurity.intercept.method)(version&gt;=1.0.0))" multiple="false" name="package" optional="false">Import package org.acegisecurity.intercept.method ;version=1.0.0</require>
<require extend="false" filter="(&amp;(package=org.acegisecurity.intercept.method.aopalliance)(version&gt;=1.0.0))" multiple="false" name="package" optional="false">Import package org.acegisecurity.intercept.method.aopalliance ;version=1.0.0</require>
<require extend="false" filter="(&amp;(package=org.acegisecurity.intercept.method.aspectj)(version&gt;=1.0.0))" multiple="false" name="package" optional="false">Import package org.acegisecurity.intercept.method.aspectj ;version=1.0.0</require>
<require extend="false" filter="(&amp;(package=org.acegisecurity.intercept.web)(version&gt;=1.0.0))" multiple="false" name="package" optional="false">Import package org.acegisecurity.intercept.web ;version=1.0.0</require>
<require extend="false" filter="(&amp;(package=org.acegisecurity.ldap)(version&gt;=1.0.0))" multiple="false" name="package" optional="false">Import package org.acegisecurity.ldap ;version=1.0.0</require>
<require extend="false" filter="(&amp;(package=org.acegisecurity.ldap.search)(version&gt;=1.0.0))" multiple="false" name="package" optional="false">Import package org.acegisecurity.ldap.search ;version=1.0.0</require>
<require extend="false" filter="(&amp;(package=org.acegisecurity.providers)(version&gt;=1.0.0))" multiple="false" name="package" optional="false">Import package org.acegisecurity.providers ;version=1.0.0</require>
<require extend="false" filter="(&amp;(package=org.acegisecurity.providers.anonymous)(version&gt;=1.0.0))" multiple="false" name="package" optional="false">Import package org.acegisecurity.providers.anonymous ;version=1.0.0</require>
<require extend="false" filter="(&amp;(package=org.acegisecurity.providers.cas)(version&gt;=1.0.0))" multiple="false" name="package" optional="false">Import package org.acegisecurity.providers.cas ;version=1.0.0</require>
<require extend="false" filter="(&amp;(package=org.acegisecurity.providers.cas.cache)(version&gt;=1.0.0))" multiple="false" name="package" optional="false">Import package org.acegisecurity.providers.cas.cache ;version=1.0.0</require>
<require extend="false" filter="(&amp;(package=org.acegisecurity.providers.cas.populator)(version&gt;=1.0.0))" multiple="false" name="package" optional="false">Import package org.acegisecurity.providers.cas.populator ;version=1.0.0</require>
<require extend="false" filter="(&amp;(package=org.acegisecurity.providers.cas.proxy)(version&gt;=1.0.0))" multiple="false" name="package" optional="false">Import package org.acegisecurity.providers.cas.proxy ;version=1.0.0</require>
<require extend="false" filter="(&amp;(package=org.acegisecurity.providers.cas.ticketvalidator)(version&gt;=1.0.0))" multiple="false" name="package" optional="false">Import package org.acegisecurity.providers.cas.ticketvalidator ;version=1.0.0</require>
<require extend="false" filter="(&amp;(package=org.acegisecurity.providers.dao)(version&gt;=1.0.0))" multiple="false" name="package" optional="false">Import package org.acegisecurity.providers.dao ;version=1.0.0</require>
<require extend="false" filter="(&amp;(package=org.acegisecurity.providers.dao.cache)(version&gt;=1.0.0))" multiple="false" name="package" optional="false">Import package org.acegisecurity.providers.dao.cache ;version=1.0.0</require>
<require extend="false" filter="(&amp;(package=org.acegisecurity.providers.dao.salt)(version&gt;=1.0.0))" multiple="false" name="package" optional="false">Import package org.acegisecurity.providers.dao.salt ;version=1.0.0</require>
<require extend="false" filter="(&amp;(package=org.acegisecurity.providers.encoding)(version&gt;=1.0.0))" multiple="false" name="package" optional="false">Import package org.acegisecurity.providers.encoding ;version=1.0.0</require>
<require extend="false" filter="(&amp;(package=org.acegisecurity.providers.jaas)(version&gt;=1.0.0))" multiple="false" name="package" optional="false">Import package org.acegisecurity.providers.jaas ;version=1.0.0</require>
<require extend="false" filter="(&amp;(package=org.acegisecurity.providers.jaas.event)(version&gt;=1.0.0))" multiple="false" name="package" optional="false">Import package org.acegisecurity.providers.jaas.event ;version=1.0.0</require>
<require extend="false" filter="(&amp;(package=org.acegisecurity.providers.ldap)(version&gt;=1.0.0))" multiple="false" name="package" optional="false">Import package org.acegisecurity.providers.ldap ;version=1.0.0</require>
<require extend="false" filter="(&amp;(package=org.acegisecurity.providers.ldap.authenticator)(version&gt;=1.0.0))" multiple="false" name="package" optional="false">Import package org.acegisecurity.providers.ldap.authenticator ;version=1.0.0</require>
<require extend="false" filter="(&amp;(package=org.acegisecurity.providers.ldap.populator)(version&gt;=1.0.0))" multiple="false" name="package" optional="false">Import package org.acegisecurity.providers.ldap.populator ;version=1.0.0</require>
<require extend="false" filter="(&amp;(package=org.acegisecurity.providers.rcp)(version&gt;=1.0.0))" multiple="false" name="package" optional="false">Import package org.acegisecurity.providers.rcp ;version=1.0.0</require>
<require extend="false" filter="(&amp;(package=org.acegisecurity.providers.rememberme)(version&gt;=1.0.0))" multiple="false" name="package" optional="false">Import package org.acegisecurity.providers.rememberme ;version=1.0.0</require>
<require extend="false" filter="(&amp;(package=org.acegisecurity.providers.x509)(version&gt;=1.0.0))" multiple="false" name="package" optional="false">Import package org.acegisecurity.providers.x509 ;version=1.0.0</require>
<require extend="false" filter="(&amp;(package=org.acegisecurity.providers.x509.cache)(version&gt;=1.0.0))" multiple="false" name="package" optional="false">Import package org.acegisecurity.providers.x509.cache ;version=1.0.0</require>
<require extend="false" filter="(&amp;(package=org.acegisecurity.providers.x509.populator)(version&gt;=1.0.0))" multiple="false" name="package" optional="false">Import package org.acegisecurity.providers.x509.populator ;version=1.0.0</require>
<require extend="false" filter="(&amp;(package=org.acegisecurity.runas)(version&gt;=1.0.0))" multiple="false" name="package" optional="false">Import package org.acegisecurity.runas ;version=1.0.0</require>
<require extend="false" filter="(&amp;(package=org.acegisecurity.securechannel)(version&gt;=1.0.0))" multiple="false" name="package" optional="false">Import package org.acegisecurity.securechannel ;version=1.0.0</require>
<require extend="false" filter="(&amp;(package=org.acegisecurity.taglibs.authz)(version&gt;=1.0.0))" multiple="false" name="package" optional="false">Import package org.acegisecurity.taglibs.authz ;version=1.0.0</require>
<require extend="false" filter="(&amp;(package=org.acegisecurity.taglibs.velocity)(version&gt;=1.0.0))" multiple="false" name="package" optional="false">Import package org.acegisecurity.taglibs.velocity ;version=1.0.0</require>
<require extend="false" filter="(&amp;(package=org.acegisecurity.ui)(version&gt;=1.0.0))" multiple="false" name="package" optional="false">Import package org.acegisecurity.ui ;version=1.0.0</require>
<require extend="false" filter="(&amp;(package=org.acegisecurity.ui.basicauth)(version&gt;=1.0.0))" multiple="false" name="package" optional="false">Import package org.acegisecurity.ui.basicauth ;version=1.0.0</require>
<require extend="false" filter="(&amp;(package=org.acegisecurity.ui.cas)(version&gt;=1.0.0))" multiple="false" name="package" optional="false">Import package org.acegisecurity.ui.cas ;version=1.0.0</require>
<require extend="false" filter="(&amp;(package=org.acegisecurity.ui.digestauth)(version&gt;=1.0.0))" multiple="false" name="package" optional="false">Import package org.acegisecurity.ui.digestauth ;version=1.0.0</require>
<require extend="false" filter="(&amp;(package=org.acegisecurity.ui.logout)(version&gt;=1.0.0))" multiple="false" name="package" optional="false">Import package org.acegisecurity.ui.logout ;version=1.0.0</require>
<require extend="false" filter="(&amp;(package=org.acegisecurity.ui.rememberme)(version&gt;=1.0.0))" multiple="false" name="package" optional="false">Import package org.acegisecurity.ui.rememberme ;version=1.0.0</require>
<require extend="false" filter="(&amp;(package=org.acegisecurity.ui.savedrequest)(version&gt;=1.0.0))" multiple="false" name="package" optional="false">Import package org.acegisecurity.ui.savedrequest ;version=1.0.0</require>
<require extend="false" filter="(&amp;(package=org.acegisecurity.ui.session)(version&gt;=1.0.0))" multiple="false" name="package" optional="false">Import package org.acegisecurity.ui.session ;version=1.0.0</require>
<require extend="false" filter="(&amp;(package=org.acegisecurity.ui.switchuser)(version&gt;=1.0.0))" multiple="false" name="package" optional="false">Import package org.acegisecurity.ui.switchuser ;version=1.0.0</require>
<require extend="false" filter="(&amp;(package=org.acegisecurity.ui.webapp)(version&gt;=1.0.0))" multiple="false" name="package" optional="false">Import package org.acegisecurity.ui.webapp ;version=1.0.0</require>
<require extend="false" filter="(&amp;(package=org.acegisecurity.ui.x509)(version&gt;=1.0.0))" multiple="false" name="package" optional="false">Import package org.acegisecurity.ui.x509 ;version=1.0.0</require>
<require extend="false" filter="(&amp;(package=org.acegisecurity.userdetails)(version&gt;=1.0.0))" multiple="false" name="package" optional="false">Import package org.acegisecurity.userdetails ;version=1.0.0</require>
<require extend="false" filter="(&amp;(package=org.acegisecurity.userdetails.jdbc)(version&gt;=1.0.0))" multiple="false" name="package" optional="false">Import package org.acegisecurity.userdetails.jdbc ;version=1.0.0</require>
<require extend="false" filter="(&amp;(package=org.acegisecurity.userdetails.ldap)(version&gt;=1.0.0))" multiple="false" name="package" optional="false">Import package org.acegisecurity.userdetails.ldap ;version=1.0.0</require>
<require extend="false" filter="(&amp;(package=org.acegisecurity.userdetails.memory)(version&gt;=1.0.0))" multiple="false" name="package" optional="false">Import package org.acegisecurity.userdetails.memory ;version=1.0.0</require>
<require extend="false" filter="(&amp;(package=org.acegisecurity.util)(version&gt;=1.0.0))" multiple="false" name="package" optional="false">Import package org.acegisecurity.util ;version=1.0.0</require>
<require extend="false" filter="(&amp;(package=org.acegisecurity.vote)(version&gt;=1.0.0))" multiple="false" name="package" optional="false">Import package org.acegisecurity.vote ;version=1.0.0</require>
<require extend="false" filter="(&amp;(package=org.acegisecurity.wrapper)(version&gt;=1.0.0))" multiple="false" name="package" optional="false">Import package org.acegisecurity.wrapper ;version=1.0.0</require>
<require extend="false" filter="(&amp;(package=org.aopalliance.aop)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package org.aopalliance.aop</require>
<require extend="false" filter="(&amp;(package=org.aopalliance.intercept)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package org.aopalliance.intercept</require>
<require extend="false" filter="(&amp;(package=org.apache.commons.codec.binary)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package org.apache.commons.codec.binary</require>
<require extend="false" filter="(&amp;(package=org.apache.commons.codec.digest)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package org.apache.commons.codec.digest</require>
<require extend="false" filter="(&amp;(package=org.apache.commons.collections.iterators)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package org.apache.commons.collections.iterators</require>
<require extend="false" filter="(&amp;(package=org.apache.commons.lang)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package org.apache.commons.lang</require>
<require extend="false" filter="(&amp;(package=org.apache.commons.logging)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package org.apache.commons.logging</require>
<require extend="false" filter="(&amp;(package=org.apache.oro.text.regex)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package org.apache.oro.text.regex</require>
<require extend="false" filter="(&amp;(package=org.aspectj.lang)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package org.aspectj.lang</require>
<require extend="false" filter="(&amp;(package=org.aspectj.lang.reflect)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package org.aspectj.lang.reflect</require>
<require extend="false" filter="(&amp;(package=org.jasig.cas.authentication.handler)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package org.jasig.cas.authentication.handler</require>
<require extend="false" filter="(&amp;(package=org.jasig.cas.authentication.handler.support)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package org.jasig.cas.authentication.handler.support</require>
<require extend="false" filter="(&amp;(package=org.jasig.cas.authentication.principal)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package org.jasig.cas.authentication.principal</require>
<require extend="false" filter="(&amp;(package=org.springframework.aop.framework)(version&gt;=2.5.0))" multiple="false" name="package" optional="false">Import package org.springframework.aop.framework ;version=2.5.0</require>
<require extend="false" filter="(&amp;(package=org.springframework.aop.support)(version&gt;=2.5.0))" multiple="false" name="package" optional="false">Import package org.springframework.aop.support ;version=2.5.0</require>
<require extend="false" filter="(&amp;(package=org.springframework.beans)(version&gt;=2.5.0))" multiple="false" name="package" optional="false">Import package org.springframework.beans ;version=2.5.0</require>
<require extend="false" filter="(&amp;(package=org.springframework.beans.factory)(version&gt;=2.5.0))" multiple="false" name="package" optional="false">Import package org.springframework.beans.factory ;version=2.5.0</require>
<require extend="false" filter="(&amp;(package=org.springframework.beans.propertyeditors)(version&gt;=2.5.0))" multiple="false" name="package" optional="false">Import package org.springframework.beans.propertyeditors ;version=2.5.0</require>
<require extend="false" filter="(&amp;(package=org.springframework.context)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package org.springframework.context</require>
<require extend="false" filter="(&amp;(package=org.springframework.context.support)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package org.springframework.context.support</require>
<require extend="false" filter="(&amp;(package=org.springframework.core)(version&gt;=2.5.0))" multiple="false" name="package" optional="false">Import package org.springframework.core ;version=2.5.0</require>
<require extend="false" filter="(&amp;(package=org.springframework.core.io)(version&gt;=2.5.0))" multiple="false" name="package" optional="false">Import package org.springframework.core.io ;version=2.5.0</require>
<require extend="false" filter="(&amp;(package=org.springframework.dao)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package org.springframework.dao</require>
<require extend="false" filter="(&amp;(package=org.springframework.jdbc.core)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package org.springframework.jdbc.core</require>
<require extend="false" filter="(&amp;(package=org.springframework.jdbc.core.support)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package org.springframework.jdbc.core.support</require>
<require extend="false" filter="(&amp;(package=org.springframework.jdbc.object)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package org.springframework.jdbc.object</require>
<require extend="false" filter="(&amp;(package=org.springframework.metadata)(version&gt;=2.5.0))" multiple="false" name="package" optional="false">Import package org.springframework.metadata ;version=2.5.0</require>
<require extend="false" filter="(&amp;(package=org.springframework.mock.web)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package org.springframework.mock.web</require>
<require extend="false" filter="(&amp;(package=org.springframework.remoting.httpinvoker)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package org.springframework.remoting.httpinvoker</require>
<require extend="false" filter="(&amp;(package=org.springframework.remoting.support)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package org.springframework.remoting.support</require>
<require extend="false" filter="(&amp;(package=org.springframework.util)(version&gt;=2.5.0))" multiple="false" name="package" optional="false">Import package org.springframework.util ;version=2.5.0</require>
<require extend="false" filter="(&amp;(package=org.springframework.web.bind)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package org.springframework.web.bind</require>
<require extend="false" filter="(&amp;(package=org.springframework.web.context)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package org.springframework.web.context</require>
<require extend="false" filter="(&amp;(package=org.springframework.web.context.support)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package org.springframework.web.context.support</require>
<require extend="false" filter="(&amp;(package=org.springframework.web.util)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package org.springframework.web.util</require>
</resource>
<resource id="75" presentationname="ServiceMix OSGI Common Bundles: ant" symbolicname="org.apache.servicemix.bundles.ant" uri="http://people.apache.org/repo/m2-snapshot-repository/org/apache/servicemix/bundles/org.apache.servicemix.bundles.ant/1.7.0-4.0-SNAPSHOT/org.apache.servicemix.bundles.ant-1.7.0-4.0-SNAPSHOT.jar" version="1.7.0.SNAPSHOT">
<description>This bundle simply wraps ant-1.7.0.jar.</description>
<size>1307135</size>
<category id="org.apache.servicemix.bundles"/>
<capability name="bundle">
<p n="manifestversion" v="2"/>
<p n="presentationname" v="ServiceMix OSGI Common Bundles: ant"/>
<p n="symbolicname" v="org.apache.servicemix.bundles.ant"/>
<p n="version" t="version" v="1.7.0.SNAPSHOT"/>
</capability>
<capability name="package">
<p n="package" v="org.apache.tools.ant.util.facade"/>
<p n="uses:" v="org.apache.tools.ant.types"/>
<p n="version" t="version" v="1.7.0"/>
</capability>
<capability name="package">
<p n="package" v="org.apache.tools.ant.types.resources.comparators"/>
<p n="uses:" v="org.apache.tools.ant.types.resources,org.apache.tools.ant.types,org.apache.tools.ant,org.apache.tools.ant.util"/>
<p n="version" t="version" v="1.7.0"/>
</capability>
<capability name="package">
<p n="package" v="org.apache.tools.ant.taskdefs.condition"/>
<p n="uses:" v="org.apache.tools.ant.types.resources,org.apache.tools.ant.taskdefs,org.apache.tools.ant.types,org.xml.sax,org.apache.tools.ant,org.apache.tools.ant.util.regexp,org.apache.tools.ant.types.selectors,org.apache.tools.ant.util,org.apache.tools.zip"/>
<p n="version" t="version" v="1.7.0"/>
</capability>
<capability name="package">
<p n="package" v="org.apache.tools.ant.taskdefs.rmic"/>
<p n="uses:" v="org.apache.tools.ant.types,org.apache.tools.ant.taskdefs,org.apache.tools.ant,org.apache.tools.ant.util,sun.rmi.rmic"/>
<p n="version" t="version" v="1.7.0"/>
</capability>
<capability name="package">
<p n="package" v="org.apache.tools.ant.taskdefs"/>
<p n="uses:" v="org.apache.tools.ant.util.facade,org.apache.tools.ant.types.resources.comparators,org.apache.tools.ant.taskdefs.rmic,org.apache.tools.ant.taskdefs.condition,org.apache.tools.ant.types,org.apache.tools.ant.filters,org.apache.tools.ant.types.selectors,org.apache.tools.ant.launch,org.apache.tools.bzip2,org.apache.tools.ant.types.selectors.modifiedselector,org.apache.tools.ant.taskdefs.compilers,org.apache.tools.ant.util,org.apache.tools.zip,javax.xml.parsers,org.apache.tools.ant.helper,org.apache.tools.ant.types.spi,org.apache.tools.ant.filters.util,org.apache.tools.tar,org.apache.tools.ant.types.resources,org.xml.sax,org.apache.tools.ant,org.apache.tools.ant.types.resources.selectors,org.apache.tools.ant.taskdefs.email,org.w3c.dom,org.apache.tools.ant.input"/>
<p n="version" t="version" v="1.7.0"/>
</capability>
<capability name="package">
<p n="package" v="org.apache.tools.ant.types"/>
<p n="uses:" v="org.apache.tools.ant.taskdefs.condition,org.apache.tools.ant.taskdefs,org.apache.tools.ant.filters,org.apache.tools.ant.util.regexp,org.apache.tools.ant.types.selectors,javax.xml.transform,org.apache.tools.ant.types.selectors.modifiedselector,org.apache.tools.ant.util,org.apache.tools.zip,org.apache.tools.ant.helper,javax.xml.parsers,org.apache.tools.tar,org.apache.tools.ant.types.resources,org.xml.sax,org.apache.tools.ant,javax.xml.transform.sax"/>
<p n="version" t="version" v="1.7.0"/>
</capability>
<capability name="package">
<p n="package" v="org.apache.tools.ant.types.conditions"/>
<p n="version" t="version" v="1.7.0"/>
</capability>
<capability name="package">
<p n="package" v="org.apache.tools.ant.taskdefs.cvslib"/>
<p n="uses:" v="org.apache.tools.ant.taskdefs,org.apache.tools.ant.types,org.apache.tools.ant,org.apache.tools.ant.util,org.w3c.dom"/>
<p n="version" t="version" v="1.7.0"/>
</capability>
<capability name="package">
<p n="package" v="org.apache.tools.ant.util.regexp"/>
<p n="uses:" v="org.apache.tools.ant,org.apache.tools.ant.util"/>
<p n="version" t="version" v="1.7.0"/>
</capability>
<capability name="package">
<p n="package" v="org.apache.tools.ant.filters"/>
<p n="uses:" v="org.apache.tools.ant.taskdefs.condition,org.apache.tools.ant.types,org.apache.tools.ant,org.apache.tools.ant.util,org.apache.tools.ant.util.regexp"/>
<p n="version" t="version" v="1.7.0"/>
</capability>
<capability name="package">
<p n="package" v="org.apache.tools.ant.types.selectors"/>
<p n="uses:" v="org.apache.tools.ant.taskdefs.condition,org.apache.tools.ant.types.resources,org.apache.tools.ant.types,org.apache.tools.ant,org.apache.tools.ant.types.resources.selectors,org.apache.tools.ant.util.regexp,org.apache.tools.ant.types.selectors.modifiedselector,org.apache.tools.ant.util"/>
<p n="version" t="version" v="1.7.0"/>
</capability>
<capability name="package">
<p n="package" v="org.apache.tools.bzip2"/>
<p n="version" t="version" v="1.7.0"/>
</capability>
<capability name="package">
<p n="package" v="org.apache.tools.ant.launch"/>
<p n="uses:" v="com.sun.tools.javac,sun.tools.javac"/>
<p n="version" t="version" v="1.7.0"/>
</capability>
<capability name="package">
<p n="package" v="org.apache.tools.ant.types.selectors.modifiedselector"/>
<p n="uses:" v="org.apache.tools.ant.types.resources,org.apache.tools.ant.types,org.apache.tools.ant,org.apache.tools.ant.util,org.apache.tools.ant.types.resources.selectors,org.apache.tools.ant.types.selectors"/>
<p n="version" t="version" v="1.7.0"/>
</capability>
<capability name="package">
<p n="package" v="org.apache.tools.ant.types.mappers"/>
<p n="uses:" v="org.apache.tools.ant.types,org.apache.tools.ant,org.apache.tools.ant.util,org.apache.tools.ant.filters.util"/>
<p n="version" t="version" v="1.7.0"/>
</capability>
<capability name="package">
<p n="package" v="org.apache.tools.ant.taskdefs.compilers"/>
<p n="uses:" v="org.apache.tools.ant.taskdefs.condition,org.apache.tools.ant.types,org.apache.tools.ant.taskdefs,com.sun.tools.javac,org.apache.tools.ant,org.apache.tools.ant.util,sun.tools.javac"/>
<p n="version" t="version" v="1.7.0"/>
</capability>
<capability name="package">
<p n="package" v="org.apache.tools.ant.util"/>
<p n="uses:" v="org.apache.tools.ant.taskdefs.condition,org.apache.tools.ant.types.resources,org.apache.tools.ant.types,org.xml.sax,org.apache.tools.ant,org.apache.tools.ant.types.resources.selectors,org.w3c.dom,org.apache.tools.ant.util.regexp,org.apache.tools.ant.types.selectors,org.apache.tools.ant.launch,javax.xml.parsers,org.apache.tools.ant.filters.util"/>
<p n="version" t="version" v="1.7.0"/>
</capability>
<capability name="package">
<p n="package" v="org.apache.tools.zip"/>
<p n="version" t="version" v="1.7.0"/>
</capability>
<capability name="package">
<p n="package" v="org.apache.tools.ant.helper"/>
<p n="uses:" v="org.xml.sax,org.apache.tools.ant,org.apache.tools.ant.util,org.xml.sax.helpers"/>
<p n="version" t="version" v="1.7.0"/>
</capability>
<capability name="package">
<p n="package" v="org.apache.tools.ant.types.spi"/>
<p n="uses:" v="org.apache.tools.ant"/>
<p n="version" t="version" v="1.7.0"/>
</capability>
<capability name="package">
<p n="package" v="org.apache.tools.ant.dispatch"/>
<p n="uses:" v="org.apache.tools.ant"/>
<p n="version" t="version" v="1.7.0"/>
</capability>
<capability name="package">
<p n="package" v="org.apache.tools.ant.filters.util"/>
<p n="uses:" v="org.apache.tools.ant.types,org.apache.tools.ant,org.apache.tools.ant.util,org.apache.tools.ant.filters"/>
<p n="version" t="version" v="1.7.0"/>
</capability>
<capability name="package">
<p n="package" v="org.apache.tools.tar"/>
<p n="version" t="version" v="1.7.0"/>
</capability>
<capability name="package">
<p n="package" v="org.apache.tools.ant.types.resources"/>
<p n="uses:" v="org.apache.tools.ant.types.resources.comparators,org.apache.tools.tar,org.apache.tools.ant.types,org.apache.tools.ant,org.apache.tools.ant.types.resources.selectors,org.apache.tools.ant.types.selectors,org.apache.tools.bzip2,org.apache.tools.zip,org.apache.tools.ant.util"/>
<p n="version" t="version" v="1.7.0"/>
</capability>
<capability name="package">
<p n="package" v="org.apache.tools.ant"/>
<p n="uses:" v="org.apache.tools.ant.taskdefs.condition,org.apache.tools.ant.taskdefs,org.apache.tools.ant.types,org.apache.tools.ant.taskdefs.optional,org.apache.tools.ant.types.selectors,org.apache.tools.ant.launch,org.apache.tools.ant.util,javax.xml.parsers,org.apache.tools.ant.helper,org.apache.tools.ant.dispatch,org.apache.tools.ant.types.resources,org.xml.sax,org.apache.env,org.w3c.dom,org.apache.tools.ant.util.java15,org.apache.tools.ant.input,org.xml.sax.helpers"/>
<p n="version" t="version" v="1.7.0"/>
</capability>
<capability name="package">
<p n="package" v="org.apache.tools.ant.loader"/>
<p n="uses:" v="org.apache.tools.ant"/>
<p n="version" t="version" v="1.7.0"/>
</capability>
<capability name="package">
<p n="package" v="org.apache.tools.ant.types.resources.selectors"/>
<p n="uses:" v="org.apache.tools.ant.types.resources.comparators,org.apache.tools.ant.types.resources,org.apache.tools.ant.types,org.apache.tools.ant,org.apache.tools.ant.util,org.apache.tools.ant.types.selectors"/>
<p n="version" t="version" v="1.7.0"/>
</capability>
<capability name="package">
<p n="package" v="org.apache.tools.ant.taskdefs.email"/>
<p n="uses:" v="org.apache.tools.ant.types.resources,org.apache.tools.ant.types,org.apache.tools.ant,org.apache.tools.ant.util,org.apache.tools.mail"/>
<p n="version" t="version" v="1.7.0"/>
</capability>
<capability name="package">
<p n="package" v="org.apache.tools.ant.input"/>
<p n="uses:" v="org.apache.tools.ant.taskdefs,org.apache.tools.ant,org.apache.tools.ant.util"/>
<p n="version" t="version" v="1.7.0"/>
</capability>
<capability name="package">
<p n="package" v="org.apache.tools.ant.listener"/>
<p n="uses:" v="org.apache.tools.ant,org.apache.tools.ant.util,org.apache.tools.ant.taskdefs.email,org.apache.tools.mail"/>
<p n="version" t="version" v="1.7.0"/>
</capability>
<capability name="package">
<p n="package" v="org.apache.tools.mail"/>
<p n="version" t="version" v="1.7.0"/>
</capability>
<require extend="false" filter="(&amp;(package=com.sun.tools.javac)(version&gt;=0.0.0))" multiple="false" name="package" optional="true">Import package com.sun.tools.javac</require>
<require extend="false" filter="(&amp;(package=javax.xml.parsers)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package javax.xml.parsers</require>
<require extend="false" filter="(&amp;(package=javax.xml.transform)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package javax.xml.transform</require>
<require extend="false" filter="(&amp;(package=javax.xml.transform.sax)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package javax.xml.transform.sax</require>
<require extend="false" filter="(&amp;(package=org.apache.env)(version&gt;=0.0.0))" multiple="false" name="package" optional="true">Import package org.apache.env</require>
<require extend="false" filter="(&amp;(package=org.apache.tools.ant)(version&gt;=1.7.0))" multiple="false" name="package" optional="false">Import package org.apache.tools.ant ;version=1.7.0</require>
<require extend="false" filter="(&amp;(package=org.apache.tools.ant.dispatch)(version&gt;=1.7.0))" multiple="false" name="package" optional="false">Import package org.apache.tools.ant.dispatch ;version=1.7.0</require>
<require extend="false" filter="(&amp;(package=org.apache.tools.ant.filters)(version&gt;=1.7.0))" multiple="false" name="package" optional="false">Import package org.apache.tools.ant.filters ;version=1.7.0</require>
<require extend="false" filter="(&amp;(package=org.apache.tools.ant.filters.util)(version&gt;=1.7.0))" multiple="false" name="package" optional="false">Import package org.apache.tools.ant.filters.util ;version=1.7.0</require>
<require extend="false" filter="(&amp;(package=org.apache.tools.ant.helper)(version&gt;=1.7.0))" multiple="false" name="package" optional="false">Import package org.apache.tools.ant.helper ;version=1.7.0</require>
<require extend="false" filter="(&amp;(package=org.apache.tools.ant.input)(version&gt;=1.7.0))" multiple="false" name="package" optional="false">Import package org.apache.tools.ant.input ;version=1.7.0</require>
<require extend="false" filter="(&amp;(package=org.apache.tools.ant.launch)(version&gt;=1.7.0))" multiple="false" name="package" optional="false">Import package org.apache.tools.ant.launch ;version=1.7.0</require>
<require extend="false" filter="(&amp;(package=org.apache.tools.ant.listener)(version&gt;=1.7.0))" multiple="false" name="package" optional="false">Import package org.apache.tools.ant.listener ;version=1.7.0</require>
<require extend="false" filter="(&amp;(package=org.apache.tools.ant.loader)(version&gt;=1.7.0))" multiple="false" name="package" optional="false">Import package org.apache.tools.ant.loader ;version=1.7.0</require>
<require extend="false" filter="(&amp;(package=org.apache.tools.ant.taskdefs)(version&gt;=1.7.0))" multiple="false" name="package" optional="false">Import package org.apache.tools.ant.taskdefs ;version=1.7.0</require>
<require extend="false" filter="(&amp;(package=org.apache.tools.ant.taskdefs.compilers)(version&gt;=1.7.0))" multiple="false" name="package" optional="false">Import package org.apache.tools.ant.taskdefs.compilers ;version=1.7.0</require>
<require extend="false" filter="(&amp;(package=org.apache.tools.ant.taskdefs.condition)(version&gt;=1.7.0))" multiple="false" name="package" optional="false">Import package org.apache.tools.ant.taskdefs.condition ;version=1.7.0</require>
<require extend="false" filter="(&amp;(package=org.apache.tools.ant.taskdefs.cvslib)(version&gt;=1.7.0))" multiple="false" name="package" optional="false">Import package org.apache.tools.ant.taskdefs.cvslib ;version=1.7.0</require>
<require extend="false" filter="(&amp;(package=org.apache.tools.ant.taskdefs.email)(version&gt;=1.7.0))" multiple="false" name="package" optional="false">Import package org.apache.tools.ant.taskdefs.email ;version=1.7.0</require>
<require extend="false" filter="(&amp;(package=org.apache.tools.ant.taskdefs.optional)(version&gt;=0.0.0))" multiple="false" name="package" optional="true">Import package org.apache.tools.ant.taskdefs.optional</require>
<require extend="false" filter="(&amp;(package=org.apache.tools.ant.taskdefs.rmic)(version&gt;=1.7.0))" multiple="false" name="package" optional="false">Import package org.apache.tools.ant.taskdefs.rmic ;version=1.7.0</require>
<require extend="false" filter="(&amp;(package=org.apache.tools.ant.types)(version&gt;=1.7.0))" multiple="false" name="package" optional="false">Import package org.apache.tools.ant.types ;version=1.7.0</require>
<require extend="false" filter="(&amp;(package=org.apache.tools.ant.types.conditions)(version&gt;=1.7.0))" multiple="false" name="package" optional="false">Import package org.apache.tools.ant.types.conditions ;version=1.7.0</require>
<require extend="false" filter="(&amp;(package=org.apache.tools.ant.types.mappers)(version&gt;=1.7.0))" multiple="false" name="package" optional="false">Import package org.apache.tools.ant.types.mappers ;version=1.7.0</require>
<require extend="false" filter="(&amp;(package=org.apache.tools.ant.types.resources)(version&gt;=1.7.0))" multiple="false" name="package" optional="false">Import package org.apache.tools.ant.types.resources ;version=1.7.0</require>
<require extend="false" filter="(&amp;(package=org.apache.tools.ant.types.resources.comparators)(version&gt;=1.7.0))" multiple="false" name="package" optional="false">Import package org.apache.tools.ant.types.resources.comparators ;version=1.7.0</require>
<require extend="false" filter="(&amp;(package=org.apache.tools.ant.types.resources.selectors)(version&gt;=1.7.0))" multiple="false" name="package" optional="false">Import package org.apache.tools.ant.types.resources.selectors ;version=1.7.0</require>
<require extend="false" filter="(&amp;(package=org.apache.tools.ant.types.selectors)(version&gt;=1.7.0))" multiple="false" name="package" optional="false">Import package org.apache.tools.ant.types.selectors ;version=1.7.0</require>
<require extend="false" filter="(&amp;(package=org.apache.tools.ant.types.selectors.modifiedselector)(version&gt;=1.7.0))" multiple="false" name="package" optional="false">Import package org.apache.tools.ant.types.selectors.modifiedselector ;version=1.7.0</require>
<require extend="false" filter="(&amp;(package=org.apache.tools.ant.types.spi)(version&gt;=1.7.0))" multiple="false" name="package" optional="false">Import package org.apache.tools.ant.types.spi ;version=1.7.0</require>
<require extend="false" filter="(&amp;(package=org.apache.tools.ant.util)(version&gt;=1.7.0))" multiple="false" name="package" optional="false">Import package org.apache.tools.ant.util ;version=1.7.0</require>
<require extend="false" filter="(&amp;(package=org.apache.tools.ant.util.facade)(version&gt;=1.7.0))" multiple="false" name="package" optional="false">Import package org.apache.tools.ant.util.facade ;version=1.7.0</require>
<require extend="false" filter="(&amp;(package=org.apache.tools.ant.util.java15)(version&gt;=0.0.0))" multiple="false" name="package" optional="true">Import package org.apache.tools.ant.util.java15</require>
<require extend="false" filter="(&amp;(package=org.apache.tools.ant.util.regexp)(version&gt;=1.7.0))" multiple="false" name="package" optional="false">Import package org.apache.tools.ant.util.regexp ;version=1.7.0</require>
<require extend="false" filter="(&amp;(package=org.apache.tools.bzip2)(version&gt;=1.7.0))" multiple="false" name="package" optional="false">Import package org.apache.tools.bzip2 ;version=1.7.0</require>
<require extend="false" filter="(&amp;(package=org.apache.tools.mail)(version&gt;=1.7.0))" multiple="false" name="package" optional="false">Import package org.apache.tools.mail ;version=1.7.0</require>
<require extend="false" filter="(&amp;(package=org.apache.tools.tar)(version&gt;=1.7.0))" multiple="false" name="package" optional="false">Import package org.apache.tools.tar ;version=1.7.0</require>
<require extend="false" filter="(&amp;(package=org.apache.tools.zip)(version&gt;=1.7.0))" multiple="false" name="package" optional="false">Import package org.apache.tools.zip ;version=1.7.0</require>
<require extend="false" filter="(&amp;(package=org.w3c.dom)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package org.w3c.dom</require>
<require extend="false" filter="(&amp;(package=org.xml.sax)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package org.xml.sax</require>
<require extend="false" filter="(&amp;(package=org.xml.sax.helpers)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package org.xml.sax.helpers</require>
<require extend="false" filter="(&amp;(package=sun.rmi.rmic)(version&gt;=0.0.0))" multiple="false" name="package" optional="true">Import package sun.rmi.rmic</require>
<require extend="false" filter="(&amp;(package=sun.tools.javac)(version&gt;=0.0.0))" multiple="false" name="package" optional="true">Import package sun.tools.javac</require>
</resource>
<resource id="76" presentationname="ServiceMix OSGI Common Bundles: aopalliance" symbolicname="org.apache.servicemix.bundles.aopalliance" uri="http://people.apache.org/repo/m2-snapshot-repository/org/apache/servicemix/bundles/org.apache.servicemix.bundles.aopalliance/1.0-4.0-SNAPSHOT/org.apache.servicemix.bundles.aopalliance-1.0-4.0-SNAPSHOT.jar" version="1.0.0.SNAPSHOT">
<description>This bundle simply wraps aopalliance-1.0.jar.</description>
<size>7026</size>
<category id="org.apache.servicemix.bundles"/>
<capability name="bundle">
<p n="manifestversion" v="2"/>
<p n="presentationname" v="ServiceMix OSGI Common Bundles: aopalliance"/>
<p n="symbolicname" v="org.apache.servicemix.bundles.aopalliance"/>
<p n="version" t="version" v="1.0.0.SNAPSHOT"/>
</capability>
<capability name="package">
<p n="package" v="org.aopalliance.aop"/>
<p n="version" t="version" v="1.0.0"/>
</capability>
<capability name="package">
<p n="package" v="org.aopalliance.intercept"/>
<p n="uses:" v="org.aopalliance.aop"/>
<p n="version" t="version" v="1.0.0"/>
</capability>
<require extend="false" filter="(&amp;(package=org.aopalliance.aop)(version&gt;=1.0.0))" multiple="false" name="package" optional="false">Import package org.aopalliance.aop ;version=1.0.0</require>
<require extend="false" filter="(&amp;(package=org.aopalliance.intercept)(version&gt;=1.0.0))" multiple="false" name="package" optional="false">Import package org.aopalliance.intercept ;version=1.0.0</require>
</resource>
<resource id="77" presentationname="ServiceMix OSGI Common Bundles: asm" symbolicname="org.apache.servicemix.bundles.asm" uri="http://people.apache.org/repo/m2-snapshot-repository/org/apache/servicemix/bundles/org.apache.servicemix.bundles.asm/2.2.3-4.0-SNAPSHOT/org.apache.servicemix.bundles.asm-2.2.3-4.0-SNAPSHOT.jar" version="2.2.3.SNAPSHOT">
<description>This bundle simply wraps asm-2.2.3.jar.</description>
<size>179837</size>
<category id="org.apache.servicemix.bundles"/>
<capability name="bundle">
<p n="manifestversion" v="2"/>
<p n="presentationname" v="ServiceMix OSGI Common Bundles: asm"/>
<p n="symbolicname" v="org.apache.servicemix.bundles.asm"/>
<p n="version" t="version" v="2.2.3.SNAPSHOT"/>
</capability>
<capability name="package">
<p n="package" v="org.objectweb.asm.tree.analysis"/>
<p n="uses:" v="org.objectweb.asm.tree,org.objectweb.asm"/>
<p n="version" t="version" v="2.2.3"/>
</capability>
<capability name="package">
<p n="package" v="org.objectweb.asm.commons"/>
<p n="uses:" v="org.objectweb.asm"/>
<p n="version" t="version" v="2.2.3"/>
</capability>
<capability name="package">
<p n="package" v="org.objectweb.asm.tree"/>
<p n="uses:" v="org.objectweb.asm"/>
<p n="version" t="version" v="2.2.3"/>
</capability>
<capability name="package">
<p n="package" v="org.objectweb.asm.util"/>
<p n="uses:" v="org.objectweb.asm.tree.analysis,org.objectweb.asm.tree,org.objectweb.asm.signature,org.objectweb.asm.util.attrs,org.objectweb.asm"/>
<p n="version" t="version" v="2.2.3"/>
</capability>
<capability name="package">
<p n="package" v="org.objectweb.asm.signature"/>
<p n="version" t="version" v="2.2.3"/>
</capability>
<capability name="package">
<p n="package" v="org.objectweb.asm.attrs"/>
<p n="uses:" v="org.objectweb.asm"/>
<p n="version" t="version" v="2.2.3"/>
</capability>
<capability name="package">
<p n="package" v="org.objectweb.asm.util.attrs"/>
<p n="uses:" v="org.objectweb.asm.attrs,org.objectweb.asm"/>
<p n="version" t="version" v="2.2.3"/>
</capability>
<capability name="package">
<p n="package" v="org.objectweb.asm.xml"/>
<p n="uses:" v="org.xml.sax,org.objectweb.asm.util,org.objectweb.asm,javax.xml.transform,javax.xml.transform.sax,org.xml.sax.ext,org.xml.sax.helpers,javax.xml.transform.stream"/>
<p n="version" t="version" v="2.2.3"/>
</capability>
<capability name="package">
<p n="package" v="org.objectweb.asm"/>
<p n="version" t="version" v="2.2.3"/>
</capability>
<require extend="false" filter="(&amp;(package=javax.xml.transform)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package javax.xml.transform</require>
<require extend="false" filter="(&amp;(package=javax.xml.transform.sax)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package javax.xml.transform.sax</require>
<require extend="false" filter="(&amp;(package=javax.xml.transform.stream)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package javax.xml.transform.stream</require>
<require extend="false" filter="(&amp;(package=org.objectweb.asm)(version&gt;=2.2.3))" multiple="false" name="package" optional="false">Import package org.objectweb.asm ;version=2.2.3</require>
<require extend="false" filter="(&amp;(package=org.objectweb.asm.attrs)(version&gt;=2.2.3))" multiple="false" name="package" optional="false">Import package org.objectweb.asm.attrs ;version=2.2.3</require>
<require extend="false" filter="(&amp;(package=org.objectweb.asm.commons)(version&gt;=2.2.3))" multiple="false" name="package" optional="false">Import package org.objectweb.asm.commons ;version=2.2.3</require>
<require extend="false" filter="(&amp;(package=org.objectweb.asm.signature)(version&gt;=2.2.3))" multiple="false" name="package" optional="false">Import package org.objectweb.asm.signature ;version=2.2.3</require>
<require extend="false" filter="(&amp;(package=org.objectweb.asm.tree)(version&gt;=2.2.3))" multiple="false" name="package" optional="false">Import package org.objectweb.asm.tree ;version=2.2.3</require>
<require extend="false" filter="(&amp;(package=org.objectweb.asm.tree.analysis)(version&gt;=2.2.3))" multiple="false" name="package" optional="false">Import package org.objectweb.asm.tree.analysis ;version=2.2.3</require>
<require extend="false" filter="(&amp;(package=org.objectweb.asm.util)(version&gt;=2.2.3))" multiple="false" name="package" optional="false">Import package org.objectweb.asm.util ;version=2.2.3</require>
<require extend="false" filter="(&amp;(package=org.objectweb.asm.util.attrs)(version&gt;=2.2.3))" multiple="false" name="package" optional="false">Import package org.objectweb.asm.util.attrs ;version=2.2.3</require>
<require extend="false" filter="(&amp;(package=org.objectweb.asm.xml)(version&gt;=2.2.3))" multiple="false" name="package" optional="false">Import package org.objectweb.asm.xml ;version=2.2.3</require>
<require extend="false" filter="(&amp;(package=org.xml.sax)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package org.xml.sax</require>
<require extend="false" filter="(&amp;(package=org.xml.sax.ext)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package org.xml.sax.ext</require>
<require extend="false" filter="(&amp;(package=org.xml.sax.helpers)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package org.xml.sax.helpers</require>
</resource>
<resource id="78" presentationname="ServiceMix OSGI Common Bundles: cglib" symbolicname="org.apache.servicemix.bundles.cglib" uri="http://people.apache.org/repo/m2-snapshot-repository/org/apache/servicemix/bundles/org.apache.servicemix.bundles.cglib/2.1_3-4.0-SNAPSHOT/org.apache.servicemix.bundles.cglib-2.1_3-4.0-SNAPSHOT.jar" version="2.1.0.SNAPSHOT">
<description>This bundle simply wraps cglib-2.1_3.jar.</description>
<size>327690</size>
<category id="org.apache.servicemix.bundles"/>
<capability name="bundle">
<p n="manifestversion" v="2"/>
<p n="presentationname" v="ServiceMix OSGI Common Bundles: cglib"/>
<p n="symbolicname" v="org.apache.servicemix.bundles.cglib"/>
<p n="version" t="version" v="2.1.0.SNAPSHOT"/>
</capability>
<capability name="package">
<p n="package" v="net.sf.cglib.reflect"/>
<p n="uses:" v="net.sf.cglib.core,net.sf.cglib.asm"/>
<p n="version" t="version" v="2.1.0"/>
</capability>
<capability name="package">
<p n="package" v="net.sf.cglib.core"/>
<p n="uses:" v="net.sf.cglib.asm,net.sf.cglib.asm.util"/>
<p n="version" t="version" v="2.1.0"/>
</capability>
<capability name="package">
<p n="package" v="net.sf.cglib.beans"/>
<p n="uses:" v="net.sf.cglib.core,net.sf.cglib.asm"/>
<p n="version" t="version" v="2.1.0"/>
</capability>
<capability name="package">
<p n="package" v="net.sf.cglib.transform.impl"/>
<p n="uses:" v="net.sf.cglib.core,net.sf.cglib.transform,net.sf.cglib.asm"/>
<p n="version" t="version" v="2.1.0"/>
</capability>
<capability name="package">
<p n="package" v="net.sf.cglib.transform"/>
<p n="uses:" v="net.sf.cglib.core,org.apache.tools.ant.types,net.sf.cglib.asm,org.apache.tools.ant,net.sf.cglib.asm.attrs"/>
<p n="version" t="version" v="2.1.0"/>
</capability>
<capability name="package">
<p n="package" v="net.sf.cglib.asm"/>
<p n="version" t="version" v="2.1.0"/>
</capability>
<capability name="package">
<p n="package" v="net.sf.cglib.proxy"/>
<p n="uses:" v="net.sf.cglib.reflect,net.sf.cglib.core,net.sf.cglib.asm"/>
<p n="version" t="version" v="2.1.0"/>
</capability>
<capability name="package">
<p n="package" v="net.sf.cglib.asm.attrs"/>
<p n="uses:" v="net.sf.cglib.asm"/>
<p n="version" t="version" v="2.1.0"/>
</capability>
<capability name="package">
<p n="package" v="net.sf.cglib.util"/>
<p n="uses:" v="net.sf.cglib.core,net.sf.cglib.asm"/>
<p n="version" t="version" v="2.1.0"/>
</capability>
<capability name="package">
<p n="package" v="net.sf.cglib.transform.hook"/>
<p n="uses:" v="net.sf.cglib.core,net.sf.cglib.asm,net.sf.cglib.transform,org.codehaus.aspectwerkz.hook"/>
<p n="version" t="version" v="2.1.0"/>
</capability>
<require extend="false" filter="(&amp;(package=net.sf.cglib.asm)(version&gt;=2.1.0))" multiple="false" name="package" optional="false">Import package net.sf.cglib.asm ;version=2.1.0</require>
<require extend="false" filter="(&amp;(package=net.sf.cglib.asm.attrs)(version&gt;=2.1.0))" multiple="false" name="package" optional="false">Import package net.sf.cglib.asm.attrs ;version=2.1.0</require>
<require extend="false" filter="(&amp;(package=net.sf.cglib.asm.util)(version&gt;=0.0.0))" multiple="false" name="package" optional="true">Import package net.sf.cglib.asm.util</require>
<require extend="false" filter="(&amp;(package=net.sf.cglib.beans)(version&gt;=2.1.0))" multiple="false" name="package" optional="false">Import package net.sf.cglib.beans ;version=2.1.0</require>
<require extend="false" filter="(&amp;(package=net.sf.cglib.core)(version&gt;=2.1.0))" multiple="false" name="package" optional="false">Import package net.sf.cglib.core ;version=2.1.0</require>
<require extend="false" filter="(&amp;(package=net.sf.cglib.proxy)(version&gt;=2.1.0))" multiple="false" name="package" optional="false">Import package net.sf.cglib.proxy ;version=2.1.0</require>
<require extend="false" filter="(&amp;(package=net.sf.cglib.reflect)(version&gt;=2.1.0))" multiple="false" name="package" optional="false">Import package net.sf.cglib.reflect ;version=2.1.0</require>
<require extend="false" filter="(&amp;(package=net.sf.cglib.transform)(version&gt;=2.1.0))" multiple="false" name="package" optional="false">Import package net.sf.cglib.transform ;version=2.1.0</require>
<require extend="false" filter="(&amp;(package=net.sf.cglib.transform.hook)(version&gt;=2.1.0))" multiple="false" name="package" optional="false">Import package net.sf.cglib.transform.hook ;version=2.1.0</require>
<require extend="false" filter="(&amp;(package=net.sf.cglib.transform.impl)(version&gt;=2.1.0))" multiple="false" name="package" optional="false">Import package net.sf.cglib.transform.impl ;version=2.1.0</require>
<require extend="false" filter="(&amp;(package=net.sf.cglib.util)(version&gt;=2.1.0))" multiple="false" name="package" optional="false">Import package net.sf.cglib.util ;version=2.1.0</require>
<require extend="false" filter="(&amp;(package=org.apache.tools.ant)(version&gt;=0.0.0))" multiple="false" name="package" optional="true">Import package org.apache.tools.ant</require>
<require extend="false" filter="(&amp;(package=org.apache.tools.ant.types)(version&gt;=0.0.0))" multiple="false" name="package" optional="true">Import package org.apache.tools.ant.types</require>
<require extend="false" filter="(&amp;(package=org.codehaus.aspectwerkz.hook)(version&gt;=0.0.0))" multiple="false" name="package" optional="true">Import package org.codehaus.aspectwerkz.hook</require>
</resource>
<resource id="79" presentationname="ServiceMix OSGI Common Bundles: cxf" symbolicname="org.apache.servicemix.bundles.cxf" uri="http://people.apache.org/repo/m2-snapshot-repository/org/apache/servicemix/bundles/org.apache.servicemix.bundles.cxf/2.0.3-incubator-4.0-SNAPSHOT/org.apache.servicemix.bundles.cxf-2.0.3-incubator-4.0-SNAPSHOT.jar" version="2.0.3.incubator-40-SNAPSHOT">
<description>This bundle simply wraps cxf-2.0.3-incubator.jar.</description>
<size>2753743</size>
<category id="org.apache.servicemix.bundles"/>
<capability name="bundle">
<p n="manifestversion" v="2"/>
<p n="presentationname" v="ServiceMix OSGI Common Bundles: cxf"/>
<p n="symbolicname" v="org.apache.servicemix.bundles.cxf"/>
<p n="version" t="version" v="2.0.3.incubator-40-SNAPSHOT"/>
</capability>
<capability name="package">
<p n="package" v="org.apache.cxf.configuration.jsse"/>
<p n="uses:" v="javax.annotation,org.apache.cxf.configuration.security,javax.net.ssl"/>
<p n="version" t="version" v="2.0.3.incubator"/>
</capability>
<capability name="package">
<p n="package" v="org.apache.cxf.tools.java2wsdl.processor"/>
<p n="uses:" v="org.apache.cxf.common.logging,javax.xml.namespace,org.apache.cxf.common.i18n,org.apache.cxf.tools.java2wsdl.generator.wsdl11,org.apache.cxf.service.model,org.apache.cxf.tools.util,org.apache.cxf.tools.java2wsdl.generator,org.apache.cxf.tools.java2wsdl.processor.internal.jaxws,javax.jws.soap,org.apache.cxf.tools.common,org.apache.cxf.tools.java2wsdl.processor.internal,org.apache.cxf.common.util,javax.jws,org.apache.cxf,javax.xml.ws,org.apache.cxf.service,org.apache.cxf.wsdl"/>
<p n="version" t="version" v="2.0.3.incubator"/>
</capability>
<capability name="package">
<p n="package" v="org.apache.cxf.tools.wsdlto"/>
<p n="uses:" v="javax.wsdl,org.apache.cxf.common.logging,javax.xml.namespace,org.w3c.dom,org.apache.cxf.common.i18n,org.apache.cxf.service.model,org.apache.cxf.tools.util,org.apache.cxf.tools.wsdlto.core,org.apache.cxf.tools.common.toolspec.parser,org.apache.cxf.tools.validator,org.apache.cxf.tools.common,org.apache.cxf.common.util,org.apache.cxf.tools.common.toolspec,org.apache.cxf,org.apache.cxf.wsdl,org.apache.cxf.wsdl11"/>
<p n="version" t="version" v="2.0.3.incubator"/>
</capability>
<capability name="package">
<p n="package" v="org.apache.cxf.clustering.spring"/>
<p n="uses:" v="org.springframework.beans.factory.support,org.springframework.beans.factory.xml,org.w3c.dom,org.apache.cxf.clustering,org.apache.cxf.configuration.spring"/>
<p n="version" t="version" v="2.0.3.incubator"/>
</capability>
<capability name="package">
<p n="package" v="org.apache.cxf.transport.https"/>
<p n="uses:" v="javax.servlet.http,org.apache.cxf.configuration.jsse,org.apache.cxf.common.logging,javax.imageio,org.apache.cxf.security.transport,org.apache.cxf.configuration.security,org.apache.cxf.message,org.apache.cxf.transport.http,javax.net.ssl"/>
<p n="version" t="version" v="2.0.3.incubator"/>
</capability>
<capability name="package">
<p n="package" v="org.apache.cxf.resource"/>
<p n="uses:" v="org.apache.ws.commons.schema.resolver,org.apache.cxf.common.classloader,org.xml.sax,org.apache.cxf.common.logging,org.apache.cxf.common.util"/>
<p n="version" t="version" v="2.0.3.incubator"/>
</capability>
<capability name="package">
<p n="package" v="org.apache.cxf.transports.http_jetty.configuration"/>
<p n="uses:" v="javax.xml.namespace,javax.xml.bind.annotation.adapters,javax.xml.bind,javax.xml.bind.annotation,org.apache.cxf.configuration.security"/>
<p n="version" t="version" v="2.0.3.incubator"/>
</capability>
<capability name="package">
<p n="package" v="org.apache.cxf.jaxws.handler.logical"/>
<p n="uses:" v="javax.xml.ws.handler,org.apache.cxf.common.logging,org.apache.cxf.common.i18n,org.apache.cxf.jaxws.context,javax.xml.transform,org.apache.cxf.jaxws.support,org.apache.cxf.message,org.apache.cxf.binding,javax.xml.parsers,org.apache.cxf.binding.soap.interceptor,javax.xml.transform.stream,javax.xml.ws,javax.xml.stream,org.apache.cxf.endpoint,javax.activation,org.apache.cxf.jaxws.handler.soap,org.w3c.dom,org.apache.cxf.transport,org.apache.cxf.interceptor,javax.xml.transform.dom,javax.xml.soap,org.apache.cxf.binding.soap,org.apache.cxf.jaxws.handler,org.apache.cxf.binding.soap.saaj,org.apache.cxf.io,javax.xml.bind,org.apache.cxf.staxutils,org.apache.cxf.helpers"/>
<p n="version" t="version" v="2.0.3.incubator"/>
</capability>
<capability name="package">
<p n="package" v="org.apache.cxf.ws.security.wss4j"/>
<p n="uses:" v="org.apache.cxf.common.logging,javax.xml.namespace,org.apache.cxf.common.i18n,org.apache.cxf.phase,javax.xml.transform,org.apache.cxf.message,org.apache.cxf.binding.soap.interceptor,org.apache.ws.security.util,javax.security.auth.callback,javax.xml.stream,org.w3c.dom,org.apache.ws.security.components.crypto,org.apache.cxf.interceptor,org.apache.ws.security.message.token,javax.xml.transform.dom,javax.xml.soap,org.apache.cxf.binding.soap,org.apache.ws.security.handler,org.apache.cxf.binding.soap.saaj,org.apache.cxf.staxutils,org.apache.ws.security"/>
<p n="version" t="version" v="2.0.3.incubator"/>
</capability>
<capability name="package">
<p n="package" v="org.apache.cxf.databinding"/>
<p n="uses:" v="javax.xml.validation,javax.xml.namespace,org.apache.cxf.service.model,org.apache.cxf.service"/>
<p n="version" t="version" v="2.0.3.incubator"/>
</capability>
<capability name="package">
<p n="package" v="org.apache.cxf.endpoint"/>
<p n="uses:" v="com.ibm.wsdl.extensions.soap,org.apache.cxf.common.logging,javax.xml.namespace,org.apache.cxf.common.i18n,org.apache.cxf.extension,org.apache.cxf.phase,org.apache.cxf.management.annotation,org.apache.cxf.message,org.apache.cxf.binding,org.apache.cxf.ws.addressing,org.apache.cxf.service,org.apache.cxf.buslifecycle,org.apache.cxf.databinding,javax.management,org.apache.cxf.service.model,org.apache.cxf.transport,org.apache.cxf.interceptor,org.apache.cxf.management,org.apache.cxf.configuration,javax.annotation,org.apache.cxf,org.apache.cxf.wsdl11,org.apache.cxf.helpers"/>
<p n="version" t="version" v="2.0.3.incubator"/>
</capability>
<capability name="package">
<p n="package" v="org.apache.cxf.ws.rm"/>
<p n="uses:" v="org.apache.cxf.common.logging,org.apache.cxf.service.invoker,javax.xml.namespace,org.apache.cxf.ws.rm.persistence,org.apache.cxf.common.i18n,org.apache.cxf.phase,javax.xml.datatype,org.apache.cxf.service.factory,org.apache.neethi,org.apache.cxf.ws.rm.soap,org.apache.cxf.message,org.apache.cxf.binding,org.apache.cxf.ws.rm.manager,org.apache.cxf.ws.policy,org.apache.cxf.ws.rm.policy,org.apache.cxf.ws.addressing,org.apache.cxf.jaxb,org.apache.cxf.service,org.apache.cxf.databinding,org.apache.cxf.endpoint,org.apache.cxf.ws.addressing.v200408,org.apache.cxf.binding.soap.model,javax.xml.bind.annotation,org.apache.cxf.service.model,org.apache.cxf.transport,org.apache.cxf.interceptor,org.apache.cxf.binding.soap,javax.wsdl.extensions,javax.annotation,org.apache.cxf.io,org.apache.cxf,javax.xml.bind,org.apache.cxf.helpers"/>
<p n="version" t="version" v="2.0.3.incubator"/>
</capability>
<capability name="package">
<p n="package" v="org.apache.cxf.jaxws.interceptors"/>
<p n="uses:" v="org.apache.cxf.common.logging,javax.xml.namespace,org.apache.cxf.common.i18n,org.apache.cxf.phase,javax.xml.transform,org.apache.cxf.attachment,org.apache.cxf.jaxws.support,com.sun.xml.bind.v2.util,org.apache.cxf.message,org.apache.cxf.common.util,org.apache.cxf.binding.soap.interceptor,javax.xml.parsers,org.apache.cxf.jaxb,org.apache.cxf.jaxws.handler.logical,javax.xml.ws,javax.xml.transform.stream,org.apache.cxf.service,javax.xml.stream,org.apache.cxf.databinding,org.apache.cxf.endpoint,javax.mail.util,javax.imageio,javax.activation,org.apache.cxf.jaxws.handler.soap,org.w3c.dom,org.apache.cxf.binding.soap.model,javax.xml.bind.annotation,org.apache.cxf.databinding.source,org.apache.cxf.service.model,org.apache.cxf.interceptor,org.objectweb.asm,javax.xml.transform.dom,javax.imageio.stream,javax.xml.soap,org.apache.cxf.binding.soap,com.sun.xml.bind.v2.runtime,org.apache.cxf.io,javax.xml.bind,org.apache.cxf.staxutils,org.apache.cxf.helpers"/>
<p n="version" t="version" v="2.0.3.incubator"/>
</capability>
<capability name="package">
<p n="package" v="org.apache.cxf.jaxws.binding.http"/>
<p n="uses:" v="javax.xml.ws.http,org.apache.cxf.jaxws.binding,org.apache.cxf.service.model"/>
<p n="version" t="version" v="2.0.3.incubator"/>
</capability>
<capability name="package">
<p n="package" v="org.apache.cxf.databinding.source"/>
<p n="uses:" v="org.apache.cxf.common.logging,javax.xml.namespace,org.apache.cxf.common.i18n,org.apache.ws.commons.schema.extensions,javax.xml.transform,org.apache.cxf.common.util,javax.xml.validation,javax.xml.transform.stream,org.apache.cxf.service,javax.xml.stream,org.apache.cxf.databinding,org.xml.sax,org.apache.ws.commons.schema,javax.activation,org.w3c.dom,org.apache.cxf.service.model,org.apache.cxf.interceptor,javax.xml.transform.dom,javax.xml.transform.sax,org.apache.cxf.io,org.apache.cxf.staxutils,org.apache.cxf.helpers"/>
<p n="version" t="version" v="2.0.3.incubator"/>
</capability>
<capability name="package">
<p n="package" v="org.apache.cxf.tools.wsdlto.core"/>
<p n="uses:" v="org.apache.cxf.common.logging,org.apache.cxf.tools.common.model,javax.xml.namespace,org.apache.cxf.common.i18n,javax.xml.datatype,org.apache.cxf.tools.util,org.apache.cxf.version,org.apache.cxf.tools.common,org.apache.cxf.common.util,org.apache.cxf.tools.common.toolspec,org.apache.cxf,org.apache.cxf.tools.plugin,javax.xml.bind,org.apache.cxf.wsdl"/>
<p n="version" t="version" v="2.0.3.incubator"/>
</capability>
<capability name="package">
<p n="package" v="org.apache.cxf.ws.policy.selector"/>
<p n="uses:" v="org.apache.neethi,org.apache.cxf.ws.policy,org.apache.cxf.helpers"/>
<p n="version" t="version" v="2.0.3.incubator"/>
</capability>
<capability name="package">
<p n="package" v="org.apache.cxf.tools.validator"/>
<p n="uses:" v="javax.wsdl,org.apache.cxf.tools.common,org.apache.cxf.tools.validator.internal,org.apache.cxf.tools.common.toolspec,org.apache.cxf.common.i18n,org.apache.cxf,org.apache.cxf.service.model,org.apache.cxf.tools.common.toolspec.parser"/>
<p n="version" t="version" v="2.0.3.incubator"/>
</capability>
<capability name="package">
<p n="package" v="org.apache.cxf.binding.soap.saaj"/>
<p n="uses:" v="org.apache.cxf.headers,org.apache.cxf.databinding,javax.activation,javax.xml.namespace,org.apache.cxf.common.i18n,org.w3c.dom,org.apache.cxf.interceptor,javax.xml.transform,javax.xml.transform.dom,javax.xml.soap,org.apache.cxf.binding.soap,org.apache.cxf.message,org.apache.cxf.binding.soap.interceptor,org.apache.cxf,org.apache.cxf.staxutils,javax.xml.stream"/>
<p n="version" t="version" v="2.0.3.incubator"/>
</capability>
<capability name="package">
<p n="package" v="org.apache.cxf.tools.validator.internal"/>
<p n="uses:" v="javax.xml.stream.events,org.w3c.dom.ls,org.apache.cxf.tools.common.extensions.soap,org.apache.cxf.common.logging,javax.xml.namespace,org.apache.cxf.common.i18n,javax.xml.transform,org.apache.cxf.tools.common,org.apache.cxf.common.util,javax.xml.validation,javax.xml.parsers,org.apache.cxf.resource,javax.wsdl.extensions.mime,javax.xml.stream,javax.wsdl,org.xml.sax,org.apache.ws.commons.schema,org.w3c.dom,org.apache.cxf.service.model,javax.xml.xpath,org.apache.cxf.tools.util,javax.xml.transform.dom,org.apache.cxf.tools.validator,javax.xml.transform.sax,javax.wsdl.extensions,javax.jws.soap,org.apache.cxf,org.apache.cxf.tools.validator.internal.model,org.apache.cxf.wsdl11,org.apache.cxf.helpers"/>
<p n="version" t="version" v="2.0.3.incubator"/>
</capability>
<capability name="package">
<p n="package" v="org.apache.cxf.tools.java2wsdl.generator.wsdl11.model"/>
<p n="uses:" v="org.apache.cxf.tools.common.model,javax.xml.namespace"/>
<p n="version" t="version" v="2.0.3.incubator"/>
</capability>
<capability name="package">
<p n="package" v="org.apache.cxf.security.transport"/>
<p n="uses:" v="javax.net.ssl"/>
<p n="version" t="version" v="2.0.3.incubator"/>
</capability>
<capability name="package">
<p n="package" v="org.apache.cxf.feature"/>
<p n="uses:" v="org.apache.cxf.endpoint,org.apache.cxf,org.apache.cxf.interceptor"/>
<p n="version" t="version" v="2.0.3.incubator"/>
</capability>
<capability name="package">
<p n="package" v="org.apache.cxf.phase"/>
<p n="uses:" v="org.apache.cxf.message,org.apache.cxf.common.logging,org.apache.cxf.common.util,org.apache.cxf.extension,org.apache.cxf.transport,org.apache.cxf.interceptor,javax.xml.stream"/>
<p n="version" t="version" v="2.0.3.incubator"/>
</capability>
<capability name="package">
<p n="package" v="org.apache.cxf.binding.xml.wsdl11"/>
<p n="uses:" v="javax.wsdl,javax.wsdl.extensions,javax.wsdl.extensions.http,org.apache.cxf.tools.common,org.xmlsoap.schemas.wsdl.http,javax.xml.namespace,org.apache.cxf.bindings.xformat,org.apache.cxf.wsdl"/>
<p n="version" t="version" v="2.0.3.incubator"/>
</capability>
<capability name="package">
<p n="package" v="org.apache.cxf.attachment"/>
<p n="uses:" v="org.apache.cxf.message,javax.mail.internet,javax.activation,org.apache.cxf.io,javax.mail,org.apache.cxf.helpers"/>
<p n="version" t="version" v="2.0.3.incubator"/>
</capability>
<capability name="package">
<p n="package" v="org.apache.cxf.management.utils"/>
<p n="uses:" v="org.apache.cxf.common.logging,javax.management,javax.management.remote"/>
<p n="version" t="version" v="2.0.3.incubator"/>
</capability>
<capability name="package">
<p n="package" v="org.apache.cxf.binding"/>
<p n="uses:" v="javax.wsdl,org.apache.cxf.endpoint,javax.xml.namespace,org.apache.cxf.common.i18n,org.apache.cxf.service.model,org.apache.cxf.interceptor,org.apache.cxf.transport,org.apache.cxf.message,javax.wsdl.extensions,javax.annotation,org.apache.cxf,org.apache.cxf.configuration.spring,org.apache.cxf.service,org.apache.cxf.wsdl11,org.apache.cxf.helpers"/>
<p n="version" t="version" v="2.0.3.incubator"/>
</capability>
<capability name="package">
<p n="package" v="org.apache.cxf.binding.coloc.spring"/>
<p n="uses:" v="org.springframework.beans.factory.xml,org.w3c.dom,org.apache.cxf.binding.coloc.feature"/>
<p n="version" t="version" v="2.0.3.incubator"/>
</capability>
<capability name="package">
<p n="package" v="org.apache.cxf.ws.policy.attachment.reference"/>
<p n="uses:" v="org.apache.neethi,javax.wsdl.extensions,org.xml.sax,javax.xml.namespace,org.apache.cxf.ws.policy,org.apache.cxf.resource,org.w3c.dom,org.apache.cxf.service.model,org.apache.cxf.helpers"/>
<p n="version" t="version" v="2.0.3.incubator"/>
</capability>
<capability name="package">
<p n="package" v="org.apache.cxf.ws.addressing.v200408"/>
<p n="uses:" v="javax.xml.namespace,javax.xml.bind.annotation.adapters,javax.xml.bind,javax.xml.bind.annotation"/>
<p n="version" t="version" v="2.0.3.incubator"/>
</capability>
<capability name="package">
<p n="package" v="org.apache.cxf.tools.common.dom"/>
<p n="uses:" v="org.apache.cxf.common.logging,org.xml.sax,javax.xml.validation,javax.xml.parsers,org.w3c.dom,javax.xml.transform.stream,javax.xml.transform"/>
<p n="version" t="version" v="2.0.3.incubator"/>
</capability>
<capability name="package">
<p n="package" v="org.apache.cxf.common.commands"/>
<p n="uses:" v="org.apache.cxf.common.logging,org.apache.cxf.common.i18n"/>
<p n="version" t="version" v="2.0.3.incubator"/>
</capability>
<capability name="package">
<p n="package" v="org.apache.cxf.management.counters"/>
<p n="uses:" v="org.apache.cxf.common.logging,javax.management,org.apache.cxf.management.interceptor,org.apache.cxf.management,org.apache.cxf.message,javax.annotation,org.apache.cxf"/>
<p n="version" t="version" v="2.0.3.incubator"/>
</capability>
<capability name="package">
<p n="package" v="org.apache.cxf.binding.xml.interceptor"/>
<p n="uses:" v="org.apache.cxf.endpoint,org.apache.cxf.common.logging,javax.xml.namespace,org.w3c.dom,org.apache.cxf.common.i18n,org.apache.cxf.bindings.xformat,org.apache.cxf.binding.xml,org.apache.cxf.service.model,org.apache.cxf.transport,org.apache.cxf.interceptor,org.apache.cxf.message,org.apache.cxf.staxutils,javax.xml.stream,org.apache.cxf.helpers"/>
<p n="version" t="version" v="2.0.3.incubator"/>
</capability>
<capability name="package">
<p n="package" v="org.apache.cxf.binding.http"/>
<p n="uses:" v="org.apache.ws.commons.schema,javax.xml.namespace,org.w3c.dom,org.apache.cxf.common.i18n,org.apache.cxf.frontend,org.apache.cxf.binding.xml.interceptor,org.apache.cxf.binding.xml,org.apache.cxf.service.model,org.apache.cxf.interceptor,org.apache.cxf.service.factory,org.codehaus.jra,org.apache.cxf.message,org.apache.cxf.binding,org.apache.cxf.binding.http.strategy,org.apache.cxf.binding.http.interceptor,org.apache.cxf.service,org.apache.cxf.helpers"/>
<p n="version" t="version" v="2.0.3.incubator"/>
</capability>
<capability name="package">
<p n="package" v="org.apache.cxf.tools.wsdlto.frontend.jaxws.processor.internal.annotator"/>
<p n="uses:" v="javax.jws.soap,org.apache.cxf.common.util,org.apache.cxf.tools.common.model,javax.xml.namespace,org.apache.cxf.tools.util"/>
<p n="version" t="version" v="2.0.3.incubator"/>
</capability>
<capability name="package">
<p n="package" v="org.apache.cxf.tools.java2wsdl.generator"/>
<p n="uses:" v="org.apache.cxf.tools.common,org.apache.cxf,org.apache.cxf.service.model,org.apache.cxf.wsdl"/>
<p n="version" t="version" v="2.0.3.incubator"/>
</capability>
<capability name="package">
<p n="package" v="org.apache.cxf.management"/>
<p n="uses:" v="javax.management,javax.xml.namespace,javax.xml.bind,javax.xml.bind.annotation"/>
<p n="version" t="version" v="2.0.3.incubator"/>
</capability>
<capability name="package">
<p n="package" v="org.apache.cxf.configuration"/>
<p n="uses:" v="org.apache.cxf.common.i18n"/>
<p n="version" t="version" v="2.0.3.incubator"/>
</capability>
<capability name="package">
<p n="package" v="org.apache.cxf.clustering"/>
<p n="uses:" v="org.apache.cxf.common.logging,org.apache.cxf.endpoint,javax.xml.namespace,org.apache.cxf.service.model,org.apache.cxf.feature,org.apache.cxf.transport,org.apache.cxf.message,org.apache.cxf.binding,org.apache.cxf,org.apache.cxf.service,org.apache.cxf.helpers"/>
<p n="version" t="version" v="2.0.3.incubator"/>
</capability>
<capability name="package">
<p n="package" v="org.apache.cxf.transport.http_jetty.spring"/>
<p n="uses:" v="org.apache.cxf.transport.http_jetty,org.apache.cxf.configuration.jsse,javax.xml.namespace,org.w3c.dom,org.apache.cxf.configuration.security,org.apache.cxf.configuration.jsse.spring,org.springframework.beans.factory.support,org.springframework.beans.factory.config,org.springframework.beans.factory.xml,org.apache.cxf.common.util,org.springframework.beans,org.apache.cxf.configuration.spring,org.apache.cxf.transports.http_jetty.configuration,javax.xml.bind"/>
<p n="version" t="version" v="2.0.3.incubator"/>
</capability>
<capability name="package">
<p n="package" v="org.apache.cxf.tools.validator.internal.model"/>
<p n="uses:" v="org.apache.cxf.common.util,javax.xml.namespace,org.apache.cxf.wsdl,javax.xml.stream"/>
<p n="version" t="version" v="2.0.3.incubator"/>
</capability>
<capability name="package">
<p n="package" v="org.apache.cxf.jaxws.binding"/>
<p n="uses:" v="javax.xml.ws"/>
<p n="version" t="version" v="2.0.3.incubator"/>
</capability>
<capability name="package">
<p n="package" v="org.apache.cxf.xjc.ts"/>
<p n="uses:" v="com.sun.codemodel,com.sun.tools.xjc,org.apache.cxf.common.logging,org.xml.sax,org.apache.cxf.jaxb,com.sun.tools.xjc.outline"/>
<p n="version" t="version" v="2.0.3.incubator"/>
</capability>
<capability name="package">
<p n="package" v="org.apache.cxf.security"/>
<p n="version" t="version" v="2.0.3.incubator"/>
</capability>
<capability name="package">
<p n="package" v="org.apache.cxf.helpers"/>
<p n="uses:" v="org.w3c.dom.ls,org.apache.cxf.common.logging,javax.xml.namespace,javax.xml.transform,javax.wsdl.factory,javax.xml.parsers,javax.xml.transform.stream,javax.xml.ws,javax.wsdl,org.xml.sax,javax.wsdl.xml,org.w3c.dom,javax.xml.xpath,javax.xml.transform.dom,org.w3c.dom.bootstrap,javax.jws.soap,javax.jws"/>
<p n="version" t="version" v="2.0.3.incubator"/>
</capability>
<capability name="package">
<p n="package" v="org.apache.cxf.ws.rm.persistence"/>
<p n="uses:" v="org.apache.cxf.common.util,org.apache.cxf.ws.rm,org.apache.cxf.common.i18n,javax.xml.bind"/>
<p n="version" t="version" v="2.0.3.incubator"/>
</capability>
<capability name="package">
<p n="package" v="org.apache.cxf.common.i18n"/>
<p n="uses:" v="org.apache.cxf.common.util"/>
<p n="version" t="version" v="2.0.3.incubator"/>
</capability>
<capability name="package">
<p n="package" v="org.apache.cxf.service.factory"/>
<p n="uses:" v="org.apache.cxf.common.logging,javax.xml.namespace,org.apache.cxf.service.invoker,org.apache.cxf.frontend,org.apache.cxf.common.i18n,org.apache.cxf.message,org.apache.cxf.binding,org.apache.cxf.common.util,org.apache.cxf.jaxb,javax.xml.ws,org.apache.ws.commons.schema.constants,org.apache.cxf.service,org.apache.cxf.databinding,org.apache.cxf.endpoint,org.apache.ws.commons.schema,org.apache.cxf.service.model,org.apache.cxf.interceptor,org.apache.cxf.common.util.factory,org.apache.ws.commons.schema.utils,org.apache.cxf,org.apache.cxf.wsdl11,org.apache.cxf.helpers"/>
<p n="version" t="version" v="2.0.3.incubator"/>
</capability>
<capability name="package">
<p n="package" v="org.apache.cxf.tools.wsdlto.frontend.jaxws.processor.internal.mapper"/>
<p n="uses:" v="javax.wsdl,org.apache.cxf.tools.common.model,javax.xml.namespace,org.apache.cxf.service.model,org.apache.cxf.tools.util,javax.jws.soap,org.apache.cxf.tools.common,org.apache.cxf.jaxb,javax.xml.ws,org.apache.cxf.tools.wsdlto.frontend.jaxws.processor.internal,org.apache.cxf.tools.wsdlto.frontend.jaxws.customization"/>
<p n="version" t="version" v="2.0.3.incubator"/>
</capability>
<capability name="package">
<p n="package" v="org.apache.cxf.ws.rm.manager"/>
<p n="uses:" v="javax.xml.namespace,org.apache.cxf.jaxb,javax.xml.bind,javax.xml.bind.annotation,javax.xml.datatype"/>
<p n="version" t="version" v="2.0.3.incubator"/>
</capability>
<capability name="package">
<p n="package" v="org.apache.cxf.ws.policy"/>
<p n="uses:" v="org.apache.cxf.common.logging,javax.xml.namespace,org.apache.cxf.common.i18n,org.apache.cxf.ws.policy.builder.primitive,org.apache.cxf.feature,org.apache.cxf.extension,org.apache.cxf.phase,org.apache.neethi,org.apache.cxf.message,javax.xml.parsers,org.apache.cxf.service,org.apache.cxf.ws.policy.attachment.reference,org.apache.cxf.endpoint,org.xml.sax,org.w3c.dom,org.springframework.context,org.apache.cxf.service.model,org.apache.cxf.interceptor,org.apache.cxf.transport,org.apache.cxf.ws.policy.selector,javax.annotation,org.apache.cxf,org.springframework.beans,org.apache.cxf.configuration.spring,org.apache.cxf.helpers"/>
<p n="version" t="version" v="2.0.3.incubator"/>
</capability>
<capability name="package">
<p n="package" v="org.apache.cxf.transport.http"/>
<p n="uses:" v="org.apache.cxf.transport.http.policy,javax.servlet.http,org.apache.cxf.configuration.jsse,javax.wsdl.extensions.soap,org.apache.cxf.common.logging,org.apache.cxf.catalog,javax.xml.namespace,org.apache.cxf.common.i18n,org.apache.cxf.configuration.security,org.apache.cxf.message,javax.servlet,javax.wsdl.factory,org.xmlsoap.schemas.wsdl.http,org.apache.cxf.common.util,javax.xml.parsers,org.apache.cxf.transport.https,javax.wsdl.extensions.schema,org.apache.cxf.ws.policy,org.apache.cxf.ws.addressing,org.apache.cxf.service,org.apache.cxf.wsdl,org.apache.cxf.transports.http,javax.wsdl,javax.wsdl.xml,org.xml.sax,org.w3c.dom,org.apache.cxf.service.model,org.apache.cxf.transport,org.apache.cxf.configuration,javax.wsdl.extensions,javax.wsdl.extensions.http,org.apache.xml.resolver,javax.annotation,org.apache.cxf.io,org.apache.cxf,org.apache.cxf.transports.http.configuration,org.apache.cxf.wsdl11,javax.net.ssl,org.apache.cxf.helpers"/>
<p n="version" t="version" v="2.0.3.incubator"/>
</capability>
<capability name="package">
<p n="package" v="org.apache.cxf.binding.http.interceptor"/>
<p n="uses:" v="org.apache.cxf.common.logging,org.apache.cxf.endpoint,org.apache.ws.commons.schema,javax.xml.namespace,org.apache.cxf.common.i18n,org.w3c.dom,org.apache.cxf.binding.xml.interceptor,org.apache.cxf.service.model,org.apache.cxf.binding.http,org.apache.cxf.interceptor,org.apache.cxf.phase,javax.xml.transform,javax.xml.transform.dom,org.apache.cxf.message,org.apache.cxf.service,org.apache.cxf.staxutils,javax.xml.stream,org.apache.cxf.helpers"/>
<p n="version" t="version" v="2.0.3.incubator"/>
</capability>
<capability name="package">
<p n="package" v="org.apache.cxf.ws.policy.attachment.wsdl11"/>
<p n="uses:" v="javax.wsdl,org.apache.cxf.ws.policy.attachment,javax.xml.namespace,org.w3c.dom,org.apache.cxf.service.model,org.apache.neethi,javax.wsdl.extensions,org.apache.cxf.ws.policy,org.apache.cxf,org.apache.cxf.wsdl11,org.apache.cxf.ws.policy.attachment.reference,org.apache.cxf.helpers"/>
<p n="version" t="version" v="2.0.3.incubator"/>
</capability>
<capability name="package">
<p n="package" v="org.apache.cxf.ws.policy.builder.xml"/>
<p n="uses:" v="org.apache.neethi,org.apache.cxf.ws.policy,org.w3c.dom,org.apache.cxf.ws.policy.builder.primitive"/>
<p n="version" t="version" v="2.0.3.incubator"/>
</capability>
<capability name="package">
<p n="package" v="org.apache.cxf.binding.object"/>
<p n="uses:" v="org.apache.cxf.endpoint,org.apache.cxf.common.logging,javax.xml.namespace,org.apache.cxf.transport.local,org.apache.cxf.common.i18n,org.apache.cxf.service.model,org.apache.cxf.phase,org.apache.cxf.transport,org.apache.cxf.interceptor,org.apache.cxf.message,org.apache.cxf.binding,javax.annotation,org.apache.cxf,org.apache.cxf.service"/>
<p n="version" t="version" v="2.0.3.incubator"/>
</capability>
<capability name="package">
<p n="package" v="org.apache.cxf.buslifecycle"/>
<p n="uses:" v="javax.annotation,org.apache.cxf"/>
<p n="version" t="version" v="2.0.3.incubator"/>
</capability>
<capability name="package">
<p n="package" v="org.apache.cxf.management.interceptor"/>
<p n="uses:" v="org.apache.cxf.endpoint,org.apache.cxf.common.logging,javax.management,javax.xml.namespace,org.apache.cxf.management.counters,org.apache.cxf.feature,org.apache.cxf.service.model,org.apache.cxf.interceptor,org.apache.cxf.phase,org.apache.cxf.message,org.apache.cxf,org.apache.cxf.service"/>
<p n="version" t="version" v="2.0.3.incubator"/>
</capability>
<capability name="package">
<p n="package" v="org.apache.cxf.tools.misc"/>
<p n="uses:" v="org.apache.cxf.tools.common,org.apache.cxf.tools.common.toolspec,org.apache.cxf.common.i18n,org.apache.cxf.tools.misc.processor,org.apache.cxf.tools.common.toolspec.parser"/>
<p n="version" t="version" v="2.0.3.incubator"/>
</capability>
<capability name="package">
<p n="package" v="org.apache.cxf.jaxws.handler.soap"/>
<p n="uses:" v="javax.xml.ws.handler,javax.xml.ws.handler.soap,javax.xml.namespace,org.apache.cxf.jaxws.context,javax.xml.transform,org.apache.cxf.message,org.apache.cxf.jaxws.support,org.apache.cxf.binding,org.apache.cxf.binding.soap.interceptor,javax.xml.ws,javax.xml.stream,javax.xml.ws.soap,org.apache.cxf.endpoint,org.w3c.dom,org.apache.cxf.interceptor,org.apache.cxf.transport,javax.xml.transform.dom,javax.xml.soap,org.apache.cxf.binding.soap,org.apache.cxf.binding.soap.saaj,org.apache.cxf.jaxws.handler,javax.xml.bind,org.apache.cxf.staxutils,org.apache.cxf.helpers"/>
<p n="version" t="version" v="2.0.3.incubator"/>
</capability>
<capability name="package">
<p n="package" v="org.apache.cxf.common.classloader"/>
<p n="version" t="version" v="2.0.3.incubator"/>
</capability>
<capability name="package">
<p n="package" v="org.apache.cxf.ws.policy.util"/>
<p n="uses:" v="org.apache.neethi"/>
<p n="version" t="version" v="2.0.3.incubator"/>
</capability>
<capability name="package">
<p n="package" v="org.apache.cxf.configuration.spring"/>
<p n="uses:" v="org.apache.cxf.common.logging,javax.xml.namespace,org.w3c.dom,org.apache.cxf.extension,org.springframework.context,org.apache.cxf.bus.spring,org.springframework.beans.factory.support,org.apache.cxf.configuration,org.springframework.beans.factory.config,org.springframework.core.io,org.springframework.beans.factory.xml,org.springframework.beans.factory.wiring,org.springframework.beans,org.springframework.util,javax.xml.bind,org.springframework.beans.factory,org.apache.cxf.helpers"/>
<p n="version" t="version" v="2.0.3.incubator"/>
</capability>
<capability name="package">
<p n="package" v="org.apache.cxf.wsdl11"/>
<p n="uses:" v="javax.wsdl.extensions.soap,com.ibm.wsdl.extensions.soap,org.apache.cxf.common.logging,org.apache.cxf.catalog,javax.xml.namespace,org.apache.cxf.common.i18n,javax.wsdl.extensions.soap12,javax.xml.transform,org.apache.ws.commons.schema.extensions,org.apache.cxf.service.factory,javax.wsdl.factory,org.apache.cxf.binding,org.apache.cxf.common.util,javax.xml.parsers,javax.wsdl.extensions.schema,org.apache.cxf.resource,javax.wsdl.extensions.mime,javax.xml.transform.stream,org.apache.cxf.service,org.apache.cxf.wsdl,javax.wsdl,org.xml.sax,javax.wsdl.xml,org.apache.ws.commons.schema,org.w3c.dom,org.apache.cxf.service.model,org.apache.cxf.transport,javax.xml.xpath,javax.xml.transform.dom,org.apache.ws.commons.schema.resolver,javax.wsdl.extensions,org.apache.ws.commons.schema.utils,javax.annotation,org.apache.xml.resolver,org.apache.cxf,javax.xml.bind,com.ibm.wsdl.extensions.schema,org.apache.cxf.helpers"/>
<p n="version" t="version" v="2.0.3.incubator"/>
</capability>
<capability name="package">
<p n="package" v="org.apache.cxf.jaxws.javaee"/>
<p n="uses:" v="javax.xml.namespace,javax.xml.bind.annotation.adapters,javax.xml.bind,javax.xml.bind.annotation"/>
<p n="version" t="version" v="2.0.3.incubator"/>
</capability>
<capability name="package">
<p n="package" v="org.apache.cxf.tools.common.model"/>
<p n="uses:" v="javax.wsdl,org.apache.cxf.common.logging,javax.xml.namespace,org.w3c.dom,org.apache.cxf.common.i18n,org.apache.cxf.tools.util,javax.jws.soap,org.apache.cxf.tools.common,org.apache.cxf.common.util"/>
<p n="version" t="version" v="2.0.3.incubator"/>
</capability>
<capability name="package">
<p n="package" v="org.apache.cxf.jaxws.context"/>
<p n="uses:" v="javax.xml.ws.handler,org.apache.cxf.message,org.apache.cxf.resource,javax.xml.ws,org.apache.cxf.security,org.apache.cxf.helpers"/>
<p n="version" t="version" v="2.0.3.incubator"/>
</capability>
<capability name="package">
<p n="package" v="org.apache.cxf.aegis.databinding"/>
<p n="uses:" v="org.apache.cxf.common.logging,javax.xml.namespace,org.apache.cxf.frontend,org.apache.cxf.common.i18n,org.apache.cxf.aegis,org.apache.cxf.service.factory,org.apache.cxf.aegis.util,javax.xml.validation,org.apache.cxf.service,javax.xml.stream,org.apache.cxf.aegis.type.basic,org.apache.cxf.databinding,org.apache.cxf.endpoint,org.apache.ws.commons.schema,org.w3c.dom,org.apache.cxf.aegis.xml.stax,org.jdom,org.apache.cxf.service.model,org.apache.cxf.databinding.source,org.apache.cxf.interceptor,org.apache.cxf.common.classloader,org.apache.cxf.aegis.xml,org.apache.cxf.aegis.type,org.apache.ws.commons.schema.utils,org.apache.cxf.staxutils,org.jdom.output,org.apache.cxf.helpers"/>
<p n="version" t="version" v="2.0.3.incubator"/>
</capability>
<capability name="package">
<p n="package" v="org.apache.cxf.extension"/>
<p n="version" t="version" v="2.0.3.incubator"/>
</capability>
<capability name="package">
<p n="package" v="org.apache.cxf.ws.addressing.spring"/>
<p n="uses:" v="org.springframework.beans.factory.xml,org.w3c.dom,org.apache.cxf.ws.addressing"/>
<p n="version" t="version" v="2.0.3.incubator"/>
</capability>
<capability name="package">
<p n="package" v="org.apache.cxf.transport.https_jetty"/>
<p n="uses:" v="org.apache.cxf.transport.http_jetty,org.apache.cxf.configuration.jsse,org.apache.cxf.common.logging,org.apache.cxf.transport.https,org.mortbay.jetty,org.apache.cxf.configuration.security,javax.net.ssl,org.mortbay.jetty.security"/>
<p n="version" t="version" v="2.0.3.incubator"/>
</capability>
<capability name="package">
<p n="package" v="org.apache.cxf.ws.policy.v200607"/>
<p n="uses:" v="javax.xml.namespace,javax.xml.bind,javax.xml.bind.annotation"/>
<p n="version" t="version" v="2.0.3.incubator"/>
</capability>
<capability name="package">
<p n="package" v="org.apache.cxf.message"/>
<p n="uses:" v="org.apache.cxf.endpoint,javax.activation,org.w3c.dom,org.apache.cxf.service.model,org.apache.cxf.service,org.apache.cxf.interceptor,org.apache.cxf.transport,org.apache.cxf.helpers"/>
<p n="version" t="version" v="2.0.3.incubator"/>
</capability>
<capability name="package">
<p n="package" v="org.apache.cxf.tools.common.toolspec"/>
<p n="uses:" v="org.apache.cxf.common.logging,org.apache.cxf.catalog,org.apache.cxf.tools.common.dom,javax.xml.namespace,org.w3c.dom,org.apache.cxf.common.i18n,javax.xml.xpath,org.apache.cxf.tools.util,javax.xml.transform,org.apache.cxf.tools.common.toolspec.parser,javax.xml.transform.dom,org.apache.cxf.tools.common,org.apache.cxf.common.util,org.apache.cxf,javax.xml.transform.stream,org.apache.cxf.helpers"/>
<p n="version" t="version" v="2.0.3.incubator"/>
</capability>
<capability name="package">
<p n="package" v="org.apache.cxf.aegis.xml.jdom"/>
<p n="uses:" v="org.apache.cxf.aegis.util,org.apache.cxf.aegis.xml,javax.xml.namespace,org.apache.cxf.aegis.xml.stax,org.apache.cxf.aegis.util.stax,org.jdom,javax.xml.stream"/>
<p n="version" t="version" v="2.0.3.incubator"/>
</capability>
<capability name="package">
<p n="package" v="org.apache.cxf.tools.misc.processor.address"/>
<p n="uses:" v="org.apache.cxf.common.logging,org.apache.cxf.tools.common,org.apache.cxf.common.i18n,org.apache.cxf.tools.util"/>
<p n="version" t="version" v="2.0.3.incubator"/>
</capability>
<capability name="package">
<p n="package" v="org.apache.cxf.tools.java2wsdl"/>
<p n="uses:" v="org.apache.cxf.tools.common,org.apache.cxf.tools.java2wsdl.processor,org.apache.cxf.common.util,org.apache.cxf.tools.common.toolspec,org.apache.cxf.common.i18n,org.apache.cxf.tools.util,org.apache.cxf.tools.common.toolspec.parser"/>
<p n="version" t="version" v="2.0.3.incubator"/>
</capability>
<capability name="package">
<p n="package" v="org.apache.cxf.ws.policy.attachment"/>
<p n="uses:" v="org.apache.neethi,javax.annotation,org.apache.cxf.ws.policy,org.apache.cxf,org.apache.cxf.common.i18n,org.apache.cxf.service.model,org.apache.cxf.ws.policy.attachment.reference"/>
<p n="version" t="version" v="2.0.3.incubator"/>
</capability>
<capability name="package">
<p n="package" v="org.apache.cxf.management.jmx"/>
<p n="uses:" v="org.apache.cxf.buslifecycle,org.apache.cxf.bus,org.apache.cxf.common.logging,javax.management,javax.management.remote,org.apache.cxf.management,org.apache.cxf.management.jmx.export.runtime,javax.annotation,org.apache.cxf,javax.management.modelmbean"/>
<p n="version" t="version" v="2.0.3.incubator"/>
</capability>
<capability name="package">
<p n="package" v="org.apache.cxf.test"/>
<p n="uses:" v="javax.xml.namespace,org.apache.cxf.bus.spring,org.springframework.context.support,javax.xml.transform,org.apache.cxf.message,javax.wsdl.factory,org.apache.cxf.service,javax.wsdl,org.xml.sax,org.apache.cxf.endpoint,javax.wsdl.xml,org.junit,org.w3c.dom,org.apache.cxf.service.model,org.apache.cxf.transport,javax.xml.xpath,org.springframework.beans.factory.xml,org.apache.cxf,org.springframework.beans,junit.framework,org.apache.cxf.wsdl11,org.apache.cxf.helpers"/>
<p n="version" t="version" v="2.0.3.incubator"/>
</capability>
<capability name="package">
<p n="package" v="org.apache.cxf.binding.soap.model"/>
<p n="uses:" v="org.apache.cxf.binding.soap,javax.xml.namespace,org.apache.cxf.service.model"/>
<p n="version" t="version" v="2.0.3.incubator"/>
</capability>
<capability name="package">
<p n="package" v="org.apache.cxf.aegis.type.xml"/>
<p n="uses:" v="org.xml.sax,javanet.staxutils,org.w3c.dom,org.apache.cxf.aegis.xml.stax,org.apache.cxf.aegis,org.jdom,javax.xml.transform,javax.xml.transform.dom,javax.xml.transform.sax,org.apache.cxf.aegis.xml,org.apache.cxf.aegis.type,org.xml.sax.helpers,javax.xml.parsers,org.apache.cxf.aegis.util.jdom,javax.xml.transform.stream,org.apache.cxf.aegis.util.stax,org.apache.cxf.staxutils,javax.xml.stream"/>
<p n="version" t="version" v="2.0.3.incubator"/>
</capability>
<capability name="package">
<p n="package" v="org.apache.cxf.aegis.xml"/>
<p n="uses:" v="javax.xml.namespace,org.apache.cxf.aegis,javax.xml.stream"/>
<p n="version" t="version" v="2.0.3.incubator"/>
</capability>
<capability name="package">
<p n="package" v="org.apache.cxf.tools.java2wsdl.processor.internal"/>
<p n="uses:" v="org.apache.cxf.tools.java2wsdl.processor,org.apache.cxf.tools.common,org.apache.cxf.service"/>
<p n="version" t="version" v="2.0.3.incubator"/>
</capability>
<capability name="package">
<p n="package" v="org.apache.cxf.aegis.type"/>
<p n="uses:" v="org.jdom.xpath,javax.xml.namespace,org.apache.cxf.aegis,javax.xml.transform,org.apache.cxf.aegis.util,javax.xml.validation,javax.xml.parsers,org.apache.cxf.aegis.type.mtom,org.apache.cxf.aegis.type.java5,javax.xml.transform.stream,javax.xml.ws,javax.xml.stream,org.apache.cxf.aegis.type.basic,org.xml.sax,javax.activation,org.w3c.dom,org.apache.commons.logging,org.jdom,org.apache.cxf.aegis.type.xml,org.apache.cxf.binding.soap,org.jdom.input,org.apache.cxf.common.classloader,org.apache.cxf.aegis.xml,org.apache.cxf.aegis.type.collection"/>
<p n="version" t="version" v="2.0.3.incubator"/>
</capability>
<capability name="package">
<p n="package" v="org.apache.cxf.bus.resource"/>
<p n="uses:" v="javax.annotation,org.apache.cxf.resource,org.apache.cxf,org.apache.cxf.extension"/>
<p n="version" t="version" v="2.0.3.incubator"/>
</capability>
<capability name="package">
<p n="package" v="org.apache.cxf.ws.policy.builder.jaxb"/>
<p n="uses:" v="org.apache.cxf.common.logging,javax.xml.namespace,org.w3c.dom,org.apache.cxf.ws.policy.builder.primitive,org.apache.neethi,org.apache.cxf.common.classloader,org.apache.cxf.common.util,org.apache.cxf.ws.policy,org.apache.cxf.jaxb,javax.xml.bind"/>
<p n="version" t="version" v="2.0.3.incubator"/>
</capability>
<capability name="package">
<p n="package" v="org.apache.cxf.tools.plugin"/>
<p n="uses:" v="javax.xml.namespace,javax.xml.bind,javax.xml.bind.annotation"/>
<p n="version" t="version" v="2.0.3.incubator"/>
</capability>
<capability name="package">
<p n="package" v="org.apache.cxf.service.invoker"/>
<p n="uses:" v="org.apache.cxf.common.logging,javax.xml.namespace,org.apache.cxf.frontend,org.apache.cxf.common.i18n,org.apache.cxf.service.model,org.apache.cxf.transport,org.apache.cxf.interceptor,org.apache.cxf.common.util.factory,org.apache.cxf.message,org.apache.cxf.service,org.apache.cxf.helpers"/>
<p n="version" t="version" v="2.0.3.incubator"/>
</capability>
<capability name="package">
<p n="package" v="org.apache.cxf.tools.wsdlto.frontend.jaxws.template"/>
<p n="version" t="version" v="2.0.3.incubator"/>
</capability>
<capability name="package">
<p n="package" v="org.apache.cxf.tools.wsdlto.databinding.jaxb"/>
<p n="uses:" v="org.apache.cxf.common.logging,org.apache.cxf.tools.common.model,javax.xml.namespace,org.apache.cxf.common.i18n,com.sun.tools.xjc.api,javax.xml.transform,org.apache.cxf.tools.common,javax.xml.validation,org.apache.cxf.common.util,javax.xml.parsers,com.sun.tools.xjc.api.impl.s2j,com.sun.codemodel,com.sun.tools.xjc,org.xml.sax,org.w3c.dom,org.apache.cxf.tools.util,org.apache.cxf.tools.wsdlto.core,javax.xml.transform.dom,org.apache.cxf.helpers"/>
<p n="version" t="version" v="2.0.3.incubator"/>
</capability>
<capability name="package">
<p n="package" v="org.apache.cxf.binding.xml"/>
<p n="uses:" v="javax.xml.namespace,org.w3c.dom,org.apache.cxf.common.i18n,org.apache.cxf.binding.xml.interceptor,org.apache.cxf.bindings.xformat,org.apache.cxf.service.model,org.apache.cxf.interceptor,org.apache.cxf.message,org.apache.cxf.tools.validator,javax.wsdl.extensions,org.apache.cxf.binding"/>
<p n="version" t="version" v="2.0.3.incubator"/>
</capability>
<capability name="package">
<p n="package" v="org.apache.cxf.configuration.security"/>
<p n="uses:" v="javax.xml.namespace,javax.xml.bind,javax.xml.bind.annotation"/>
<p n="version" t="version" v="2.0.3.incubator"/>
</capability>
<capability name="package">
<p n="package" v="org.apache.cxf.bus.spring"/>
<p n="uses:" v="org.apache.cxf.bus,org.apache.cxf.common.logging,org.apache.cxf.feature,org.apache.cxf.extension,org.springframework.context.support,org.springframework.core.io,org.apache.cxf.common.util,org.apache.cxf.resource,org.springframework.beans.factory,org.apache.cxf.buslifecycle,org.springframework.core.io.support,org.xml.sax,org.springframework.core,org.w3c.dom,org.springframework.context,org.springframework.beans.factory.support,org.springframework.beans.factory.config,org.springframework.beans.factory.xml,org.apache.cxf,org.apache.cxf.common.injection,org.springframework.beans,org.apache.cxf.configuration.spring,org.apache.cxf.helpers"/>
<p n="version" t="version" v="2.0.3.incubator"/>
</capability>
<capability name="package">
<p n="package" v="org.apache.cxf.tools.java2wsdl.processor.internal.jaxws"/>
<p n="uses:" v="org.apache.cxf.common.logging,org.apache.cxf.tools.common.model,javax.xml.namespace,org.apache.cxf.tools.java2wsdl.generator.wsdl11.model,org.apache.cxf.common.i18n,org.apache.cxf.service.model,org.apache.cxf.tools.util,org.apache.cxf.tools.java2wsdl.generator.wsdl11.annotator,org.apache.cxf.tools.common,org.apache.cxf.common.util,javax.jws,javax.xml.ws"/>
<p n="version" t="version" v="2.0.3.incubator"/>
</capability>
<capability name="package">
<p n="package" v="org.apache.cxf.management.annotation"/>
<p n="version" t="version" v="2.0.3.incubator"/>
</capability>
<capability name="package">
<p n="package" v="org.apache.cxf.ws.policy.mtom"/>
<p n="uses:" v="org.apache.neethi,org.apache.cxf.message,javax.xml.namespace,org.apache.cxf.ws.policy,org.w3c.dom,org.apache.cxf,org.apache.cxf.ws.policy.builder.primitive,org.apache.cxf.interceptor,org.apache.cxf.phase"/>
<p n="version" t="version" v="2.0.3.incubator"/>
</capability>
<capability name="package">
<p n="package" v="org.apache.cxf.jaxws.support"/>
<p n="uses:" v="javax.xml.ws.handler,org.apache.cxf.headers,org.apache.cxf.common.logging,org.apache.cxf.jaxws,org.apache.cxf.service.invoker,javax.xml.namespace,org.apache.cxf.frontend,org.apache.cxf.common.i18n,org.apache.cxf.jaxws.context,org.apache.cxf.jaxws.binding.soap,org.apache.cxf.binding.xml,org.apache.cxf.configuration.security,javax.xml.transform,org.apache.cxf.service.factory,org.apache.cxf.message,org.apache.cxf.binding,org.apache.cxf.common.util,org.apache.cxf.jaxb,javax.xml.ws,org.apache.cxf.jaxws.handler.logical,org.apache.cxf.service,javax.wsdl,org.apache.cxf.databinding,org.apache.cxf.endpoint,javax.activation,org.apache.cxf.jaxws.handler.soap,org.apache.cxf.jaxws.interceptors,org.apache.cxf.jaxws.binding.http,org.apache.cxf.databinding.source,org.apache.cxf.service.model,org.apache.cxf.tools.util,org.apache.cxf.interceptor,javax.xml.soap,org.apache.cxf.binding.soap,org.apache.cxf.common.classloader,javax.jws.soap,javax.jws,org.apache.cxf,org.apache.cxf.jaxws.binding,org.apache.cxf.wsdl11,org.apache.cxf.helpers"/>
<p n="version" t="version" v="2.0.3.incubator"/>
</capability>
<capability name="package">
<p n="package" v="org.apache.cxf.tools.java2wsdl.generator.wsdl11.annotator"/>
<p n="uses:" v="org.apache.cxf.tools.common.model,javax.xml.namespace,org.apache.cxf.tools.java2wsdl.generator.wsdl11.model"/>
<p n="version" t="version" v="2.0.3.incubator"/>
</capability>
<capability name="package">
<p n="package" v="org.apache.cxf.aegis.util"/>
<p n="uses:" v="javax.xml.namespace,org.jdom,org.apache.cxf.aegis,javax.xml.stream,org.apache.cxf.helpers"/>
<p n="version" t="version" v="2.0.3.incubator"/>
</capability>
<capability name="package">
<p n="package" v="org.apache.cxf.binding.soap.wsdl11"/>
<p n="uses:" v="javax.wsdl,javax.wsdl.extensions,org.apache.cxf.tools.common.extensions.soap,org.apache.cxf.tools.util,org.apache.cxf.wsdl"/>
<p n="version" t="version" v="2.0.3.incubator"/>
</capability>
<capability name="package">
<p n="package" v="org.apache.cxf.jaxb"/>
<p n="uses:" v="com.sun.xml.bind.v2,javax.xml.bind.attachment,org.apache.cxf.common.logging,org.apache.cxf.jaxb.attachment,javax.xml.namespace,javax.xml.bind.annotation.adapters,org.apache.cxf.common.i18n,javax.xml.datatype,javax.xml.transform,org.apache.cxf.service.factory,org.apache.cxf.jaxb.io,javax.xml.validation,org.apache.cxf.common.util,org.apache.cxf.ws.addressing,javax.xml.ws,org.apache.cxf.service,javax.xml.stream,org.apache.cxf.databinding,org.apache.ws.commons.schema,org.apache.commons.lang.builder,org.w3c.dom,javax.xml.bind.annotation,org.apache.cxf.service.model,org.apache.cxf.databinding.source,org.apache.cxf.interceptor,org.apache.commons.lang,javax.xml.transform.dom,org.apache.ws.commons.schema.utils,com.sun.xml.bind.v2.runtime,javax.xml.bind,org.apache.cxf.staxutils,org.apache.cxf.helpers"/>
<p n="version" t="version" v="2.0.3.incubator"/>
</capability>
<capability name="package">
<p n="package" v="org.apache.cxf.workqueue"/>
<p n="uses:" v="org.apache.cxf.management.annotation,org.apache.cxf.common.logging,javax.management,javax.annotation,org.apache.cxf,org.apache.cxf.management"/>
<p n="version" t="version" v="2.0.3.incubator"/>
</capability>
<capability name="package">
<p n="package" v="org.apache.cxf.ws.rm.feature"/>
<p n="uses:" v="org.apache.cxf.ws.rm.soap,org.apache.cxf.ws.rm,org.apache.cxf.ws.rm.manager,org.apache.cxf,org.apache.cxf.ws.rm.persistence,org.apache.cxf.ws.rm.policy,org.apache.cxf.feature,org.apache.cxf.interceptor"/>
<p n="version" t="version" v="2.0.3.incubator"/>
</capability>
<capability name="package">
<p n="package" v="org.apache.cxf.transport.jms.spring"/>
<p n="uses:" v="org.springframework.beans.factory.support,org.springframework.beans.factory.xml,javax.xml.namespace,org.apache.cxf.transport.jms,org.w3c.dom,org.apache.cxf.configuration.spring"/>
<p n="version" t="version" v="2.0.3.incubator"/>
</capability>
<capability name="package">
<p n="package" v="org.apache.cxf.aegis.xml.stax"/>
<p n="uses:" v="org.apache.cxf.aegis.util,org.apache.cxf.aegis.xml,org.apache.cxf.common.util,javax.xml.namespace,org.apache.cxf.aegis,org.apache.cxf.staxutils,javax.xml.stream"/>
<p n="version" t="version" v="2.0.3.incubator"/>
</capability>
<capability name="package">
<p n="package" v="org.apache.cxf.tools.wsdlto.frontend.jaxws.validator"/>
<p n="uses:" v="org.apache.cxf.tools.validator,org.apache.cxf.common.logging,org.apache.cxf.tools.common,javax.xml.namespace,org.apache.cxf.common.i18n,org.apache.cxf.service.model,org.apache.cxf.tools.wsdlto.frontend.jaxws.processor.internal"/>
<p n="version" t="version" v="2.0.3.incubator"/>
</capability>
<capability name="package">
<p n="package" v="org.apache.cxf.tools.wsdlto.frontend.jaxws.wsdl11"/>
<p n="uses:" v="org.apache.cxf.tools.common.extensions.soap,org.apache.cxf.common.logging,org.apache.cxf.tools.validator.internal,org.apache.cxf.catalog,javax.xml.namespace,org.apache.cxf.common.i18n,org.apache.cxf.tools.common,org.apache.cxf.resource,org.apache.cxf.tools.wsdlto.frontend.jaxws.customization,javax.wsdl,org.xml.sax,javax.wsdl.xml,org.w3c.dom,org.apache.cxf.tools.util,org.apache.cxf.tools.wsdlto.core,javax.wsdl.extensions,javax.jws.soap,org.apache.xml.resolver,org.apache.cxf,org.apache.cxf.wsdl11,org.apache.cxf.helpers"/>
<p n="version" t="version" v="2.0.3.incubator"/>
</capability>
<capability name="package">
<p n="package" v="org.apache.cxf.xjc.dv"/>
<p n="uses:" v="com.sun.codemodel,com.sun.tools.xjc,com.sun.tools.xjc.model,org.xml.sax,com.sun.xml.xsom,org.apache.cxf.common.logging,javax.xml.namespace,javax.xml.bind.annotation.adapters,com.sun.tools.xjc.outline,com.sun.tools.xjc.util,org.apache.cxf.jaxb,javax.xml.bind"/>
<p n="version" t="version" v="2.0.3.incubator"/>
</capability>
<capability name="package">
<p n="package" v="org.apache.cxf.transport.http.spring"/>
<p n="uses:" v="javax.xml.namespace,org.w3c.dom,org.apache.cxf.configuration.security,org.apache.cxf.configuration.jsse.spring,org.springframework.beans.factory.support,org.apache.cxf.common.classloader,org.springframework.beans.factory.xml,org.apache.cxf.transport.http,org.apache.cxf.configuration.spring,org.apache.cxf.transports.http.configuration,javax.xml.bind"/>
<p n="version" t="version" v="2.0.3.incubator"/>
</capability>
<capability name="package">
<p n="package" v="org.apache.cxf.binding.coloc"/>
<p n="uses:" v="org.apache.cxf.common.logging,org.apache.cxf.endpoint,javax.xml.namespace,org.apache.cxf.common.i18n,org.apache.cxf.service.model,org.apache.cxf.interceptor,org.apache.cxf.phase,org.apache.cxf.transport,org.apache.cxf.message,org.apache.cxf.binding,org.apache.cxf,javax.xml.ws,org.apache.cxf.service"/>
<p n="version" t="version" v="2.0.3.incubator"/>
</capability>
<capability name="package">
<p n="package" v="org.apache.cxf.bus"/>
<p n="uses:" v="org.apache.cxf.management.annotation,org.apache.cxf.buslifecycle,javax.management,org.apache.cxf,org.apache.cxf.bus.extension,org.apache.cxf.feature,org.apache.cxf.interceptor,org.apache.cxf.management"/>
<p n="version" t="version" v="2.0.3.incubator"/>
</capability>
<capability name="package">
<p n="package" v="org.apache.cxf.ws.addressing.policy"/>
<p n="uses:" v="org.apache.neethi,javax.xml.namespace,org.apache.cxf.ws.addressing.soap,org.apache.cxf.ws.policy,org.w3c.dom,org.apache.cxf,org.apache.cxf.ws.addressing,org.apache.cxf.ws.policy.builder.primitive,org.apache.cxf.interceptor"/>
<p n="version" t="version" v="2.0.3.incubator"/>
</capability>
<capability name="package">
<p n="package" v="org.apache.cxf.tools.wsdlto.frontend.jaxws"/>
<p n="uses:" v="org.apache.cxf.tools.common,org.apache.cxf.tools.common.toolspec,org.apache.cxf.resource,org.apache.cxf.common.i18n,org.apache.cxf.tools.wsdlto,org.apache.cxf.tools.wsdlto.core"/>
<p n="version" t="version" v="2.0.3.incubator"/>
</capability>
<capability name="package">
<p n="package" v="org.apache.cxf.frontend.spring"/>
<p n="uses:" v="org.springframework.beans.factory.support,org.springframework.beans.factory.config,org.springframework.beans.factory.xml,org.apache.cxf.common.util,javax.xml.namespace,org.apache.cxf.frontend,org.w3c.dom,org.apache.cxf.configuration.spring,org.springframework.beans.factory"/>
<p n="version" t="version" v="2.0.3.incubator"/>
</capability>
<capability name="package">
<p n="package" v="org.apache.cxf.common.annotation"/>
<p n="uses:" v="org.apache.cxf.common.logging,org.apache.cxf.common.i18n"/>
<p n="version" t="version" v="2.0.3.incubator"/>
</capability>
<capability name="package">
<p n="package" v="org.apache.cxf.configuration.jsse.spring"/>
<p n="uses:" v="org.apache.cxf.configuration.jsse,org.apache.cxf.common.logging,javax.security.auth.x500,org.apache.cxf.configuration.security,org.apache.cxf.common.classloader,javax.net.ssl"/>
<p n="version" t="version" v="2.0.3.incubator"/>
</capability>
<capability name="package">
<p n="package" v="org.apache.cxf.ws.policy.v200409"/>
<p n="uses:" v="javax.xml.namespace,javax.xml.bind.annotation.adapters,javax.xml.bind,javax.xml.bind.annotation"/>
<p n="version" t="version" v="2.0.3.incubator"/>
</capability>
<capability name="package">
<p n="package" v="org.apache.cxf.ws.policy.spring"/>
<p n="uses:" v="org.springframework.beans.factory.support,org.springframework.beans.factory.xml,org.apache.cxf.ws.policy,org.w3c.dom,org.springframework.beans,org.apache.cxf.configuration.spring,org.springframework.context,org.apache.cxf.ws.policy.attachment.external,org.springframework.beans.factory"/>
<p n="version" t="version" v="2.0.3.incubator"/>
</capability>
<capability name="package">
<p n="package" v="org.apache.cxf.jaxb.io"/>
<p n="uses:" v="javax.xml.bind.attachment,org.apache.cxf.databinding,org.apache.ws.commons.schema,javax.xml.validation,javax.xml.namespace,org.apache.cxf.jaxb,javax.xml.bind,org.apache.cxf.service.model"/>
<p n="version" t="version" v="2.0.3.incubator"/>
</capability>
<capability name="package">
<p n="package" v="org.apache.cxf.version"/>
<p n="version" t="version" v="2.0.3.incubator"/>
</capability>
<capability name="package">
<p n="package" v="org.apache.cxf.tools.common"/>
<p n="uses:" v="org.apache.cxf.common.logging,org.apache.cxf.tools.common.model,org.junit,javax.xml.namespace,org.apache.cxf.common.i18n,org.apache.cxf.tools.util,org.apache.cxf.tools.common.toolspec.parser,org.apache.cxf.version,org.apache.velocity.app,org.apache.cxf.tools.common.toolspec,org.apache.velocity.context,org.apache.velocity,javax.xml.bind,org.apache.cxf.helpers"/>
<p n="version" t="version" v="2.0.3.incubator"/>
</capability>
<capability name="package">
<p n="package" v="org.apache.cxf.ws.rm.spring"/>
<p n="uses:" v="org.springframework.beans.factory.support,org.springframework.beans.factory.config,org.springframework.beans.factory.xml,org.apache.cxf.ws.rm,javax.xml.namespace,org.apache.cxf.ws.rm.policy,org.w3c.dom,org.apache.cxf.ws.rm.persistence.jdbc,org.apache.cxf.configuration.spring,org.apache.cxf.ws.rm.feature"/>
<p n="version" t="version" v="2.0.3.incubator"/>
</capability>
<capability name="package">
<p n="package" v="org.apache.cxf.aegis.type.java5"/>
<p n="uses:" v="org.apache.cxf.aegis.type.basic,javax.xml.namespace,org.apache.cxf.aegis,org.jdom,javax.xml.datatype,org.apache.cxf.aegis.util,org.apache.cxf.aegis.xml,org.apache.cxf.aegis.type"/>
<p n="version" t="version" v="2.0.3.incubator"/>
</capability>
<capability name="package">
<p n="package" v="org.apache.cxf.endpoint.dynamic"/>
<p n="uses:" v="org.apache.cxf.bus,org.apache.tools.ant.types,org.apache.cxf.common.logging,javax.xml.namespace,org.apache.cxf.common.i18n,com.sun.tools.xjc.api,org.apache.cxf.service.factory,org.apache.cxf.common.util,org.apache.cxf.resource,org.apache.cxf.jaxb,org.apache.cxf.service,com.sun.codemodel,com.sun.tools.xjc,org.apache.cxf.databinding,org.xml.sax,org.apache.cxf.endpoint,org.apache.tools.ant,org.apache.ws.commons.schema,org.w3c.dom,org.apache.cxf.service.model,org.apache.cxf.tools.util,org.apache.cxf.common.classloader,com.sun.codemodel.writer,org.apache.cxf,javax.xml.bind,org.apache.cxf.helpers"/>
<p n="version" t="version" v="2.0.3.incubator"/>
</capability>
<capability name="package">
<p n="package" v="org.apache.cxf.tools.wsdlto.frontend.jaxws.customization"/>
<p n="uses:" v="javax.wsdl,org.apache.cxf.common.logging,org.xml.sax,org.apache.cxf.catalog,javax.xml.namespace,org.w3c.dom,org.apache.cxf.common.i18n,javax.xml.xpath,org.apache.cxf.tools.util,javax.wsdl.extensions,org.apache.cxf.tools.common,org.apache.cxf.common.util,org.apache.xml.resolver,org.apache.cxf,org.apache.cxf.resource,org.apache.cxf.tools.wsdlto.frontend.jaxws.processor.internal,javax.xml.stream,org.apache.cxf.helpers"/>
<p n="version" t="version" v="2.0.3.incubator"/>
</capability>
<capability name="package">
<p n="package" v="org.apache.cxf.event"/>
<p n="uses:" v="javax.xml.namespace"/>
<p n="version" t="version" v="2.0.3.incubator"/>
</capability>
<capability name="package">
<p n="package" v="org.apache.cxf.ws.addressing.soap"/>
<p n="uses:" v="org.apache.cxf.headers,org.apache.cxf.common.logging,org.apache.cxf.endpoint,org.apache.cxf.ws.addressing.v200408,javax.xml.namespace,org.w3c.dom,org.apache.cxf.transport,org.apache.cxf.interceptor,org.apache.cxf.binding.soap,org.apache.cxf.message,org.apache.cxf.common.util,org.apache.cxf.binding.soap.interceptor,org.apache.cxf.ws.addressing,javax.xml.bind,org.apache.cxf.wsdl,org.apache.cxf.helpers"/>
<p n="version" t="version" v="2.0.3.incubator"/>
</capability>
<capability name="package">
<p n="package" v="org.apache.cxf.service.model"/>
<p n="uses:" v="org.apache.cxf.endpoint,org.apache.cxf.common.logging,org.apache.ws.commons.schema,javax.xml.namespace,org.apache.cxf.common.i18n,org.w3c.dom,org.apache.cxf.message,org.apache.cxf.common.util,org.apache.cxf.io,org.apache.cxf.ws.addressing,org.apache.cxf.service,org.apache.cxf.wsdl,org.apache.cxf.helpers"/>
<p n="version" t="version" v="2.0.3.incubator"/>
</capability>
<capability name="package">
<p n="package" v="org.apache.cxf.transport"/>
<p n="uses:" v="org.apache.cxf.endpoint,javax.xml.namespace,org.apache.cxf.common.i18n,org.apache.cxf.bus.extension,org.apache.cxf.service.model,org.apache.cxf.phase,org.apache.cxf.interceptor,org.apache.cxf.message,org.apache.cxf.binding,javax.annotation,org.apache.cxf,org.apache.cxf.ws.addressing,org.apache.cxf.configuration.spring,javax.xml.bind,org.apache.cxf.service,org.apache.cxf.wsdl,org.apache.cxf.helpers"/>
<p n="version" t="version" v="2.0.3.incubator"/>
</capability>
<capability name="package">
<p n="package" v="org.apache.cxf.simple"/>
<p n="uses:" v="org.apache.cxf.service.factory,org.apache.cxf.frontend"/>
<p n="version" t="version" v="2.0.3.incubator"/>
</capability>
<capability name="package">
<p n="package" v="org.apache.cxf.interceptor"/>
<p n="uses:" v="org.apache.cxf.common.logging,org.apache.cxf.service.invoker,javax.xml.namespace,org.apache.cxf.frontend,org.apache.cxf.common.i18n,org.apache.cxf.feature,org.apache.cxf.phase,org.apache.cxf.attachment,org.apache.cxf.message,org.apache.cxf.binding,org.apache.cxf.common.util,javax.xml.validation,org.apache.cxf.ws.addressing,org.apache.cxf.service,org.apache.cxf.wsdl,javax.xml.stream,org.apache.cxf.databinding,org.apache.cxf.endpoint,org.apache.ws.commons.schema,org.w3c.dom,org.apache.cxf.service.model,javax.xml.xpath,org.apache.cxf.transport,org.apache.cxf.common.classloader,org.apache.cxf.io,org.apache.cxf,org.apache.cxf.staxutils,org.apache.cxf.helpers"/>
<p n="version" t="version" v="2.0.3.incubator"/>
</capability>
<capability name="package">
<p n="package" v="org.apache.cxf.binding.soap"/>
<p n="uses:" v="org.apache.cxf.headers,org.apache.cxf.tools.common.extensions.soap,javax.xml.namespace,org.apache.cxf.common.i18n,org.apache.cxf.message,javax.wsdl.factory,org.apache.cxf.binding,org.apache.cxf.common.util,org.apache.cxf.binding.soap.interceptor,org.apache.cxf.binding.soap.wsdl11,org.apache.cxf.ws.addressing,javax.wsdl.extensions.mime,org.apache.cxf.service,org.apache.cxf.wsdl,javax.wsdl,org.apache.cxf.databinding,org.apache.cxf.endpoint,org.apache.ws.commons.schema,org.w3c.dom,org.apache.cxf.binding.soap.model,org.apache.cxf.service.model,org.apache.cxf.interceptor,org.apache.cxf.tools.util,org.apache.cxf.transport,javax.wsdl.extensions,javax.annotation,org.apache.cxf,org.apache.cxf.wsdl11,org.apache.cxf.helpers"/>
<p n="version" t="version" v="2.0.3.incubator"/>
</capability>
<capability name="package">
<p n="package" v="org.apache.cxf.tools.wsdlto.frontend.jaxws.processor"/>
<p n="uses:" v="org.apache.cxf.tools.common,org.apache.cxf.tools.common.model,javax.xml.namespace,org.apache.cxf.common.i18n,org.apache.cxf.service.model,org.apache.cxf.tools.wsdlto.frontend.jaxws.processor.internal.annotator,org.apache.cxf.tools.wsdlto.frontend.jaxws.processor.internal,org.apache.cxf.tools.wsdlto.core,org.apache.cxf.helpers"/>
<p n="version" t="version" v="2.0.3.incubator"/>
</capability>
<capability name="package">
<p n="package" v="org.apache.cxf.aegis.util.date"/>
<p n="uses:" v="javax.xml.datatype"/>
<p n="version" t="version" v="2.0.3.incubator"/>
</capability>
<capability name="package">
<p n="package" v="org.apache.cxf"/>
<p n="uses:" v="org.apache.cxf.buslifecycle,org.apache.cxf.common.logging,org.apache.cxf.common.i18n,org.apache.cxf.interceptor"/>
<p n="version" t="version" v="2.0.3.incubator"/>
</capability>
<capability name="package">
<p n="package" v="org.apache.cxf.binding.http.strategy"/>
<p n="uses:" v="org.codehaus.jra,org.apache.cxf.common.logging,javax.xml.namespace,org.apache.cxf.service.model,org.apache.cxf.binding.http"/>
<p n="version" t="version" v="2.0.3.incubator"/>
</capability>
<capability name="package">
<p n="package" v="org.apache.cxf.ws.rm.persistence.jdbc"/>
<p n="uses:" v="org.apache.cxf.common.logging,org.apache.cxf.ws.addressing.v200408,org.apache.cxf.ws.rm,org.apache.cxf.ws.rm.persistence,org.apache.cxf.common.i18n,javax.annotation"/>
<p n="version" t="version" v="2.0.3.incubator"/>
</capability>
<capability name="package">
<p n="package" v="org.apache.cxf.staxutils"/>
<p n="uses:" v="org.apache.cxf.common.logging,javax.xml.namespace,org.w3c.dom,javax.xml.transform,javax.xml.transform.dom,org.apache.cxf.common.util,javax.xml.parsers,javax.xml.stream,org.apache.cxf.helpers"/>
<p n="version" t="version" v="2.0.3.incubator"/>
</capability>
<capability name="package">
<p n="package" v="org.apache.cxf.transport.http_jetty"/>
<p n="uses:" v="javax.servlet.http,org.apache.cxf.configuration.jsse,org.apache.cxf.common.logging,org.mortbay.thread,org.mortbay.jetty.nio,org.apache.cxf.transport.https_jetty,org.apache.cxf.message,javax.servlet,org.apache.cxf.common.util,org.apache.cxf.transport.https,org.apache.cxf.transport.http,org.mortbay.jetty.handler,org.mortbay.jetty,org.apache.cxf.transports.http,org.apache.cxf.buslifecycle,org.mortbay.jetty.bio,org.apache.cxf.endpoint,javax.imageio,org.apache.cxf.service.model,org.apache.cxf.transport,org.mortbay.jetty.security,org.mortbay.jetty.servlet,javax.annotation,org.apache.cxf,org.apache.cxf.transports.http.configuration,org.apache.cxf.security,org.apache.cxf.helpers"/>
<p n="version" t="version" v="2.0.3.incubator"/>
</capability>
<capability name="package">
<p n="package" v="org.apache.cxf.headers"/>
<p n="uses:" v="org.apache.cxf.databinding,javax.annotation,javax.xml.namespace,org.apache.cxf,org.apache.cxf.interceptor"/>
<p n="version" t="version" v="2.0.3.incubator"/>
</capability>
<capability name="package">
<p n="package" v="org.apache.cxf.jaxws.spring"/>
<p n="uses:" v="org.apache.cxf.frontend.spring,org.apache.cxf.jaxws,javax.xml.namespace,org.w3c.dom,org.springframework.beans.factory.support,org.apache.cxf.common.classloader,org.springframework.beans.factory.config,org.springframework.beans.factory.xml,org.apache.cxf.common.util,org.springframework.beans,org.apache.cxf.configuration.spring,org.springframework.beans.factory"/>
<p n="version" t="version" v="2.0.3.incubator"/>
</capability>
<capability name="package">
<p n="package" v="org.apache.cxf.tools.common.extensions.soap"/>
<p n="uses:" v="javax.wsdl.extensions.soap,javax.wsdl.extensions.soap12"/>
<p n="version" t="version" v="2.0.3.incubator"/>
</capability>
<capability name="package">
<p n="package" v="org.apache.cxf.jaxb.attachment"/>
<p n="uses:" v="org.apache.cxf.attachment,javax.xml.bind.attachment,org.apache.cxf.common.logging,javax.activation,org.apache.cxf.common.i18n,org.apache.cxf.interceptor,org.apache.cxf.helpers"/>
<p n="version" t="version" v="2.0.3.incubator"/>
</capability>
<capability name="package">
<p n="package" v="org.apache.cxf.transport.jms.wsdl11"/>
<p n="uses:" v="javax.wsdl,javax.wsdl.extensions,org.apache.cxf.tools.common,javax.xml.namespace,org.apache.cxf.transport.jms,org.apache.cxf.wsdl"/>
<p n="version" t="version" v="2.0.3.incubator"/>
</capability>
<capability name="package">
<p n="package" v="org.apache.cxf.frontend"/>
<p n="uses:" v="org.apache.cxf.common.logging,org.apache.cxf.service.invoker,javax.xml.namespace,org.apache.cxf.common.i18n,org.apache.cxf.feature,org.apache.cxf.configuration.security,org.apache.cxf.service.factory,org.apache.cxf.binding,org.apache.cxf.resource,org.apache.cxf.ws.addressing,org.apache.cxf.jaxb,org.apache.cxf.service,javax.wsdl,org.apache.cxf.databinding,org.apache.cxf.endpoint,org.w3c.dom,org.apache.cxf.binding.soap.model,org.apache.cxf.databinding.source,org.apache.cxf.service.model,org.apache.cxf.transport,org.apache.cxf.interceptor,javax.xml.transform.dom,org.apache.cxf.binding.soap,org.apache.cxf,org.apache.cxf.wsdl11,org.apache.cxf.helpers"/>
<p n="version" t="version" v="2.0.3.incubator"/>
</capability>
<capability name="package">
<p n="package" v="org.apache.cxf.jaxws.binding.soap"/>
<p n="uses:" v="javax.xml.ws.soap,org.apache.cxf.common.logging,org.apache.cxf.binding.soap.model,org.apache.cxf.service.model,javax.xml.soap,org.apache.cxf.binding.soap,org.apache.cxf.jaxws.support,javax.jws.soap,org.apache.cxf.jaxws.binding,javax.xml.ws"/>
<p n="version" t="version" v="2.0.3.incubator"/>
</capability>
<capability name="package">
<p n="package" v="org.apache.cxf.binding.object.spring"/>
<p n="uses:" v="org.apache.cxf.binding.object,org.springframework.beans.factory.xml,org.apache.cxf.configuration.spring"/>
<p n="version" t="version" v="2.0.3.incubator"/>
</capability>
<capability name="package">
<p n="package" v="org.apache.cxf.ws.policy.builder.primitive"/>
<p n="uses:" v="org.apache.neethi,javax.xml.namespace,org.apache.cxf.ws.policy,org.apache.cxf,org.apache.cxf.common.i18n,org.w3c.dom,javax.xml.stream,org.apache.cxf.helpers"/>
<p n="version" t="version" v="2.0.3.incubator"/>
</capability>
<capability name="package">
<p n="package" v="org.apache.cxf.bindings.xformat"/>
<p n="uses:" v="javax.xml.namespace,javax.xml.bind,javax.xml.bind.annotation,org.apache.cxf.wsdl"/>
<p n="version" t="version" v="2.0.3.incubator"/>
</capability>
<capability name="package">
<p n="package" v="org.apache.cxf.binding.coloc.feature"/>
<p n="uses:" v="org.apache.cxf.endpoint,org.apache.cxf,org.apache.cxf.binding.coloc,org.apache.cxf.feature,org.apache.cxf.interceptor"/>
<p n="version" t="version" v="2.0.3.incubator"/>
</capability>
<capability name="package">
<p n="package" v="org.apache.cxf.aegis.type.mtom"/>
<p n="uses:" v="javax.xml.namespace,javax.activation,org.apache.cxf.aegis,org.apache.cxf.attachment,org.apache.cxf.message,org.apache.cxf.aegis.util,org.apache.cxf.aegis.xml,org.apache.cxf.aegis.type"/>
<p n="version" t="version" v="2.0.3.incubator"/>
</capability>
<capability name="package">
<p n="package" v="org.apache.cxf.ws.rm.policy"/>
<p n="uses:" v="javax.xml.namespace,org.apache.cxf.ws.rm,javax.xml.bind.annotation,org.apache.cxf.interceptor,org.apache.neethi,org.apache.cxf.message,org.apache.cxf.ws.rm.soap,org.apache.cxf.ws.policy,org.apache.cxf,org.apache.cxf.ws.policy.builder.jaxb,javax.xml.bind"/>
<p n="version" t="version" v="2.0.3.incubator"/>
</capability>
<capability name="package">
<p n="package" v="org.apache.cxf.tools.wsdlto.frontend.jaxws.processor.internal"/>
<p n="uses:" v="javax.wsdl.extensions.soap,org.apache.cxf.common.logging,org.apache.cxf.tools.common.extensions.soap,org.apache.cxf.tools.common.model,javax.xml.namespace,org.apache.cxf.common.i18n,org.apache.cxf.tools.wsdlto.frontend.jaxws.processor.internal.mapper,org.apache.cxf.tools.common,org.apache.cxf.common.util,org.apache.cxf.jaxb,javax.wsdl.extensions.mime,javax.xml.ws,org.apache.cxf.tools.wsdlto.frontend.jaxws.customization,javax.wsdl,org.apache.ws.commons.schema,org.w3c.dom,org.apache.cxf.service.model,org.apache.cxf.tools.wsdlto.frontend.jaxws.processor.internal.annotator,org.apache.cxf.tools.util,org.apache.cxf.tools.wsdlto.core,javax.wsdl.extensions,javax.wsdl.extensions.http,javax.jws.soap,org.apache.cxf.helpers"/>
<p n="version" t="version" v="2.0.3.incubator"/>
</capability>
<capability name="package">
<p n="package" v="org.apache.cxf.tools.misc.processor"/>
<p n="uses:" v="org.apache.cxf.common.logging,org.apache.cxf.tools.common.extensions.soap,org.apache.cxf.tools.validator.internal,javax.xml.namespace,org.apache.cxf.common.i18n,com.sun.tools.xjc.api,javax.wsdl.factory,org.apache.cxf.tools.common,javax.wsdl.extensions.schema,org.apache.cxf.tools.wsdlto.frontend.jaxws.customization,org.apache.cxf.wsdl,javax.wsdl,org.apache.cxf.tools.misc.processor.address,org.xml.sax,javax.wsdl.xml,org.apache.cxf.tools.common.dom,org.w3c.dom,org.apache.cxf.tools.util,javax.wsdl.extensions,org.apache.cxf.wsdl11"/>
<p n="version" t="version" v="2.0.3.incubator"/>
</capability>
<capability name="package">
<p n="package" v="org.apache.cxf.transports.http"/>
<p n="uses:" v="org.apache.cxf.service.model"/>
<p n="version" t="version" v="2.0.3.incubator"/>
</capability>
<capability name="package">
<p n="package" v="org.apache.cxf.aegis.type.basic"/>
<p n="uses:" v="javax.xml.namespace,org.w3c.dom,org.apache.commons.logging,org.jdom,org.apache.cxf.aegis,org.apache.cxf.interceptor,org.apache.cxf.common.classloader,org.apache.cxf.aegis.util,org.apache.cxf.aegis.xml,org.apache.cxf.aegis.util.date,org.apache.cxf.aegis.type,org.apache.cxf.common.util,org.apache.cxf.aegis.type.mtom,javax.xml.stream"/>
<p n="version" t="version" v="2.0.3.incubator"/>
</capability>
<capability name="package">
<p n="package" v="org.apache.cxf.transport.jms"/>
<p n="uses:" v="org.apache.cxf.common.logging,javax.xml.namespace,org.apache.cxf.service.model,javax.xml.bind.annotation,org.apache.cxf.transport,org.apache.cxf.configuration,org.apache.cxf.message,javax.naming,org.apache.cxf.common.util,javax.annotation,org.apache.cxf.io,org.apache.cxf,org.apache.cxf.ws.addressing,javax.xml.bind,org.apache.cxf.workqueue,org.apache.cxf.wsdl,javax.jms"/>
<p n="version" t="version" v="2.0.3.incubator"/>
</capability>
<capability name="package">
<p n="package" v="org.apache.cxf.bus.extension"/>
<p n="uses:" v="org.apache.cxf.buslifecycle,org.apache.cxf.bus,org.xml.sax,org.apache.cxf.common.i18n,org.w3c.dom,org.apache.cxf.transport,org.apache.cxf.configuration,org.apache.cxf.binding,javax.xml.parsers,org.apache.cxf.resource,org.apache.cxf.common.injection"/>
<p n="version" t="version" v="2.0.3.incubator"/>
</capability>
<capability name="package">
<p n="package" v="org.apache.cxf.ws.policy.attachment.external"/>
<p n="uses:" v="org.apache.cxf.ws.policy.attachment,org.xml.sax,javax.xml.namespace,org.w3c.dom,org.apache.cxf.common.i18n,org.apache.cxf.service.model,org.apache.cxf.extension,javax.xml.xpath,org.apache.neethi,org.springframework.core.io,org.apache.cxf.ws.policy,org.apache.cxf.resource,org.apache.cxf,org.apache.cxf.ws.addressing,org.apache.cxf.configuration.spring,javax.xml.bind,org.apache.cxf.ws.policy.attachment.reference,org.apache.cxf.helpers"/>
<p n="version" t="version" v="2.0.3.incubator"/>
</capability>
<capability name="package">
<p n="package" v="org.apache.cxf.tools.util"/>
<p n="uses:" v="javax.wsdl.extensions.soap,org.apache.cxf.common.logging,org.apache.cxf.tools.common.extensions.soap,javax.xml.namespace,org.apache.cxf.common.i18n,javax.wsdl.extensions.soap12,org.apache.cxf.tools.common,org.apache.cxf.common.util,org.apache.cxf.wsdl,javax.xml.stream,javax.wsdl,org.xml.sax,org.w3c.dom,javax.wsdl.extensions,javax.jws.soap,javax.jws,org.apache.cxf.helpers"/>
<p n="version" t="version" v="2.0.3.incubator"/>
</capability>
<capability name="package">
<p n="package" v="org.apache.cxf.tools.wsdlto.frontend.jaxws.generators"/>
<p n="uses:" v="org.apache.cxf.common.logging,org.apache.cxf.tools.common.model,org.w3c.dom,org.apache.cxf.common.i18n,org.apache.cxf.service.model,org.apache.cxf.tools.util,org.apache.cxf.tools.wsdlto.core,org.apache.cxf.tools.common,org.apache.cxf.common.util,org.apache.cxf.tools.wsdlto.frontend.jaxws.processor.internal,org.apache.cxf.helpers"/>
<p n="version" t="version" v="2.0.3.incubator"/>
</capability>
<capability name="package">
<p n="package" v="org.apache.cxf.js.rhino"/>
<p n="uses:" v="org.apache.xmlbeans,org.apache.cxf.common.logging,org.mozilla.javascript,javax.xml.namespace,org.w3c.dom,javax.xml.transform.dom,org.apache.cxf,javax.xml.ws,javax.xml.transform.stream"/>
<p n="version" t="version" v="2.0.3.incubator"/>
</capability>
<capability name="package">
<p n="package" v="org.apache.cxf.management.jmx.export.runtime"/>
<p n="uses:" v="org.apache.cxf.management.annotation,javax.management,javax.management.modelmbean"/>
<p n="version" t="version" v="2.0.3.incubator"/>
</capability>
<capability name="package">
<p n="package" v="org.apache.cxf.jaxws.handler"/>
<p n="uses:" v="javax.xml.ws.handler,org.apache.cxf.jaxws.javaee,org.apache.cxf.common.logging,javax.xml.namespace,org.apache.cxf.common.i18n,org.apache.cxf.jaxws.context,org.apache.cxf.phase,javax.xml.transform,org.apache.cxf.message,org.apache.cxf.common.util,org.apache.cxf.resource,javax.xml.ws,javax.xml.stream,javax.xml.ws.soap,org.w3c.dom,org.apache.cxf.interceptor,javax.xml.soap,org.apache.cxf.binding.soap,javax.jws,org.apache.cxf,org.apache.cxf.common.injection,javax.xml.bind"/>
<p n="version" t="version" v="2.0.3.incubator"/>
</capability>
<capability name="package">
<p n="package" v="org.apache.cxf.common.injection"/>
<p n="uses:" v="org.apache.cxf.common.logging,javax.annotation,org.apache.cxf.common.annotation,org.apache.cxf.resource"/>
<p n="version" t="version" v="2.0.3.incubator"/>
</capability>
<capability name="package">
<p n="package" v="org.apache.cxf.aegis.type.collection"/>
<p n="uses:" v="org.apache.cxf.aegis.type.basic,org.apache.cxf.aegis.util,org.apache.cxf.aegis.xml,org.apache.cxf.aegis.type,javax.xml.namespace,org.jdom,org.apache.cxf.aegis"/>
<p n="version" t="version" v="2.0.3.incubator"/>
</capability>
<capability name="package">
<p n="package" v="org.apache.cxf.transport.http.policy"/>
<p n="uses:" v="org.apache.cxf.common.logging,javax.xml.namespace,org.apache.cxf.common.i18n,org.apache.cxf.service.model,org.apache.cxf.transport,org.apache.neethi,org.apache.cxf.message,org.apache.cxf.ws.policy,org.apache.cxf.ws.policy.builder.jaxb,org.apache.cxf.transports.http.configuration,javax.xml.bind"/>
<p n="version" t="version" v="2.0.3.incubator"/>
</capability>
<capability name="package">
<p n="package" v="org.apache.cxf.transport.servlet"/>
<p n="uses:" v="javax.servlet.http,org.apache.cxf.common.logging,javax.xml.namespace,org.springframework.context.support,org.apache.cxf.bus.spring,org.apache.cxf.message,javax.servlet,javax.naming,org.xmlsoap.schemas.wsdl.http,org.springframework.core.io,org.apache.cxf.common.util,org.apache.cxf.transport.https,org.apache.cxf.resource,org.apache.cxf.ws.addressing,org.apache.cxf.transport.http,org.apache.cxf.transports.http,org.apache.cxf.service.model,org.springframework.context,org.apache.cxf.transport,org.springframework.beans.factory.support,org.apache.cxf.common.classloader,org.springframework.beans.factory.xml,javax.annotation,org.apache.cxf,org.apache.cxf.security,org.apache.cxf.helpers"/>
<p n="version" t="version" v="2.0.3.incubator"/>
</capability>
<capability name="package">
<p n="package" v="org.apache.cxf.common.logging"/>
<p n="uses:" v="org.apache.log4j,org.apache.log4j.spi,org.apache.cxf.common.util,org.apache.cxf.common.i18n"/>
<p n="version" t="version" v="2.0.3.incubator"/>
</capability>
<capability name="package">
<p n="package" v="org.apache.cxf.catalog"/>
<p n="uses:" v="org.xml.sax,javax.wsdl.xml,org.apache.cxf.common.logging,org.apache.ws.commons.schema,org.apache.ws.commons.schema.resolver,org.apache.xml.resolver.helpers,javax.annotation,org.apache.xml.resolver,org.apache.cxf,org.apache.cxf.resource,org.apache.xml.resolver.tools,org.apache.cxf.helpers"/>
<p n="version" t="version" v="2.0.3.incubator"/>
</capability>
<capability name="package">
<p n="package" v="org.apache.cxf.jaxws"/>
<p n="uses:" v="javax.xml.ws.handler,javax.xml.ws.http,javax.xml.namespace,org.apache.cxf.service.invoker,org.apache.cxf.common.i18n,org.apache.cxf.frontend,org.apache.cxf.jaxws.binding.soap,javax.xml.transform,org.apache.cxf.service.factory,org.apache.cxf.jaxws.support,javax.xml.ws.spi,org.apache.cxf.resource,org.apache.cxf.jaxb,org.apache.cxf.workqueue,org.apache.cxf.jaxws.handler.logical,javax.xml.ws,javax.xml.ws.soap,org.apache.cxf.databinding,org.apache.cxf.endpoint,org.apache.cxf.jaxws.handler.soap,org.apache.cxf.jaxws.interceptors,org.apache.cxf.databinding.source,org.apache.cxf.tools.util,org.apache.cxf.jaxws.handler,org.apache.cxf.common.injection,javax.xml.bind,org.apache.cxf.wsdl11,org.apache.cxf.common.logging,org.apache.cxf.jaxws.context,org.apache.cxf.feature,org.apache.cxf.phase,org.apache.cxf.message,org.apache.cxf.binding,org.apache.cxf.common.util,org.apache.cxf.ws.addressing,org.apache.cxf.service,org.apache.cxf.wsdl,javax.activation,org.w3c.dom,org.apache.cxf.service.model,org.apache.cxf.transport,org.apache.cxf.interceptor,org.apache.cxf.common.util.factory,javax.xml.soap,org.apache.cxf.configuration,org.apache.cxf.binding.soap,javax.jws,org.apache.cxf,org.apache.cxf.helpers"/>
<p n="version" t="version" v="2.0.3.incubator"/>
</capability>
<capability name="package">
<p n="package" v="org.apache.cxf.transport.local"/>
<p n="uses:" v="org.apache.cxf.common.logging,org.apache.cxf.service.model,org.apache.cxf.transport,org.apache.cxf.message,javax.annotation,org.apache.cxf,org.apache.cxf.ws.addressing,org.apache.cxf.helpers"/>
<p n="version" t="version" v="2.0.3.incubator"/>
</capability>
<capability name="package">
<p n="package" v="org.apache.cxf.tools.java2wsdl.generator.wsdl11"/>
<p n="uses:" v="javax.wsdl,javax.wsdl.xml,org.apache.ws.commons.schema,org.apache.cxf.tools.common.model,javax.xml.namespace,org.apache.cxf.tools.java2wsdl.generator.wsdl11.model,org.apache.cxf.service.model,org.apache.cxf.tools.util,org.apache.cxf.tools.java2wsdl.generator,org.apache.cxf.tools.java2wsdl.processor.internal.jaxws,javax.wsdl.factory,org.apache.cxf.tools.common,org.apache.cxf.common.util,org.apache.cxf,org.apache.cxf.wsdl11"/>
<p n="version" t="version" v="2.0.3.incubator"/>
</capability>
<capability name="package">
<p n="package" v="org.apache.cxf.aegis"/>
<p n="uses:" v="org.apache.cxf.aegis.type,org.apache.cxf.interceptor"/>
<p n="version" t="version" v="2.0.3.incubator"/>
</capability>
<capability name="package">
<p n="package" v="org.apache.cxf.binding.soap.spring"/>
<p n="uses:" v="org.apache.cxf.binding.soap,org.springframework.beans.factory.xml,org.w3c.dom,org.apache.cxf.configuration.spring"/>
<p n="version" t="version" v="2.0.3.incubator"/>
</capability>
<capability name="package">
<p n="package" v="org.apache.cxf.ws.rm.soap"/>
<p n="uses:" v="org.apache.cxf.headers,org.apache.cxf.common.logging,javax.xml.namespace,org.apache.cxf.common.i18n,org.apache.cxf.ws.rm.persistence,org.apache.cxf.phase,org.apache.neethi,org.apache.cxf.message,org.apache.cxf.binding,org.apache.cxf.common.util,javax.xml.parsers,org.apache.cxf.binding.soap.interceptor,org.apache.cxf.ws.policy,org.apache.cxf.ws.rm.policy,org.apache.cxf.ws.addressing,org.apache.cxf.service,org.apache.cxf.endpoint,org.apache.cxf.ws.rm,org.apache.cxf.ws.addressing.soap,org.w3c.dom,org.apache.cxf.service.model,org.apache.cxf.interceptor,org.apache.cxf.transport,javax.xml.soap,org.apache.cxf.binding.soap,org.apache.cxf.io,org.apache.cxf.ws.policy.builder.jaxb,javax.xml.bind,org.apache.cxf.helpers"/>
<p n="version" t="version" v="2.0.3.incubator"/>
</capability>
<capability name="package">
<p n="package" v="org.apache.cxf.common.util"/>
<p n="uses:" v="org.apache.cxf.common.logging,org.apache.ws.commons.schema,javax.xml.namespace,org.apache.cxf.common.i18n,org.w3c.dom,org.apache.ws.commons.schema.extensions,org.apache.cxf.helpers"/>
<p n="version" t="version" v="2.0.3.incubator"/>
</capability>
<capability name="package">
<p n="package" v="org.apache.cxf.binding.soap.interceptor"/>
<p n="uses:" v="org.apache.cxf.headers,org.apache.cxf.common.logging,javax.xml.namespace,org.apache.cxf.common.i18n,org.apache.cxf.phase,org.apache.cxf.message,org.apache.cxf.binding,org.apache.cxf.common.util,javax.xml.parsers,org.apache.cxf.service,javax.xml.stream,org.apache.cxf.databinding,org.apache.cxf.endpoint,org.w3c.dom,org.apache.cxf.binding.soap.model,org.apache.cxf.service.model,javax.xml.xpath,org.apache.cxf.interceptor,org.apache.cxf.transport,org.apache.cxf.binding.soap,org.apache.cxf.io,org.apache.cxf,org.apache.cxf.staxutils,org.apache.cxf.helpers"/>
<p n="version" t="version" v="2.0.3.incubator"/>
</capability>
<capability name="package">
<p n="package" v="org.apache.cxf.aegis.util.jdom"/>
<p n="uses:" v="javax.xml.namespace,org.jdom,org.apache.cxf.staxutils,javax.xml.stream"/>
<p n="version" t="version" v="2.0.3.incubator"/>
</capability>
<capability name="package">
<p n="package" v="org.apache.cxf.ws.addressing"/>
<p n="uses:" v="org.apache.cxf.ws.addressing.policy,org.apache.cxf.common.logging,javax.xml.namespace,org.apache.cxf.common.i18n,org.apache.cxf.feature,org.apache.cxf.phase,org.apache.cxf.message,org.apache.cxf.binding,org.apache.cxf.common.util,org.apache.cxf.ws.policy,javax.xml.ws,org.apache.cxf.workqueue,org.apache.cxf.service,org.apache.cxf.wsdl,org.apache.cxf.endpoint,org.apache.cxf.ws.addressing.v200408,org.apache.cxf.ws.addressing.soap,org.apache.cxf.binding.soap.model,javax.xml.bind.annotation,org.apache.cxf.service.model,org.apache.cxf.interceptor,org.apache.cxf.transport,javax.wsdl.extensions,javax.jws,org.apache.cxf,javax.xml.bind"/>
<p n="version" t="version" v="2.0.3.incubator"/>
</capability>
<capability name="package">
<p n="package" v="org.apache.cxf.aegis.util.stax"/>
<p n="uses:" v="org.apache.cxf.aegis.util,javax.xml.namespace,org.w3c.dom,org.jdom,org.apache.cxf.staxutils,javax.xml.stream"/>
<p n="version" t="version" v="2.0.3.incubator"/>
</capability>
<capability name="package">
<p n="package" v="org.apache.cxf.service"/>
<p n="uses:" v="org.apache.cxf.configuration,org.apache.cxf.databinding,javax.xml.namespace,org.apache.cxf.service.invoker,org.apache.cxf,org.apache.cxf.workqueue,org.apache.cxf.service.model,org.apache.cxf.interceptor"/>
<p n="version" t="version" v="2.0.3.incubator"/>
</capability>
<capability name="package">
<p n="package" v="org.apache.cxf.wsdl"/>
<p n="uses:" v="org.w3c.dom.ls,org.apache.cxf.common.logging,javax.xml.namespace,javax.xml.bind.annotation.adapters,org.apache.cxf.common.i18n,javax.xml.transform,javax.wsdl.factory,javax.xml.validation,org.apache.cxf.common.util,org.apache.cxf.ws.addressing,javax.xml.transform.stream,javax.xml.stream,javax.wsdl,org.apache.cxf.endpoint,org.xml.sax,org.apache.ws.commons.schema,org.w3c.dom,javax.xml.bind.annotation,org.apache.cxf.service.model,org.apache.cxf.transport,javax.xml.transform.dom,javax.wsdl.extensions,org.apache.cxf,org.apache.cxf.ws.addressing.wsdl,javax.xml.bind,org.apache.cxf.helpers"/>
<p n="version" t="version" v="2.0.3.incubator"/>
</capability>
<capability name="package">
<p n="package" v="org.apache.cxf.databinding.stax"/>
<p n="uses:" v="org.apache.cxf.databinding,org.apache.cxf.endpoint,org.apache.cxf.common.logging,javax.xml.namespace,org.apache.cxf.common.i18n,org.w3c.dom,org.apache.cxf.feature,org.apache.cxf.service.model,org.apache.cxf.phase,org.apache.cxf.interceptor,org.apache.cxf.message,org.apache.cxf.binding,javax.xml.validation,org.apache.cxf,org.apache.cxf.staxutils,org.apache.cxf.service,javax.xml.stream"/>
<p n="version" t="version" v="2.0.3.incubator"/>
</capability>
<capability name="package">
<p n="package" v="org.apache.cxf.tools.common.toolspec.parser"/>
<p n="uses:" v="javax.xml.transform.dom,org.apache.cxf.common.logging,javax.xml.parsers,org.apache.cxf.tools.common.toolspec,org.w3c.dom,javax.xml.transform.stream,javax.xml.transform"/>
<p n="version" t="version" v="2.0.3.incubator"/>
</capability>
<capability name="package">
<p n="package" v="org.apache.cxf.common.util.factory"/>
<p n="version" t="version" v="2.0.3.incubator"/>
</capability>
<capability name="package">
<p n="package" v="org.apache.cxf.jaxws.spi"/>
<p n="uses:" v="org.apache.cxf.common.logging,org.apache.cxf.jaxws,javax.xml.namespace,org.apache.cxf,org.apache.cxf.common.i18n,javax.xml.ws.spi,javax.xml.ws"/>
<p n="version" t="version" v="2.0.3.incubator"/>
</capability>
<capability name="package">
<p n="package" v="org.apache.cxf.io"/>
<p n="uses:" v="org.apache.cxf.helpers"/>
<p n="version" t="version" v="2.0.3.incubator"/>
</capability>
<capability name="package">
<p n="package" v="org.apache.cxf.ws.addressing.wsdl"/>
<p n="uses:" v="javax.xml.namespace,javax.xml.bind.annotation.adapters,javax.xml.bind,javax.xml.bind.annotation"/>
<p n="version" t="version" v="2.0.3.incubator"/>
</capability>
<capability name="package">
<p n="package" v="org.apache.cxf.transports.http.configuration"/>
<p n="uses:" v="javax.xml.namespace,javax.xml.bind,javax.xml.bind.annotation,org.apache.cxf.wsdl"/>
<p n="version" t="version" v="2.0.3.incubator"/>
</capability>
<require extend="false" filter="(&amp;(package=com.ibm.wsdl.extensions.schema)(version&gt;=0.0.0))" multiple="false" name="package" optional="true">Import package com.ibm.wsdl.extensions.schema</require>
<require extend="false" filter="(&amp;(package=com.ibm.wsdl.extensions.soap)(version&gt;=0.0.0))" multiple="false" name="package" optional="true">Import package com.ibm.wsdl.extensions.soap</require>
<require extend="false" filter="(&amp;(package=com.sun.codemodel)(version&gt;=0.0.0))" multiple="false" name="package" optional="true">Import package com.sun.codemodel</require>
<require extend="false" filter="(&amp;(package=com.sun.codemodel.writer)(version&gt;=0.0.0))" multiple="false" name="package" optional="true">Import package com.sun.codemodel.writer</require>
<require extend="false" filter="(&amp;(package=com.sun.tools.xjc)(version&gt;=0.0.0))" multiple="false" name="package" optional="true">Import package com.sun.tools.xjc</require>
<require extend="false" filter="(&amp;(package=com.sun.tools.xjc.api)(version&gt;=0.0.0))" multiple="false" name="package" optional="true">Import package com.sun.tools.xjc.api</require>
<require extend="false" filter="(&amp;(package=com.sun.tools.xjc.api.impl.s2j)(version&gt;=0.0.0))" multiple="false" name="package" optional="true">Import package com.sun.tools.xjc.api.impl.s2j</require>
<require extend="false" filter="(&amp;(package=com.sun.tools.xjc.model)(version&gt;=0.0.0))" multiple="false" name="package" optional="true">Import package com.sun.tools.xjc.model</require>
<require extend="false" filter="(&amp;(package=com.sun.tools.xjc.outline)(version&gt;=0.0.0))" multiple="false" name="package" optional="true">Import package com.sun.tools.xjc.outline</require>
<require extend="false" filter="(&amp;(package=com.sun.tools.xjc.util)(version&gt;=0.0.0))" multiple="false" name="package" optional="true">Import package com.sun.tools.xjc.util</require>
<require extend="false" filter="(&amp;(package=com.sun.xml.bind.v2)(version&gt;=0.0.0))" multiple="false" name="package" optional="true">Import package com.sun.xml.bind.v2</require>
<require extend="false" filter="(&amp;(package=com.sun.xml.bind.v2.runtime)(version&gt;=0.0.0))" multiple="false" name="package" optional="true">Import package com.sun.xml.bind.v2.runtime</require>
<require extend="false" filter="(&amp;(package=com.sun.xml.bind.v2.util)(version&gt;=0.0.0))" multiple="false" name="package" optional="true">Import package com.sun.xml.bind.v2.util</require>
<require extend="false" filter="(&amp;(package=com.sun.xml.xsom)(version&gt;=0.0.0))" multiple="false" name="package" optional="true">Import package com.sun.xml.xsom</require>
<require extend="false" filter="(&amp;(package=javanet.staxutils)(version&gt;=0.0.0))" multiple="false" name="package" optional="true">Import package javanet.staxutils</require>
<require extend="false" filter="(&amp;(package=javax.activation)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package javax.activation</require>
<require extend="false" filter="(&amp;(package=javax.annotation)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package javax.annotation</require>
<require extend="false" filter="(&amp;(package=javax.imageio)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package javax.imageio</require>
<require extend="false" filter="(&amp;(package=javax.imageio.stream)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package javax.imageio.stream</require>
<require extend="false" filter="(&amp;(package=javax.jms)(version&gt;=0.0.0))" multiple="false" name="package" optional="true">Import package javax.jms</require>
<require extend="false" filter="(&amp;(package=javax.jws)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package javax.jws</require>
<require extend="false" filter="(&amp;(package=javax.jws.soap)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package javax.jws.soap</require>
<require extend="false" filter="(&amp;(package=javax.mail)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package javax.mail</require>
<require extend="false" filter="(&amp;(package=javax.mail.internet)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package javax.mail.internet</require>
<require extend="false" filter="(&amp;(package=javax.mail.util)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package javax.mail.util</require>
<require extend="false" filter="(&amp;(package=javax.management)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package javax.management</require>
<require extend="false" filter="(&amp;(package=javax.management.modelmbean)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package javax.management.modelmbean</require>
<require extend="false" filter="(&amp;(package=javax.management.remote)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package javax.management.remote</require>
<require extend="false" filter="(&amp;(package=javax.naming)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package javax.naming</require>
<require extend="false" filter="(&amp;(package=javax.net.ssl)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package javax.net.ssl</require>
<require extend="false" filter="(&amp;(package=javax.security.auth.callback)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package javax.security.auth.callback</require>
<require extend="false" filter="(&amp;(package=javax.security.auth.x500)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package javax.security.auth.x500</require>
<require extend="false" filter="(&amp;(package=javax.servlet)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package javax.servlet</require>
<require extend="false" filter="(&amp;(package=javax.servlet.http)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package javax.servlet.http</require>
<require extend="false" filter="(&amp;(package=javax.wsdl)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package javax.wsdl</require>
<require extend="false" filter="(&amp;(package=javax.wsdl.extensions)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package javax.wsdl.extensions</require>
<require extend="false" filter="(&amp;(package=javax.wsdl.extensions.http)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package javax.wsdl.extensions.http</require>
<require extend="false" filter="(&amp;(package=javax.wsdl.extensions.mime)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package javax.wsdl.extensions.mime</require>
<require extend="false" filter="(&amp;(package=javax.wsdl.extensions.schema)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package javax.wsdl.extensions.schema</require>
<require extend="false" filter="(&amp;(package=javax.wsdl.extensions.soap)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package javax.wsdl.extensions.soap</require>
<require extend="false" filter="(&amp;(package=javax.wsdl.extensions.soap12)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package javax.wsdl.extensions.soap12</require>
<require extend="false" filter="(&amp;(package=javax.wsdl.factory)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package javax.wsdl.factory</require>
<require extend="false" filter="(&amp;(package=javax.wsdl.xml)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package javax.wsdl.xml</require>
<require extend="false" filter="(&amp;(package=javax.xml.bind)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package javax.xml.bind</require>
<require extend="false" filter="(&amp;(package=javax.xml.bind.annotation)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package javax.xml.bind.annotation</require>
<require extend="false" filter="(&amp;(package=javax.xml.bind.annotation.adapters)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package javax.xml.bind.annotation.adapters</require>
<require extend="false" filter="(&amp;(package=javax.xml.bind.attachment)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package javax.xml.bind.attachment</require>
<require extend="false" filter="(&amp;(package=javax.xml.datatype)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package javax.xml.datatype</require>
<require extend="false" filter="(&amp;(package=javax.xml.namespace)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package javax.xml.namespace</require>
<require extend="false" filter="(&amp;(package=javax.xml.parsers)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package javax.xml.parsers</require>
<require extend="false" filter="(&amp;(package=javax.xml.soap)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package javax.xml.soap</require>
<require extend="false" filter="(&amp;(package=javax.xml.stream)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package javax.xml.stream</require>
<require extend="false" filter="(&amp;(package=javax.xml.stream.events)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package javax.xml.stream.events</require>
<require extend="false" filter="(&amp;(package=javax.xml.transform)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package javax.xml.transform</require>
<require extend="false" filter="(&amp;(package=javax.xml.transform.dom)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package javax.xml.transform.dom</require>
<require extend="false" filter="(&amp;(package=javax.xml.transform.sax)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package javax.xml.transform.sax</require>
<require extend="false" filter="(&amp;(package=javax.xml.transform.stream)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package javax.xml.transform.stream</require>
<require extend="false" filter="(&amp;(package=javax.xml.validation)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package javax.xml.validation</require>
<require extend="false" filter="(&amp;(package=javax.xml.ws)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package javax.xml.ws</require>
<require extend="false" filter="(&amp;(package=javax.xml.ws.handler)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package javax.xml.ws.handler</require>
<require extend="false" filter="(&amp;(package=javax.xml.ws.handler.soap)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package javax.xml.ws.handler.soap</require>
<require extend="false" filter="(&amp;(package=javax.xml.ws.http)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package javax.xml.ws.http</require>
<require extend="false" filter="(&amp;(package=javax.xml.ws.soap)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package javax.xml.ws.soap</require>
<require extend="false" filter="(&amp;(package=javax.xml.ws.spi)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package javax.xml.ws.spi</require>
<require extend="false" filter="(&amp;(package=javax.xml.xpath)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package javax.xml.xpath</require>
<require extend="false" filter="(&amp;(package=junit.framework)(version&gt;=0.0.0))" multiple="false" name="package" optional="true">Import package junit.framework</require>
<require extend="false" filter="(&amp;(package=org.apache.axiom.om)(version&gt;=0.0.0))" multiple="false" name="package" optional="true">Import package org.apache.axiom.om</require>
<require extend="false" filter="(&amp;(package=org.apache.axiom.om.impl.builder)(version&gt;=0.0.0))" multiple="false" name="package" optional="true">Import package org.apache.axiom.om.impl.builder</require>
<require extend="false" filter="(&amp;(package=org.apache.axiom.om.impl.llom.factory)(version&gt;=0.0.0))" multiple="false" name="package" optional="true">Import package org.apache.axiom.om.impl.llom.factory</require>
<require extend="false" filter="(&amp;(package=org.apache.commons.lang)(version&gt;=0.0.0))" multiple="false" name="package" optional="true">Import package org.apache.commons.lang</require>
<require extend="false" filter="(&amp;(package=org.apache.commons.lang.builder)(version&gt;=0.0.0))" multiple="false" name="package" optional="true">Import package org.apache.commons.lang.builder</require>
<require extend="false" filter="(&amp;(package=org.apache.commons.logging)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package org.apache.commons.logging</require>
<require extend="false" filter="(&amp;(package=org.apache.cxf)(version&gt;=2.0.3.incubator))" multiple="false" name="package" optional="false">Import package org.apache.cxf ;version=2.0.3.incubator</require>
<require extend="false" filter="(&amp;(package=org.apache.cxf.aegis)(version&gt;=2.0.3.incubator))" multiple="false" name="package" optional="false">Import package org.apache.cxf.aegis ;version=2.0.3.incubator</require>
<require extend="false" filter="(&amp;(package=org.apache.cxf.aegis.databinding)(version&gt;=2.0.3.incubator))" multiple="false" name="package" optional="false">Import package org.apache.cxf.aegis.databinding ;version=2.0.3.incubator</require>
<require extend="false" filter="(&amp;(package=org.apache.cxf.aegis.type)(version&gt;=2.0.3.incubator))" multiple="false" name="package" optional="false">Import package org.apache.cxf.aegis.type ;version=2.0.3.incubator</require>
<require extend="false" filter="(&amp;(package=org.apache.cxf.aegis.type.basic)(version&gt;=2.0.3.incubator))" multiple="false" name="package" optional="false">Import package org.apache.cxf.aegis.type.basic ;version=2.0.3.incubator</require>
<require extend="false" filter="(&amp;(package=org.apache.cxf.aegis.type.collection)(version&gt;=2.0.3.incubator))" multiple="false" name="package" optional="false">Import package org.apache.cxf.aegis.type.collection ;version=2.0.3.incubator</require>
<require extend="false" filter="(&amp;(package=org.apache.cxf.aegis.type.java5)(version&gt;=2.0.3.incubator))" multiple="false" name="package" optional="false">Import package org.apache.cxf.aegis.type.java5 ;version=2.0.3.incubator</require>
<require extend="false" filter="(&amp;(package=org.apache.cxf.aegis.type.mtom)(version&gt;=2.0.3.incubator))" multiple="false" name="package" optional="false">Import package org.apache.cxf.aegis.type.mtom ;version=2.0.3.incubator</require>
<require extend="false" filter="(&amp;(package=org.apache.cxf.aegis.type.xml)(version&gt;=2.0.3.incubator))" multiple="false" name="package" optional="false">Import package org.apache.cxf.aegis.type.xml ;version=2.0.3.incubator</require>
<require extend="false" filter="(&amp;(package=org.apache.cxf.aegis.util)(version&gt;=2.0.3.incubator))" multiple="false" name="package" optional="false">Import package org.apache.cxf.aegis.util ;version=2.0.3.incubator</require>
<require extend="false" filter="(&amp;(package=org.apache.cxf.aegis.util.date)(version&gt;=2.0.3.incubator))" multiple="false" name="package" optional="false">Import package org.apache.cxf.aegis.util.date ;version=2.0.3.incubator</require>
<require extend="false" filter="(&amp;(package=org.apache.cxf.aegis.util.jdom)(version&gt;=2.0.3.incubator))" multiple="false" name="package" optional="false">Import package org.apache.cxf.aegis.util.jdom ;version=2.0.3.incubator</require>
<require extend="false" filter="(&amp;(package=org.apache.cxf.aegis.util.stax)(version&gt;=2.0.3.incubator))" multiple="false" name="package" optional="false">Import package org.apache.cxf.aegis.util.stax ;version=2.0.3.incubator</require>
<require extend="false" filter="(&amp;(package=org.apache.cxf.aegis.xml)(version&gt;=2.0.3.incubator))" multiple="false" name="package" optional="false">Import package org.apache.cxf.aegis.xml ;version=2.0.3.incubator</require>
<require extend="false" filter="(&amp;(package=org.apache.cxf.aegis.xml.jdom)(version&gt;=2.0.3.incubator))" multiple="false" name="package" optional="false">Import package org.apache.cxf.aegis.xml.jdom ;version=2.0.3.incubator</require>
<require extend="false" filter="(&amp;(package=org.apache.cxf.aegis.xml.stax)(version&gt;=2.0.3.incubator))" multiple="false" name="package" optional="false">Import package org.apache.cxf.aegis.xml.stax ;version=2.0.3.incubator</require>
<require extend="false" filter="(&amp;(package=org.apache.cxf.attachment)(version&gt;=2.0.3.incubator))" multiple="false" name="package" optional="false">Import package org.apache.cxf.attachment ;version=2.0.3.incubator</require>
<require extend="false" filter="(&amp;(package=org.apache.cxf.binding)(version&gt;=2.0.3.incubator))" multiple="false" name="package" optional="false">Import package org.apache.cxf.binding ;version=2.0.3.incubator</require>
<require extend="false" filter="(&amp;(package=org.apache.cxf.binding.coloc)(version&gt;=2.0.3.incubator))" multiple="false" name="package" optional="false">Import package org.apache.cxf.binding.coloc ;version=2.0.3.incubator</require>
<require extend="false" filter="(&amp;(package=org.apache.cxf.binding.coloc.feature)(version&gt;=2.0.3.incubator))" multiple="false" name="package" optional="false">Import package org.apache.cxf.binding.coloc.feature ;version=2.0.3.incubator</require>
<require extend="false" filter="(&amp;(package=org.apache.cxf.binding.coloc.spring)(version&gt;=2.0.3.incubator))" multiple="false" name="package" optional="false">Import package org.apache.cxf.binding.coloc.spring ;version=2.0.3.incubator</require>
<require extend="false" filter="(&amp;(package=org.apache.cxf.binding.http)(version&gt;=2.0.3.incubator))" multiple="false" name="package" optional="false">Import package org.apache.cxf.binding.http ;version=2.0.3.incubator</require>
<require extend="false" filter="(&amp;(package=org.apache.cxf.binding.http.interceptor)(version&gt;=2.0.3.incubator))" multiple="false" name="package" optional="false">Import package org.apache.cxf.binding.http.interceptor ;version=2.0.3.incubator</require>
<require extend="false" filter="(&amp;(package=org.apache.cxf.binding.http.strategy)(version&gt;=2.0.3.incubator))" multiple="false" name="package" optional="false">Import package org.apache.cxf.binding.http.strategy ;version=2.0.3.incubator</require>
<require extend="false" filter="(&amp;(package=org.apache.cxf.binding.object)(version&gt;=2.0.3.incubator))" multiple="false" name="package" optional="false">Import package org.apache.cxf.binding.object ;version=2.0.3.incubator</require>
<require extend="false" filter="(&amp;(package=org.apache.cxf.binding.object.spring)(version&gt;=2.0.3.incubator))" multiple="false" name="package" optional="false">Import package org.apache.cxf.binding.object.spring ;version=2.0.3.incubator</require>
<require extend="false" filter="(&amp;(package=org.apache.cxf.binding.soap)(version&gt;=2.0.3.incubator))" multiple="false" name="package" optional="false">Import package org.apache.cxf.binding.soap ;version=2.0.3.incubator</require>
<require extend="false" filter="(&amp;(package=org.apache.cxf.binding.soap.interceptor)(version&gt;=2.0.3.incubator))" multiple="false" name="package" optional="false">Import package org.apache.cxf.binding.soap.interceptor ;version=2.0.3.incubator</require>
<require extend="false" filter="(&amp;(package=org.apache.cxf.binding.soap.model)(version&gt;=2.0.3.incubator))" multiple="false" name="package" optional="false">Import package org.apache.cxf.binding.soap.model ;version=2.0.3.incubator</require>
<require extend="false" filter="(&amp;(package=org.apache.cxf.binding.soap.saaj)(version&gt;=2.0.3.incubator))" multiple="false" name="package" optional="false">Import package org.apache.cxf.binding.soap.saaj ;version=2.0.3.incubator</require>
<require extend="false" filter="(&amp;(package=org.apache.cxf.binding.soap.spring)(version&gt;=2.0.3.incubator))" multiple="false" name="package" optional="false">Import package org.apache.cxf.binding.soap.spring ;version=2.0.3.incubator</require>
<require extend="false" filter="(&amp;(package=org.apache.cxf.binding.soap.wsdl11)(version&gt;=2.0.3.incubator))" multiple="false" name="package" optional="false">Import package org.apache.cxf.binding.soap.wsdl11 ;version=2.0.3.incubator</require>
<require extend="false" filter="(&amp;(package=org.apache.cxf.binding.xml)(version&gt;=2.0.3.incubator))" multiple="false" name="package" optional="false">Import package org.apache.cxf.binding.xml ;version=2.0.3.incubator</require>
<require extend="false" filter="(&amp;(package=org.apache.cxf.binding.xml.interceptor)(version&gt;=2.0.3.incubator))" multiple="false" name="package" optional="false">Import package org.apache.cxf.binding.xml.interceptor ;version=2.0.3.incubator</require>
<require extend="false" filter="(&amp;(package=org.apache.cxf.binding.xml.wsdl11)(version&gt;=2.0.3.incubator))" multiple="false" name="package" optional="false">Import package org.apache.cxf.binding.xml.wsdl11 ;version=2.0.3.incubator</require>
<require extend="false" filter="(&amp;(package=org.apache.cxf.bindings.xformat)(version&gt;=2.0.3.incubator))" multiple="false" name="package" optional="false">Import package org.apache.cxf.bindings.xformat ;version=2.0.3.incubator</require>
<require extend="false" filter="(&amp;(package=org.apache.cxf.bus)(version&gt;=2.0.3.incubator))" multiple="false" name="package" optional="false">Import package org.apache.cxf.bus ;version=2.0.3.incubator</require>
<require extend="false" filter="(&amp;(package=org.apache.cxf.bus.extension)(version&gt;=2.0.3.incubator))" multiple="false" name="package" optional="false">Import package org.apache.cxf.bus.extension ;version=2.0.3.incubator</require>
<require extend="false" filter="(&amp;(package=org.apache.cxf.bus.resource)(version&gt;=2.0.3.incubator))" multiple="false" name="package" optional="false">Import package org.apache.cxf.bus.resource ;version=2.0.3.incubator</require>
<require extend="false" filter="(&amp;(package=org.apache.cxf.bus.spring)(version&gt;=2.0.3.incubator))" multiple="false" name="package" optional="false">Import package org.apache.cxf.bus.spring ;version=2.0.3.incubator</require>
<require extend="false" filter="(&amp;(package=org.apache.cxf.buslifecycle)(version&gt;=2.0.3.incubator))" multiple="false" name="package" optional="false">Import package org.apache.cxf.buslifecycle ;version=2.0.3.incubator</require>
<require extend="false" filter="(&amp;(package=org.apache.cxf.catalog)(version&gt;=2.0.3.incubator))" multiple="false" name="package" optional="false">Import package org.apache.cxf.catalog ;version=2.0.3.incubator</require>
<require extend="false" filter="(&amp;(package=org.apache.cxf.clustering)(version&gt;=2.0.3.incubator))" multiple="false" name="package" optional="false">Import package org.apache.cxf.clustering ;version=2.0.3.incubator</require>
<require extend="false" filter="(&amp;(package=org.apache.cxf.clustering.spring)(version&gt;=2.0.3.incubator))" multiple="false" name="package" optional="false">Import package org.apache.cxf.clustering.spring ;version=2.0.3.incubator</require>
<require extend="false" filter="(&amp;(package=org.apache.cxf.common.annotation)(version&gt;=2.0.3.incubator))" multiple="false" name="package" optional="false">Import package org.apache.cxf.common.annotation ;version=2.0.3.incubator</require>
<require extend="false" filter="(&amp;(package=org.apache.cxf.common.classloader)(version&gt;=2.0.3.incubator))" multiple="false" name="package" optional="false">Import package org.apache.cxf.common.classloader ;version=2.0.3.incubator</require>
<require extend="false" filter="(&amp;(package=org.apache.cxf.common.commands)(version&gt;=2.0.3.incubator))" multiple="false" name="package" optional="false">Import package org.apache.cxf.common.commands ;version=2.0.3.incubator</require>
<require extend="false" filter="(&amp;(package=org.apache.cxf.common.i18n)(version&gt;=2.0.3.incubator))" multiple="false" name="package" optional="false">Import package org.apache.cxf.common.i18n ;version=2.0.3.incubator</require>
<require extend="false" filter="(&amp;(package=org.apache.cxf.common.injection)(version&gt;=2.0.3.incubator))" multiple="false" name="package" optional="false">Import package org.apache.cxf.common.injection ;version=2.0.3.incubator</require>
<require extend="false" filter="(&amp;(package=org.apache.cxf.common.logging)(version&gt;=2.0.3.incubator))" multiple="false" name="package" optional="false">Import package org.apache.cxf.common.logging ;version=2.0.3.incubator</require>
<require extend="false" filter="(&amp;(package=org.apache.cxf.common.util)(version&gt;=2.0.3.incubator))" multiple="false" name="package" optional="false">Import package org.apache.cxf.common.util ;version=2.0.3.incubator</require>
<require extend="false" filter="(&amp;(package=org.apache.cxf.common.util.factory)(version&gt;=2.0.3.incubator))" multiple="false" name="package" optional="false">Import package org.apache.cxf.common.util.factory ;version=2.0.3.incubator</require>
<require extend="false" filter="(&amp;(package=org.apache.cxf.configuration)(version&gt;=2.0.3.incubator))" multiple="false" name="package" optional="false">Import package org.apache.cxf.configuration ;version=2.0.3.incubator</require>
<require extend="false" filter="(&amp;(package=org.apache.cxf.configuration.jsse)(version&gt;=2.0.3.incubator))" multiple="false" name="package" optional="false">Import package org.apache.cxf.configuration.jsse ;version=2.0.3.incubator</require>
<require extend="false" filter="(&amp;(package=org.apache.cxf.configuration.jsse.spring)(version&gt;=2.0.3.incubator))" multiple="false" name="package" optional="false">Import package org.apache.cxf.configuration.jsse.spring ;version=2.0.3.incubator</require>
<require extend="false" filter="(&amp;(package=org.apache.cxf.configuration.security)(version&gt;=2.0.3.incubator))" multiple="false" name="package" optional="false">Import package org.apache.cxf.configuration.security ;version=2.0.3.incubator</require>
<require extend="false" filter="(&amp;(package=org.apache.cxf.configuration.spring)(version&gt;=2.0.3.incubator))" multiple="false" name="package" optional="false">Import package org.apache.cxf.configuration.spring ;version=2.0.3.incubator</require>
<require extend="false" filter="(&amp;(package=org.apache.cxf.databinding)(version&gt;=2.0.3.incubator))" multiple="false" name="package" optional="false">Import package org.apache.cxf.databinding ;version=2.0.3.incubator</require>
<require extend="false" filter="(&amp;(package=org.apache.cxf.databinding.source)(version&gt;=2.0.3.incubator))" multiple="false" name="package" optional="false">Import package org.apache.cxf.databinding.source ;version=2.0.3.incubator</require>
<require extend="false" filter="(&amp;(package=org.apache.cxf.databinding.stax)(version&gt;=2.0.3.incubator))" multiple="false" name="package" optional="false">Import package org.apache.cxf.databinding.stax ;version=2.0.3.incubator</require>
<require extend="false" filter="(&amp;(package=org.apache.cxf.endpoint)(version&gt;=2.0.3.incubator))" multiple="false" name="package" optional="false">Import package org.apache.cxf.endpoint ;version=2.0.3.incubator</require>
<require extend="false" filter="(&amp;(package=org.apache.cxf.endpoint.dynamic)(version&gt;=2.0.3.incubator))" multiple="false" name="package" optional="false">Import package org.apache.cxf.endpoint.dynamic ;version=2.0.3.incubator</require>
<require extend="false" filter="(&amp;(package=org.apache.cxf.event)(version&gt;=2.0.3.incubator))" multiple="false" name="package" optional="false">Import package org.apache.cxf.event ;version=2.0.3.incubator</require>
<require extend="false" filter="(&amp;(package=org.apache.cxf.extension)(version&gt;=2.0.3.incubator))" multiple="false" name="package" optional="false">Import package org.apache.cxf.extension ;version=2.0.3.incubator</require>
<require extend="false" filter="(&amp;(package=org.apache.cxf.feature)(version&gt;=2.0.3.incubator))" multiple="false" name="package" optional="false">Import package org.apache.cxf.feature ;version=2.0.3.incubator</require>
<require extend="false" filter="(&amp;(package=org.apache.cxf.frontend)(version&gt;=2.0.3.incubator))" multiple="false" name="package" optional="false">Import package org.apache.cxf.frontend ;version=2.0.3.incubator</require>
<require extend="false" filter="(&amp;(package=org.apache.cxf.frontend.spring)(version&gt;=2.0.3.incubator))" multiple="false" name="package" optional="false">Import package org.apache.cxf.frontend.spring ;version=2.0.3.incubator</require>
<require extend="false" filter="(&amp;(package=org.apache.cxf.headers)(version&gt;=2.0.3.incubator))" multiple="false" name="package" optional="false">Import package org.apache.cxf.headers ;version=2.0.3.incubator</require>
<require extend="false" filter="(&amp;(package=org.apache.cxf.helpers)(version&gt;=2.0.3.incubator))" multiple="false" name="package" optional="false">Import package org.apache.cxf.helpers ;version=2.0.3.incubator</require>
<require extend="false" filter="(&amp;(package=org.apache.cxf.interceptor)(version&gt;=2.0.3.incubator))" multiple="false" name="package" optional="false">Import package org.apache.cxf.interceptor ;version=2.0.3.incubator</require>
<require extend="false" filter="(&amp;(package=org.apache.cxf.io)(version&gt;=2.0.3.incubator))" multiple="false" name="package" optional="false">Import package org.apache.cxf.io ;version=2.0.3.incubator</require>
<require extend="false" filter="(&amp;(package=org.apache.cxf.jaxb)(version&gt;=2.0.3.incubator))" multiple="false" name="package" optional="false">Import package org.apache.cxf.jaxb ;version=2.0.3.incubator</require>
<require extend="false" filter="(&amp;(package=org.apache.cxf.jaxb.attachment)(version&gt;=2.0.3.incubator))" multiple="false" name="package" optional="false">Import package org.apache.cxf.jaxb.attachment ;version=2.0.3.incubator</require>
<require extend="false" filter="(&amp;(package=org.apache.cxf.jaxb.io)(version&gt;=2.0.3.incubator))" multiple="false" name="package" optional="false">Import package org.apache.cxf.jaxb.io ;version=2.0.3.incubator</require>
<require extend="false" filter="(&amp;(package=org.apache.cxf.jaxws)(version&gt;=2.0.3.incubator))" multiple="false" name="package" optional="false">Import package org.apache.cxf.jaxws ;version=2.0.3.incubator</require>
<require extend="false" filter="(&amp;(package=org.apache.cxf.jaxws.binding)(version&gt;=2.0.3.incubator))" multiple="false" name="package" optional="false">Import package org.apache.cxf.jaxws.binding ;version=2.0.3.incubator</require>
<require extend="false" filter="(&amp;(package=org.apache.cxf.jaxws.binding.http)(version&gt;=2.0.3.incubator))" multiple="false" name="package" optional="false">Import package org.apache.cxf.jaxws.binding.http ;version=2.0.3.incubator</require>
<require extend="false" filter="(&amp;(package=org.apache.cxf.jaxws.binding.soap)(version&gt;=2.0.3.incubator))" multiple="false" name="package" optional="false">Import package org.apache.cxf.jaxws.binding.soap ;version=2.0.3.incubator</require>
<require extend="false" filter="(&amp;(package=org.apache.cxf.jaxws.context)(version&gt;=2.0.3.incubator))" multiple="false" name="package" optional="false">Import package org.apache.cxf.jaxws.context ;version=2.0.3.incubator</require>
<require extend="false" filter="(&amp;(package=org.apache.cxf.jaxws.handler)(version&gt;=2.0.3.incubator))" multiple="false" name="package" optional="false">Import package org.apache.cxf.jaxws.handler ;version=2.0.3.incubator</require>
<require extend="false" filter="(&amp;(package=org.apache.cxf.jaxws.handler.logical)(version&gt;=2.0.3.incubator))" multiple="false" name="package" optional="false">Import package org.apache.cxf.jaxws.handler.logical ;version=2.0.3.incubator</require>
<require extend="false" filter="(&amp;(package=org.apache.cxf.jaxws.handler.soap)(version&gt;=2.0.3.incubator))" multiple="false" name="package" optional="false">Import package org.apache.cxf.jaxws.handler.soap ;version=2.0.3.incubator</require>
<require extend="false" filter="(&amp;(package=org.apache.cxf.jaxws.interceptors)(version&gt;=2.0.3.incubator))" multiple="false" name="package" optional="false">Import package org.apache.cxf.jaxws.interceptors ;version=2.0.3.incubator</require>
<require extend="false" filter="(&amp;(package=org.apache.cxf.jaxws.javaee)(version&gt;=2.0.3.incubator))" multiple="false" name="package" optional="false">Import package org.apache.cxf.jaxws.javaee ;version=2.0.3.incubator</require>
<require extend="false" filter="(&amp;(package=org.apache.cxf.jaxws.spi)(version&gt;=2.0.3.incubator))" multiple="false" name="package" optional="false">Import package org.apache.cxf.jaxws.spi ;version=2.0.3.incubator</require>
<require extend="false" filter="(&amp;(package=org.apache.cxf.jaxws.spring)(version&gt;=2.0.3.incubator))" multiple="false" name="package" optional="false">Import package org.apache.cxf.jaxws.spring ;version=2.0.3.incubator</require>
<require extend="false" filter="(&amp;(package=org.apache.cxf.jaxws.support)(version&gt;=2.0.3.incubator))" multiple="false" name="package" optional="false">Import package org.apache.cxf.jaxws.support ;version=2.0.3.incubator</require>
<require extend="false" filter="(&amp;(package=org.apache.cxf.js.rhino)(version&gt;=2.0.3.incubator))" multiple="false" name="package" optional="false">Import package org.apache.cxf.js.rhino ;version=2.0.3.incubator</require>
<require extend="false" filter="(&amp;(package=org.apache.cxf.management)(version&gt;=2.0.3.incubator))" multiple="false" name="package" optional="false">Import package org.apache.cxf.management ;version=2.0.3.incubator</require>
<require extend="false" filter="(&amp;(package=org.apache.cxf.management.annotation)(version&gt;=2.0.3.incubator))" multiple="false" name="package" optional="false">Import package org.apache.cxf.management.annotation ;version=2.0.3.incubator</require>
<require extend="false" filter="(&amp;(package=org.apache.cxf.management.counters)(version&gt;=2.0.3.incubator))" multiple="false" name="package" optional="false">Import package org.apache.cxf.management.counters ;version=2.0.3.incubator</require>
<require extend="false" filter="(&amp;(package=org.apache.cxf.management.interceptor)(version&gt;=2.0.3.incubator))" multiple="false" name="package" optional="false">Import package org.apache.cxf.management.interceptor ;version=2.0.3.incubator</require>
<require extend="false" filter="(&amp;(package=org.apache.cxf.management.jmx)(version&gt;=2.0.3.incubator))" multiple="false" name="package" optional="false">Import package org.apache.cxf.management.jmx ;version=2.0.3.incubator</require>
<require extend="false" filter="(&amp;(package=org.apache.cxf.management.jmx.export.runtime)(version&gt;=2.0.3.incubator))" multiple="false" name="package" optional="false">Import package org.apache.cxf.management.jmx.export.runtime ;version=2.0.3.incubator</require>
<require extend="false" filter="(&amp;(package=org.apache.cxf.management.utils)(version&gt;=2.0.3.incubator))" multiple="false" name="package" optional="false">Import package org.apache.cxf.management.utils ;version=2.0.3.incubator</require>
<require extend="false" filter="(&amp;(package=org.apache.cxf.message)(version&gt;=2.0.3.incubator))" multiple="false" name="package" optional="false">Import package org.apache.cxf.message ;version=2.0.3.incubator</require>
<require extend="false" filter="(&amp;(package=org.apache.cxf.phase)(version&gt;=2.0.3.incubator))" multiple="false" name="package" optional="false">Import package org.apache.cxf.phase ;version=2.0.3.incubator</require>
<require extend="false" filter="(&amp;(package=org.apache.cxf.resource)(version&gt;=2.0.3.incubator))" multiple="false" name="package" optional="false">Import package org.apache.cxf.resource ;version=2.0.3.incubator</require>
<require extend="false" filter="(&amp;(package=org.apache.cxf.security)(version&gt;=2.0.3.incubator))" multiple="false" name="package" optional="false">Import package org.apache.cxf.security ;version=2.0.3.incubator</require>
<require extend="false" filter="(&amp;(package=org.apache.cxf.security.transport)(version&gt;=2.0.3.incubator))" multiple="false" name="package" optional="false">Import package org.apache.cxf.security.transport ;version=2.0.3.incubator</require>
<require extend="false" filter="(&amp;(package=org.apache.cxf.service)(version&gt;=2.0.3.incubator))" multiple="false" name="package" optional="false">Import package org.apache.cxf.service ;version=2.0.3.incubator</require>
<require extend="false" filter="(&amp;(package=org.apache.cxf.service.factory)(version&gt;=2.0.3.incubator))" multiple="false" name="package" optional="false">Import package org.apache.cxf.service.factory ;version=2.0.3.incubator</require>
<require extend="false" filter="(&amp;(package=org.apache.cxf.service.invoker)(version&gt;=2.0.3.incubator))" multiple="false" name="package" optional="false">Import package org.apache.cxf.service.invoker ;version=2.0.3.incubator</require>
<require extend="false" filter="(&amp;(package=org.apache.cxf.service.model)(version&gt;=2.0.3.incubator))" multiple="false" name="package" optional="false">Import package org.apache.cxf.service.model ;version=2.0.3.incubator</require>
<require extend="false" filter="(&amp;(package=org.apache.cxf.simple)(version&gt;=2.0.3.incubator))" multiple="false" name="package" optional="false">Import package org.apache.cxf.simple ;version=2.0.3.incubator</require>
<require extend="false" filter="(&amp;(package=org.apache.cxf.staxutils)(version&gt;=2.0.3.incubator))" multiple="false" name="package" optional="false">Import package org.apache.cxf.staxutils ;version=2.0.3.incubator</require>
<require extend="false" filter="(&amp;(package=org.apache.cxf.test)(version&gt;=2.0.3.incubator))" multiple="false" name="package" optional="false">Import package org.apache.cxf.test ;version=2.0.3.incubator</require>
<require extend="false" filter="(&amp;(package=org.apache.cxf.tools.common)(version&gt;=2.0.3.incubator))" multiple="false" name="package" optional="false">Import package org.apache.cxf.tools.common ;version=2.0.3.incubator</require>
<require extend="false" filter="(&amp;(package=org.apache.cxf.tools.common.dom)(version&gt;=2.0.3.incubator))" multiple="false" name="package" optional="false">Import package org.apache.cxf.tools.common.dom ;version=2.0.3.incubator</require>
<require extend="false" filter="(&amp;(package=org.apache.cxf.tools.common.extensions.soap)(version&gt;=2.0.3.incubator))" multiple="false" name="package" optional="false">Import package org.apache.cxf.tools.common.extensions.soap ;version=2.0.3.incubator</require>
<require extend="false" filter="(&amp;(package=org.apache.cxf.tools.common.model)(version&gt;=2.0.3.incubator))" multiple="false" name="package" optional="false">Import package org.apache.cxf.tools.common.model ;version=2.0.3.incubator</require>
<require extend="false" filter="(&amp;(package=org.apache.cxf.tools.common.toolspec)(version&gt;=2.0.3.incubator))" multiple="false" name="package" optional="false">Import package org.apache.cxf.tools.common.toolspec ;version=2.0.3.incubator</require>
<require extend="false" filter="(&amp;(package=org.apache.cxf.tools.common.toolspec.parser)(version&gt;=2.0.3.incubator))" multiple="false" name="package" optional="false">Import package org.apache.cxf.tools.common.toolspec.parser ;version=2.0.3.incubator</require>
<require extend="false" filter="(&amp;(package=org.apache.cxf.tools.java2wsdl)(version&gt;=2.0.3.incubator))" multiple="false" name="package" optional="false">Import package org.apache.cxf.tools.java2wsdl ;version=2.0.3.incubator</require>
<require extend="false" filter="(&amp;(package=org.apache.cxf.tools.java2wsdl.generator)(version&gt;=2.0.3.incubator))" multiple="false" name="package" optional="false">Import package org.apache.cxf.tools.java2wsdl.generator ;version=2.0.3.incubator</require>
<require extend="false" filter="(&amp;(package=org.apache.cxf.tools.java2wsdl.generator.wsdl11)(version&gt;=2.0.3.incubator))" multiple="false" name="package" optional="false">Import package org.apache.cxf.tools.java2wsdl.generator.wsdl11 ;version=2.0.3.incubator</require>
<require extend="false" filter="(&amp;(package=org.apache.cxf.tools.java2wsdl.generator.wsdl11.annotator)(version&gt;=2.0.3.incubator))" multiple="false" name="package" optional="false">Import package org.apache.cxf.tools.java2wsdl.generator.wsdl11.annotator ;version=2.0.3.incubator</require>
<require extend="false" filter="(&amp;(package=org.apache.cxf.tools.java2wsdl.generator.wsdl11.model)(version&gt;=2.0.3.incubator))" multiple="false" name="package" optional="false">Import package org.apache.cxf.tools.java2wsdl.generator.wsdl11.model ;version=2.0.3.incubator</require>
<require extend="false" filter="(&amp;(package=org.apache.cxf.tools.java2wsdl.processor)(version&gt;=2.0.3.incubator))" multiple="false" name="package" optional="false">Import package org.apache.cxf.tools.java2wsdl.processor ;version=2.0.3.incubator</require>
<require extend="false" filter="(&amp;(package=org.apache.cxf.tools.java2wsdl.processor.internal)(version&gt;=2.0.3.incubator))" multiple="false" name="package" optional="false">Import package org.apache.cxf.tools.java2wsdl.processor.internal ;version=2.0.3.incubator</require>
<require extend="false" filter="(&amp;(package=org.apache.cxf.tools.java2wsdl.processor.internal.jaxws)(version&gt;=2.0.3.incubator))" multiple="false" name="package" optional="false">Import package org.apache.cxf.tools.java2wsdl.processor.internal.jaxws ;version=2.0.3.incubator</require>
<require extend="false" filter="(&amp;(package=org.apache.cxf.tools.misc)(version&gt;=2.0.3.incubator))" multiple="false" name="package" optional="false">Import package org.apache.cxf.tools.misc ;version=2.0.3.incubator</require>
<require extend="false" filter="(&amp;(package=org.apache.cxf.tools.misc.processor)(version&gt;=2.0.3.incubator))" multiple="false" name="package" optional="false">Import package org.apache.cxf.tools.misc.processor ;version=2.0.3.incubator</require>
<require extend="false" filter="(&amp;(package=org.apache.cxf.tools.misc.processor.address)(version&gt;=2.0.3.incubator))" multiple="false" name="package" optional="false">Import package org.apache.cxf.tools.misc.processor.address ;version=2.0.3.incubator</require>
<require extend="false" filter="(&amp;(package=org.apache.cxf.tools.plugin)(version&gt;=2.0.3.incubator))" multiple="false" name="package" optional="false">Import package org.apache.cxf.tools.plugin ;version=2.0.3.incubator</require>
<require extend="false" filter="(&amp;(package=org.apache.cxf.tools.util)(version&gt;=2.0.3.incubator))" multiple="false" name="package" optional="false">Import package org.apache.cxf.tools.util ;version=2.0.3.incubator</require>
<require extend="false" filter="(&amp;(package=org.apache.cxf.tools.validator)(version&gt;=2.0.3.incubator))" multiple="false" name="package" optional="false">Import package org.apache.cxf.tools.validator ;version=2.0.3.incubator</require>
<require extend="false" filter="(&amp;(package=org.apache.cxf.tools.validator.internal)(version&gt;=2.0.3.incubator))" multiple="false" name="package" optional="false">Import package org.apache.cxf.tools.validator.internal ;version=2.0.3.incubator</require>
<require extend="false" filter="(&amp;(package=org.apache.cxf.tools.validator.internal.model)(version&gt;=2.0.3.incubator))" multiple="false" name="package" optional="false">Import package org.apache.cxf.tools.validator.internal.model ;version=2.0.3.incubator</require>
<require extend="false" filter="(&amp;(package=org.apache.cxf.tools.wsdlto)(version&gt;=2.0.3.incubator))" multiple="false" name="package" optional="false">Import package org.apache.cxf.tools.wsdlto ;version=2.0.3.incubator</require>
<require extend="false" filter="(&amp;(package=org.apache.cxf.tools.wsdlto.core)(version&gt;=2.0.3.incubator))" multiple="false" name="package" optional="false">Import package org.apache.cxf.tools.wsdlto.core ;version=2.0.3.incubator</require>
<require extend="false" filter="(&amp;(package=org.apache.cxf.tools.wsdlto.databinding.jaxb)(version&gt;=2.0.3.incubator))" multiple="false" name="package" optional="false">Import package org.apache.cxf.tools.wsdlto.databinding.jaxb ;version=2.0.3.incubator</require>
<require extend="false" filter="(&amp;(package=org.apache.cxf.tools.wsdlto.frontend.jaxws)(version&gt;=2.0.3.incubator))" multiple="false" name="package" optional="false">Import package org.apache.cxf.tools.wsdlto.frontend.jaxws ;version=2.0.3.incubator</require>
<require extend="false" filter="(&amp;(package=org.apache.cxf.tools.wsdlto.frontend.jaxws.customization)(version&gt;=2.0.3.incubator))" multiple="false" name="package" optional="false">Import package org.apache.cxf.tools.wsdlto.frontend.jaxws.customization ;version=2.0.3.incubator</require>
<require extend="false" filter="(&amp;(package=org.apache.cxf.tools.wsdlto.frontend.jaxws.generators)(version&gt;=2.0.3.incubator))" multiple="false" name="package" optional="false">Import package org.apache.cxf.tools.wsdlto.frontend.jaxws.generators ;version=2.0.3.incubator</require>
<require extend="false" filter="(&amp;(package=org.apache.cxf.tools.wsdlto.frontend.jaxws.processor)(version&gt;=2.0.3.incubator))" multiple="false" name="package" optional="false">Import package org.apache.cxf.tools.wsdlto.frontend.jaxws.processor ;version=2.0.3.incubator</require>
<require extend="false" filter="(&amp;(package=org.apache.cxf.tools.wsdlto.frontend.jaxws.processor.internal)(version&gt;=2.0.3.incubator))" multiple="false" name="package" optional="false">Import package org.apache.cxf.tools.wsdlto.frontend.jaxws.processor.internal ;version=2.0.3.incubator</require>
<require extend="false" filter="(&amp;(package=org.apache.cxf.tools.wsdlto.frontend.jaxws.processor.internal.annotator)(version&gt;=2.0.3.incubator))" multiple="false" name="package" optional="false">Import package org.apache.cxf.tools.wsdlto.frontend.jaxws.processor.internal.annotator ;version=2.0.3.incubator</require>
<require extend="false" filter="(&amp;(package=org.apache.cxf.tools.wsdlto.frontend.jaxws.processor.internal.mapper)(version&gt;=2.0.3.incubator))" multiple="false" name="package" optional="false">Import package org.apache.cxf.tools.wsdlto.frontend.jaxws.processor.internal.mapper ;version=2.0.3.incubator</require>
<require extend="false" filter="(&amp;(package=org.apache.cxf.tools.wsdlto.frontend.jaxws.template)(version&gt;=2.0.3.incubator))" multiple="false" name="package" optional="false">Import package org.apache.cxf.tools.wsdlto.frontend.jaxws.template ;version=2.0.3.incubator</require>
<require extend="false" filter="(&amp;(package=org.apache.cxf.tools.wsdlto.frontend.jaxws.validator)(version&gt;=2.0.3.incubator))" multiple="false" name="package" optional="false">Import package org.apache.cxf.tools.wsdlto.frontend.jaxws.validator ;version=2.0.3.incubator</require>
<require extend="false" filter="(&amp;(package=org.apache.cxf.tools.wsdlto.frontend.jaxws.wsdl11)(version&gt;=2.0.3.incubator))" multiple="false" name="package" optional="false">Import package org.apache.cxf.tools.wsdlto.frontend.jaxws.wsdl11 ;version=2.0.3.incubator</require>
<require extend="false" filter="(&amp;(package=org.apache.cxf.transport)(version&gt;=2.0.3.incubator))" multiple="false" name="package" optional="false">Import package org.apache.cxf.transport ;version=2.0.3.incubator</require>
<require extend="false" filter="(&amp;(package=org.apache.cxf.transport.http)(version&gt;=2.0.3.incubator))" multiple="false" name="package" optional="false">Import package org.apache.cxf.transport.http ;version=2.0.3.incubator</require>
<require extend="false" filter="(&amp;(package=org.apache.cxf.transport.http.policy)(version&gt;=2.0.3.incubator))" multiple="false" name="package" optional="false">Import package org.apache.cxf.transport.http.policy ;version=2.0.3.incubator</require>
<require extend="false" filter="(&amp;(package=org.apache.cxf.transport.http.spring)(version&gt;=2.0.3.incubator))" multiple="false" name="package" optional="false">Import package org.apache.cxf.transport.http.spring ;version=2.0.3.incubator</require>
<require extend="false" filter="(&amp;(package=org.apache.cxf.transport.http_jetty)(version&gt;=2.0.3.incubator))" multiple="false" name="package" optional="false">Import package org.apache.cxf.transport.http_jetty ;version=2.0.3.incubator</require>
<require extend="false" filter="(&amp;(package=org.apache.cxf.transport.http_jetty.spring)(version&gt;=2.0.3.incubator))" multiple="false" name="package" optional="false">Import package org.apache.cxf.transport.http_jetty.spring ;version=2.0.3.incubator</require>
<require extend="false" filter="(&amp;(package=org.apache.cxf.transport.https)(version&gt;=2.0.3.incubator))" multiple="false" name="package" optional="false">Import package org.apache.cxf.transport.https ;version=2.0.3.incubator</require>
<require extend="false" filter="(&amp;(package=org.apache.cxf.transport.https_jetty)(version&gt;=2.0.3.incubator))" multiple="false" name="package" optional="false">Import package org.apache.cxf.transport.https_jetty ;version=2.0.3.incubator</require>
<require extend="false" filter="(&amp;(package=org.apache.cxf.transport.jms)(version&gt;=2.0.3.incubator))" multiple="false" name="package" optional="false">Import package org.apache.cxf.transport.jms ;version=2.0.3.incubator</require>
<require extend="false" filter="(&amp;(package=org.apache.cxf.transport.jms.spring)(version&gt;=2.0.3.incubator))" multiple="false" name="package" optional="false">Import package org.apache.cxf.transport.jms.spring ;version=2.0.3.incubator</require>
<require extend="false" filter="(&amp;(package=org.apache.cxf.transport.jms.wsdl11)(version&gt;=2.0.3.incubator))" multiple="false" name="package" optional="false">Import package org.apache.cxf.transport.jms.wsdl11 ;version=2.0.3.incubator</require>
<require extend="false" filter="(&amp;(package=org.apache.cxf.transport.local)(version&gt;=2.0.3.incubator))" multiple="false" name="package" optional="false">Import package org.apache.cxf.transport.local ;version=2.0.3.incubator</require>
<require extend="false" filter="(&amp;(package=org.apache.cxf.transport.servlet)(version&gt;=2.0.3.incubator))" multiple="false" name="package" optional="false">Import package org.apache.cxf.transport.servlet ;version=2.0.3.incubator</require>
<require extend="false" filter="(&amp;(package=org.apache.cxf.transports.http)(version&gt;=2.0.3.incubator))" multiple="false" name="package" optional="false">Import package org.apache.cxf.transports.http ;version=2.0.3.incubator</require>
<require extend="false" filter="(&amp;(package=org.apache.cxf.transports.http.configuration)(version&gt;=2.0.3.incubator))" multiple="false" name="package" optional="false">Import package org.apache.cxf.transports.http.configuration ;version=2.0.3.incubator</require>
<require extend="false" filter="(&amp;(package=org.apache.cxf.transports.http_jetty.configuration)(version&gt;=2.0.3.incubator))" multiple="false" name="package" optional="false">Import package org.apache.cxf.transports.http_jetty.configuration ;version=2.0.3.incubator</require>
<require extend="false" filter="(&amp;(package=org.apache.cxf.version)(version&gt;=2.0.3.incubator))" multiple="false" name="package" optional="false">Import package org.apache.cxf.version ;version=2.0.3.incubator</require>
<require extend="false" filter="(&amp;(package=org.apache.cxf.workqueue)(version&gt;=2.0.3.incubator))" multiple="false" name="package" optional="false">Import package org.apache.cxf.workqueue ;version=2.0.3.incubator</require>
<require extend="false" filter="(&amp;(package=org.apache.cxf.ws.addressing)(version&gt;=2.0.3.incubator))" multiple="false" name="package" optional="false">Import package org.apache.cxf.ws.addressing ;version=2.0.3.incubator</require>
<require extend="false" filter="(&amp;(package=org.apache.cxf.ws.addressing.policy)(version&gt;=2.0.3.incubator))" multiple="false" name="package" optional="false">Import package org.apache.cxf.ws.addressing.policy ;version=2.0.3.incubator</require>
<require extend="false" filter="(&amp;(package=org.apache.cxf.ws.addressing.soap)(version&gt;=2.0.3.incubator))" multiple="false" name="package" optional="false">Import package org.apache.cxf.ws.addressing.soap ;version=2.0.3.incubator</require>
<require extend="false" filter="(&amp;(package=org.apache.cxf.ws.addressing.spring)(version&gt;=2.0.3.incubator))" multiple="false" name="package" optional="false">Import package org.apache.cxf.ws.addressing.spring ;version=2.0.3.incubator</require>
<require extend="false" filter="(&amp;(package=org.apache.cxf.ws.addressing.v200408)(version&gt;=2.0.3.incubator))" multiple="false" name="package" optional="false">Import package org.apache.cxf.ws.addressing.v200408 ;version=2.0.3.incubator</require>
<require extend="false" filter="(&amp;(package=org.apache.cxf.ws.addressing.wsdl)(version&gt;=2.0.3.incubator))" multiple="false" name="package" optional="false">Import package org.apache.cxf.ws.addressing.wsdl ;version=2.0.3.incubator</require>
<require extend="false" filter="(&amp;(package=org.apache.cxf.ws.policy)(version&gt;=2.0.3.incubator))" multiple="false" name="package" optional="false">Import package org.apache.cxf.ws.policy ;version=2.0.3.incubator</require>
<require extend="false" filter="(&amp;(package=org.apache.cxf.ws.policy.attachment)(version&gt;=2.0.3.incubator))" multiple="false" name="package" optional="false">Import package org.apache.cxf.ws.policy.attachment ;version=2.0.3.incubator</require>
<require extend="false" filter="(&amp;(package=org.apache.cxf.ws.policy.attachment.external)(version&gt;=2.0.3.incubator))" multiple="false" name="package" optional="false">Import package org.apache.cxf.ws.policy.attachment.external ;version=2.0.3.incubator</require>
<require extend="false" filter="(&amp;(package=org.apache.cxf.ws.policy.attachment.reference)(version&gt;=2.0.3.incubator))" multiple="false" name="package" optional="false">Import package org.apache.cxf.ws.policy.attachment.reference ;version=2.0.3.incubator</require>
<require extend="false" filter="(&amp;(package=org.apache.cxf.ws.policy.attachment.wsdl11)(version&gt;=2.0.3.incubator))" multiple="false" name="package" optional="false">Import package org.apache.cxf.ws.policy.attachment.wsdl11 ;version=2.0.3.incubator</require>
<require extend="false" filter="(&amp;(package=org.apache.cxf.ws.policy.builder.jaxb)(version&gt;=2.0.3.incubator))" multiple="false" name="package" optional="false">Import package org.apache.cxf.ws.policy.builder.jaxb ;version=2.0.3.incubator</require>
<require extend="false" filter="(&amp;(package=org.apache.cxf.ws.policy.builder.primitive)(version&gt;=2.0.3.incubator))" multiple="false" name="package" optional="false">Import package org.apache.cxf.ws.policy.builder.primitive ;version=2.0.3.incubator</require>
<require extend="false" filter="(&amp;(package=org.apache.cxf.ws.policy.builder.xml)(version&gt;=2.0.3.incubator))" multiple="false" name="package" optional="false">Import package org.apache.cxf.ws.policy.builder.xml ;version=2.0.3.incubator</require>
<require extend="false" filter="(&amp;(package=org.apache.cxf.ws.policy.mtom)(version&gt;=2.0.3.incubator))" multiple="false" name="package" optional="false">Import package org.apache.cxf.ws.policy.mtom ;version=2.0.3.incubator</require>
<require extend="false" filter="(&amp;(package=org.apache.cxf.ws.policy.selector)(version&gt;=2.0.3.incubator))" multiple="false" name="package" optional="false">Import package org.apache.cxf.ws.policy.selector ;version=2.0.3.incubator</require>
<require extend="false" filter="(&amp;(package=org.apache.cxf.ws.policy.spring)(version&gt;=2.0.3.incubator))" multiple="false" name="package" optional="false">Import package org.apache.cxf.ws.policy.spring ;version=2.0.3.incubator</require>
<require extend="false" filter="(&amp;(package=org.apache.cxf.ws.policy.util)(version&gt;=2.0.3.incubator))" multiple="false" name="package" optional="false">Import package org.apache.cxf.ws.policy.util ;version=2.0.3.incubator</require>
<require extend="false" filter="(&amp;(package=org.apache.cxf.ws.policy.v200409)(version&gt;=2.0.3.incubator))" multiple="false" name="package" optional="false">Import package org.apache.cxf.ws.policy.v200409 ;version=2.0.3.incubator</require>
<require extend="false" filter="(&amp;(package=org.apache.cxf.ws.policy.v200607)(version&gt;=2.0.3.incubator))" multiple="false" name="package" optional="false">Import package org.apache.cxf.ws.policy.v200607 ;version=2.0.3.incubator</require>
<require extend="false" filter="(&amp;(package=org.apache.cxf.ws.rm)(version&gt;=2.0.3.incubator))" multiple="false" name="package" optional="false">Import package org.apache.cxf.ws.rm ;version=2.0.3.incubator</require>
<require extend="false" filter="(&amp;(package=org.apache.cxf.ws.rm.feature)(version&gt;=2.0.3.incubator))" multiple="false" name="package" optional="false">Import package org.apache.cxf.ws.rm.feature ;version=2.0.3.incubator</require>
<require extend="false" filter="(&amp;(package=org.apache.cxf.ws.rm.manager)(version&gt;=2.0.3.incubator))" multiple="false" name="package" optional="false">Import package org.apache.cxf.ws.rm.manager ;version=2.0.3.incubator</require>
<require extend="false" filter="(&amp;(package=org.apache.cxf.ws.rm.persistence)(version&gt;=2.0.3.incubator))" multiple="false" name="package" optional="false">Import package org.apache.cxf.ws.rm.persistence ;version=2.0.3.incubator</require>
<require extend="false" filter="(&amp;(package=org.apache.cxf.ws.rm.persistence.jdbc)(version&gt;=2.0.3.incubator))" multiple="false" name="package" optional="false">Import package org.apache.cxf.ws.rm.persistence.jdbc ;version=2.0.3.incubator</require>
<require extend="false" filter="(&amp;(package=org.apache.cxf.ws.rm.policy)(version&gt;=2.0.3.incubator))" multiple="false" name="package" optional="false">Import package org.apache.cxf.ws.rm.policy ;version=2.0.3.incubator</require>
<require extend="false" filter="(&amp;(package=org.apache.cxf.ws.rm.soap)(version&gt;=2.0.3.incubator))" multiple="false" name="package" optional="false">Import package org.apache.cxf.ws.rm.soap ;version=2.0.3.incubator</require>
<require extend="false" filter="(&amp;(package=org.apache.cxf.ws.rm.spring)(version&gt;=2.0.3.incubator))" multiple="false" name="package" optional="false">Import package org.apache.cxf.ws.rm.spring ;version=2.0.3.incubator</require>
<require extend="false" filter="(&amp;(package=org.apache.cxf.ws.security.wss4j)(version&gt;=2.0.3.incubator))" multiple="false" name="package" optional="false">Import package org.apache.cxf.ws.security.wss4j ;version=2.0.3.incubator</require>
<require extend="false" filter="(&amp;(package=org.apache.cxf.wsdl)(version&gt;=2.0.3.incubator))" multiple="false" name="package" optional="false">Import package org.apache.cxf.wsdl ;version=2.0.3.incubator</require>
<require extend="false" filter="(&amp;(package=org.apache.cxf.wsdl11)(version&gt;=2.0.3.incubator))" multiple="false" name="package" optional="false">Import package org.apache.cxf.wsdl11 ;version=2.0.3.incubator</require>
<require extend="false" filter="(&amp;(package=org.apache.cxf.xjc.dv)(version&gt;=2.0.3.incubator))" multiple="false" name="package" optional="false">Import package org.apache.cxf.xjc.dv ;version=2.0.3.incubator</require>
<require extend="false" filter="(&amp;(package=org.apache.cxf.xjc.ts)(version&gt;=2.0.3.incubator))" multiple="false" name="package" optional="false">Import package org.apache.cxf.xjc.ts ;version=2.0.3.incubator</require>
<require extend="false" filter="(&amp;(package=org.apache.log4j)(version&gt;=0.0.0))" multiple="false" name="package" optional="true">Import package org.apache.log4j</require>
<require extend="false" filter="(&amp;(package=org.apache.log4j.spi)(version&gt;=0.0.0))" multiple="false" name="package" optional="true">Import package org.apache.log4j.spi</require>
<require extend="false" filter="(&amp;(package=org.apache.tools.ant)(version&gt;=0.0.0))" multiple="false" name="package" optional="true">Import package org.apache.tools.ant</require>
<require extend="false" filter="(&amp;(package=org.apache.tools.ant.types)(version&gt;=0.0.0))" multiple="false" name="package" optional="true">Import package org.apache.tools.ant.types</require>
<require extend="false" filter="(&amp;(package=org.apache.velocity)(version&gt;=0.0.0))" multiple="false" name="package" optional="true">Import package org.apache.velocity</require>
<require extend="false" filter="(&amp;(package=org.apache.velocity.app)(version&gt;=0.0.0))" multiple="false" name="package" optional="true">Import package org.apache.velocity.app</require>
<require extend="false" filter="(&amp;(package=org.apache.velocity.context)(version&gt;=0.0.0))" multiple="false" name="package" optional="true">Import package org.apache.velocity.context</require>
<require extend="false" filter="(&amp;(package=org.apache.ws.commons.schema)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package org.apache.ws.commons.schema</require>
<require extend="false" filter="(&amp;(package=org.apache.ws.commons.schema.constants)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package org.apache.ws.commons.schema.constants</require>
<require extend="false" filter="(&amp;(package=org.apache.ws.commons.schema.extensions)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package org.apache.ws.commons.schema.extensions</require>
<require extend="false" filter="(&amp;(package=org.apache.ws.commons.schema.resolver)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package org.apache.ws.commons.schema.resolver</require>
<require extend="false" filter="(&amp;(package=org.apache.ws.commons.schema.utils)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package org.apache.ws.commons.schema.utils</require>
<require extend="false" filter="(&amp;(package=org.apache.ws.security)(version&gt;=0.0.0))" multiple="false" name="package" optional="true">Import package org.apache.ws.security</require>
<require extend="false" filter="(&amp;(package=org.apache.ws.security.components.crypto)(version&gt;=0.0.0))" multiple="false" name="package" optional="true">Import package org.apache.ws.security.components.crypto</require>
<require extend="false" filter="(&amp;(package=org.apache.ws.security.handler)(version&gt;=0.0.0))" multiple="false" name="package" optional="true">Import package org.apache.ws.security.handler</require>
<require extend="false" filter="(&amp;(package=org.apache.ws.security.message.token)(version&gt;=0.0.0))" multiple="false" name="package" optional="true">Import package org.apache.ws.security.message.token</require>
<require extend="false" filter="(&amp;(package=org.apache.ws.security.util)(version&gt;=0.0.0))" multiple="false" name="package" optional="true">Import package org.apache.ws.security.util</require>
<require extend="false" filter="(&amp;(package=org.apache.xmlbeans)(version&gt;=0.0.0))" multiple="false" name="package" optional="true">Import package org.apache.xmlbeans</require>
<require extend="false" filter="(&amp;(package=org.codehaus.jra)(version&gt;=0.0.0))" multiple="false" name="package" optional="true">Import package org.codehaus.jra</require>
<require extend="false" filter="(&amp;(package=org.jdom)(version&gt;=0.0.0))" multiple="false" name="package" optional="true">Import package org.jdom</require>
<require extend="false" filter="(&amp;(package=org.jdom.input)(version&gt;=0.0.0))" multiple="false" name="package" optional="true">Import package org.jdom.input</require>
<require extend="false" filter="(&amp;(package=org.jdom.output)(version&gt;=0.0.0))" multiple="false" name="package" optional="true">Import package org.jdom.output</require>
<require extend="false" filter="(&amp;(package=org.jdom.xpath)(version&gt;=0.0.0))" multiple="false" name="package" optional="true">Import package org.jdom.xpath</require>
<require extend="false" filter="(&amp;(package=org.junit)(version&gt;=0.0.0))" multiple="false" name="package" optional="true">Import package org.junit</require>
<require extend="false" filter="(&amp;(package=org.mortbay.jetty)(version&gt;=0.0.0))" multiple="false" name="package" optional="true">Import package org.mortbay.jetty</require>
<require extend="false" filter="(&amp;(package=org.mortbay.jetty.bio)(version&gt;=0.0.0))" multiple="false" name="package" optional="true">Import package org.mortbay.jetty.bio</require>
<require extend="false" filter="(&amp;(package=org.mortbay.jetty.handler)(version&gt;=0.0.0))" multiple="false" name="package" optional="true">Import package org.mortbay.jetty.handler</require>
<require extend="false" filter="(&amp;(package=org.mortbay.jetty.nio)(version&gt;=0.0.0))" multiple="false" name="package" optional="true">Import package org.mortbay.jetty.nio</require>
<require extend="false" filter="(&amp;(package=org.mortbay.jetty.security)(version&gt;=0.0.0))" multiple="false" name="package" optional="true">Import package org.mortbay.jetty.security</require>
<require extend="false" filter="(&amp;(package=org.mortbay.jetty.servlet)(version&gt;=0.0.0))" multiple="false" name="package" optional="true">Import package org.mortbay.jetty.servlet</require>
<require extend="false" filter="(&amp;(package=org.mortbay.thread)(version&gt;=0.0.0))" multiple="false" name="package" optional="true">Import package org.mortbay.thread</require>
<require extend="false" filter="(&amp;(package=org.mozilla.javascript)(version&gt;=0.0.0))" multiple="false" name="package" optional="true">Import package org.mozilla.javascript</require>
<require extend="false" filter="(&amp;(package=org.objectweb.asm)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package org.objectweb.asm</require>
<require extend="false" filter="(&amp;(package=org.springframework.beans)(version&gt;=0.0.0))" multiple="false" name="package" optional="true">Import package org.springframework.beans</require>
<require extend="false" filter="(&amp;(package=org.springframework.beans.factory)(version&gt;=0.0.0))" multiple="false" name="package" optional="true">Import package org.springframework.beans.factory</require>
<require extend="false" filter="(&amp;(package=org.springframework.beans.factory.config)(version&gt;=0.0.0))" multiple="false" name="package" optional="true">Import package org.springframework.beans.factory.config</require>
<require extend="false" filter="(&amp;(package=org.springframework.beans.factory.support)(version&gt;=0.0.0))" multiple="false" name="package" optional="true">Import package org.springframework.beans.factory.support</require>
<require extend="false" filter="(&amp;(package=org.springframework.beans.factory.wiring)(version&gt;=0.0.0))" multiple="false" name="package" optional="true">Import package org.springframework.beans.factory.wiring</require>
<require extend="false" filter="(&amp;(package=org.springframework.beans.factory.xml)(version&gt;=0.0.0))" multiple="false" name="package" optional="true">Import package org.springframework.beans.factory.xml</require>
<require extend="false" filter="(&amp;(package=org.springframework.context)(version&gt;=0.0.0))" multiple="false" name="package" optional="true">Import package org.springframework.context</require>
<require extend="false" filter="(&amp;(package=org.springframework.context.support)(version&gt;=0.0.0))" multiple="false" name="package" optional="true">Import package org.springframework.context.support</require>
<require extend="false" filter="(&amp;(package=org.springframework.core)(version&gt;=0.0.0))" multiple="false" name="package" optional="true">Import package org.springframework.core</require>
<require extend="false" filter="(&amp;(package=org.springframework.core.io)(version&gt;=0.0.0))" multiple="false" name="package" optional="true">Import package org.springframework.core.io</require>
<require extend="false" filter="(&amp;(package=org.springframework.core.io.support)(version&gt;=0.0.0))" multiple="false" name="package" optional="true">Import package org.springframework.core.io.support</require>
<require extend="false" filter="(&amp;(package=org.springframework.util)(version&gt;=0.0.0))" multiple="false" name="package" optional="true">Import package org.springframework.util</require>
<require extend="false" filter="(&amp;(package=org.w3c.dom)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package org.w3c.dom</require>
<require extend="false" filter="(&amp;(package=org.w3c.dom.bootstrap)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package org.w3c.dom.bootstrap</require>
<require extend="false" filter="(&amp;(package=org.w3c.dom.ls)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package org.w3c.dom.ls</require>
<require extend="false" filter="(&amp;(package=org.xml.sax)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package org.xml.sax</require>
<require extend="false" filter="(&amp;(package=org.xml.sax.helpers)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package org.xml.sax.helpers</require>
<require extend="false" filter="(&amp;(package=sun.misc)(version&gt;=0.0.0))" multiple="false" name="package" optional="true">Import package sun.misc</require>
</resource>
<resource id="80" presentationname="ServiceMix OSGI Common Bundles: jaxb-api" symbolicname="org.apache.servicemix.bundles.jaxb-api" uri="http://people.apache.org/repo/m2-snapshot-repository/org/apache/servicemix/bundles/org.apache.servicemix.bundles.jaxb-api/2.0-4.0-SNAPSHOT/org.apache.servicemix.bundles.jaxb-api-2.0-4.0-SNAPSHOT.jar" version="2.0.0.SNAPSHOT">
<description>This bundle simply wraps jaxb-api-2.0.jar.</description>
<size>77406</size>
<category id="org.apache.servicemix.bundles"/>
<capability name="bundle">
<p n="manifestversion" v="2"/>
<p n="presentationname" v="ServiceMix OSGI Common Bundles: jaxb-api"/>
<p n="symbolicname" v="org.apache.servicemix.bundles.jaxb-api"/>
<p n="version" t="version" v="2.0.0.SNAPSHOT"/>
</capability>
<capability name="package">
<p n="package" v="javax.xml.bind.attachment"/>
<p n="uses:" v="javax.activation"/>
<p n="version" t="version" v="2.0.0"/>
</capability>
<capability name="package">
<p n="package" v="javax.xml.bind.helpers"/>
<p n="uses:" v="javax.xml.bind.attachment,org.xml.sax,org.w3c.dom,javax.xml.bind.annotation.adapters,javax.xml.transform,javax.xml.transform.dom,javax.xml.transform.sax,javax.xml.validation,javax.xml.parsers,javax.xml.bind,javax.xml.transform.stream,javax.xml.stream"/>
<p n="version" t="version" v="2.0.0"/>
</capability>
<capability name="package">
<p n="package" v="javax.xml.bind.util"/>
<p n="uses:" v="javax.xml.transform.sax,org.xml.sax,org.xml.sax.ext,org.xml.sax.helpers,javax.xml.bind"/>
<p n="version" t="version" v="2.0.0"/>
</capability>
<capability name="package">
<p n="package" v="javax.xml.bind.annotation.adapters"/>
<p n="uses:" v="javax.xml.bind"/>
<p n="version" t="version" v="2.0.0"/>
</capability>
<capability name="package">
<p n="package" v="javax.xml.bind.annotation"/>
<p n="uses:" v="javax.xml.transform.dom,javax.xml.parsers,org.w3c.dom,javax.xml.bind,javax.xml.transform"/>
<p n="version" t="version" v="2.0.0"/>
</capability>
<capability name="package">
<p n="package" v="javax.xml.bind"/>
<p n="uses:" v="javax.xml.bind.attachment,org.xml.sax,javax.xml.namespace,org.w3c.dom,javax.xml.bind.annotation.adapters,javax.xml.transform,javax.xml.validation,javax.xml.stream"/>
<p n="version" t="version" v="2.0.0"/>
</capability>
<require extend="false" filter="(&amp;(package=javax.activation)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package javax.activation</require>
<require extend="false" filter="(&amp;(package=javax.xml.bind)(version&gt;=2.0.0))" multiple="false" name="package" optional="false">Import package javax.xml.bind ;version=2.0.0</require>
<require extend="false" filter="(&amp;(package=javax.xml.bind.annotation)(version&gt;=2.0.0))" multiple="false" name="package" optional="false">Import package javax.xml.bind.annotation ;version=2.0.0</require>
<require extend="false" filter="(&amp;(package=javax.xml.bind.annotation.adapters)(version&gt;=2.0.0))" multiple="false" name="package" optional="false">Import package javax.xml.bind.annotation.adapters ;version=2.0.0</require>
<require extend="false" filter="(&amp;(package=javax.xml.bind.attachment)(version&gt;=2.0.0))" multiple="false" name="package" optional="false">Import package javax.xml.bind.attachment ;version=2.0.0</require>
<require extend="false" filter="(&amp;(package=javax.xml.bind.helpers)(version&gt;=2.0.0))" multiple="false" name="package" optional="false">Import package javax.xml.bind.helpers ;version=2.0.0</require>
<require extend="false" filter="(&amp;(package=javax.xml.bind.util)(version&gt;=2.0.0))" multiple="false" name="package" optional="false">Import package javax.xml.bind.util ;version=2.0.0</require>
<require extend="false" filter="(&amp;(package=javax.xml.namespace)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package javax.xml.namespace</require>
<require extend="false" filter="(&amp;(package=javax.xml.parsers)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package javax.xml.parsers</require>
<require extend="false" filter="(&amp;(package=javax.xml.stream)(version&gt;=0.0.0))" multiple="false" name="package" optional="true">Import package javax.xml.stream</require>
<require extend="false" filter="(&amp;(package=javax.xml.transform)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package javax.xml.transform</require>
<require extend="false" filter="(&amp;(package=javax.xml.transform.dom)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package javax.xml.transform.dom</require>
<require extend="false" filter="(&amp;(package=javax.xml.transform.sax)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package javax.xml.transform.sax</require>
<require extend="false" filter="(&amp;(package=javax.xml.transform.stream)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package javax.xml.transform.stream</require>
<require extend="false" filter="(&amp;(package=javax.xml.validation)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package javax.xml.validation</require>
<require extend="false" filter="(&amp;(package=org.w3c.dom)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package org.w3c.dom</require>
<require extend="false" filter="(&amp;(package=org.xml.sax)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package org.xml.sax</require>
<require extend="false" filter="(&amp;(package=org.xml.sax.ext)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package org.xml.sax.ext</require>
<require extend="false" filter="(&amp;(package=org.xml.sax.helpers)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package org.xml.sax.helpers</require>
</resource>
<resource id="81" presentationname="ServiceMix OSGI Common Bundles: jaxb-impl" symbolicname="org.apache.servicemix.bundles.jaxb-impl" uri="http://people.apache.org/repo/m2-snapshot-repository/org/apache/servicemix/bundles/org.apache.servicemix.bundles.jaxb-impl/2.0.3-4.0-SNAPSHOT/org.apache.servicemix.bundles.jaxb-impl-2.0.3-4.0-SNAPSHOT.jar" version="2.0.3.SNAPSHOT">
<description>This bundle simply wraps jaxb-impl-2.0.3.jar.</description>
<size>797792</size>
<category id="org.apache.servicemix.bundles"/>
<capability name="bundle">
<p n="manifestversion" v="2"/>
<p n="presentationname" v="ServiceMix OSGI Common Bundles: jaxb-impl"/>
<p n="symbolicname" v="org.apache.servicemix.bundles.jaxb-impl"/>
<p n="version" t="version" v="2.0.3.SNAPSHOT"/>
</capability>
<capability name="package">
<p n="package" v="com.sun.xml.bind.v2"/>
<p n="uses:" v="com.sun.xml.bind,com.sun.xml.bind.v2.runtime,javax.xml.bind,com.sun.istack"/>
<p n="version" t="version" v="0.0.0"/>
</capability>
<capability name="package">
<p n="package" v="com.sun.xml.txw2"/>
<p n="uses:" v="com.sun.xml.txw2.annotation,javax.xml.namespace,com.sun.xml.txw2.output"/>
<p n="version" t="version" v="2.0.3"/>
</capability>
<capability name="package">
<p n="package" v="com.sun.xml.bind.v2.model.annotation"/>
<p n="uses:" v="com.sun.xml.bind.v2.model.nav,com.sun.xml.bind.v2.model.core,com.sun.xml.bind.v2.runtime,javax.xml.bind.annotation"/>
<p n="version" t="version" v="0.0.0"/>
</capability>
<capability name="package">
<p n="package" v="com.sun.xml.bind.unmarshaller"/>
<p n="uses:" v="org.xml.sax,com.sun.xml.bind.v2.runtime.unmarshaller,javax.xml.bind.helpers,org.xml.sax.helpers,org.w3c.dom,javax.xml.bind"/>
<p n="version" t="version" v="0.0.0"/>
</capability>
<capability name="package">
<p n="package" v="com.sun.xml.bind.api.impl"/>
<p n="version" t="version" v="0.0.0"/>
</capability>
<capability name="package">
<p n="package" v="com.sun.xml.txw2.output"/>
<p n="uses:" v="org.xml.sax,com.sun.xml.txw2,org.w3c.dom,javax.xml.transform,javax.xml.transform.dom,javax.xml.transform.sax,org.xml.sax.ext,org.xml.sax.helpers,javax.xml.parsers,javax.xml.transform.stream,javax.xml.stream"/>
<p n="version" t="version" v="2.0.3"/>
</capability>
<capability name="package">
<p n="package" v="com.sun.xml.bind.v2.util"/>
<p n="uses:" v="org.xml.sax,com.sun.xml.bind.v2.runtime.unmarshaller,com.sun.xml.bind.v2.runtime,javax.xml.namespace,javax.activation,javax.xml.transform.stream"/>
<p n="version" t="version" v="0.0.0"/>
</capability>
<capability name="package">
<p n="package" v="com.sun.xml.bind.v2.runtime.unmarshaller"/>
<p n="uses:" v="com.sun.xml.bind.v2,javax.xml.stream.events,javax.xml.bind.attachment,javax.xml.namespace,com.sun.xml.bind.unmarshaller,javax.xml.bind.annotation.adapters,com.sun.xml.fastinfoset.sax,javax.xml.transform,com.sun.xml.bind.v2.util,javax.xml.validation,org.jvnet.staxex,javax.xml.transform.stream,com.sun.istack,javax.xml.stream,com.sun.xml.bind,com.sun.xml.bind.v2.model.core,com.sun.xml.bind.v2.runtime.output,org.xml.sax,javax.activation,org.w3c.dom,com.sun.xml.bind.api,javax.xml.bind.annotation,javax.xml.transform.dom,javax.xml.transform.sax,com.sun.xml.bind.util,com.sun.xml.bind.v2.runtime.reflect,org.xml.sax.helpers,com.sun.xml.bind.v2.runtime,javax.xml.bind.helpers,javax.xml.bind,com.sun.xml.fastinfoset.stax,com.sun.xml.bind.v2.runtime.property"/>
<p n="version" t="version" v="0.0.0"/>
</capability>
<capability name="package">
<p n="package" v="com.sun.xml.bind.marshaller"/>
<p n="uses:" v="com.sun.xml.bind.util,org.xml.sax,org.xml.sax.helpers,javax.xml.parsers,org.w3c.dom,com.sun.istack"/>
<p n="version" t="version" v="0.0.0"/>
</capability>
<capability name="package">
<p n="package" v="com.sun.xml.bind.v2.model.runtime"/>
<p n="uses:" v="com.sun.xml.bind.v2.model.nav,com.sun.xml.bind.v2.model.core,com.sun.xml.bind.v2.runtime.reflect,com.sun.xml.bind.v2.runtime,javax.xml.namespace,javax.xml.bind.annotation"/>
<p n="version" t="version" v="0.0.0"/>
</capability>
<capability name="package">
<p n="package" v="com.sun.xml.bind.v2.runtime.reflect.opt"/>
<p n="uses:" v="com.sun.xml.bind,com.sun.xml.bind.v2.model.core,org.xml.sax,com.sun.xml.bind.v2.bytecode,com.sun.xml.bind.api,com.sun.xml.bind.v2.runtime.reflect,com.sun.xml.bind.v2.runtime,com.sun.xml.bind.v2.model.runtime,javax.xml.stream"/>
<p n="version" t="version" v="0.0.0"/>
</capability>
<capability name="package">
<p n="package" v="com.sun.xml.bind.v2.schemagen.xmlschema"/>
<p n="uses:" v="com.sun.xml.txw2.annotation,com.sun.xml.txw2,javax.xml.namespace"/>
<p n="version" t="version" v="0.0.0"/>
</capability>
<capability name="package">
<p n="package" v="com.sun.istack"/>
<p n="uses:" v="org.xml.sax,org.xml.sax.helpers,javax.activation"/>
<p n="version" t="version" v="0.0.0"/>
</capability>
<capability name="package">
<p n="package" v="com.sun.xml.bind"/>
<p n="uses:" v="com.sun.xml.bind.v2,org.xml.sax,javax.xml.namespace,javax.xml.bind,javax.xml.datatype"/>
<p n="version" t="version" v="0.0.0"/>
</capability>
<capability name="package">
<p n="package" v="com.sun.xml.bind.v2.model.core"/>
<p n="uses:" v="com.sun.xml.bind.v2.model.nav,com.sun.xml.bind.v2.model.annotation,javax.activation,com.sun.xml.bind.v2.runtime,javax.xml.namespace,javax.xml.bind.annotation.adapters,com.sun.xml.bind.v2.model.impl,javax.xml.bind,javax.xml.bind.annotation,javax.xml.transform"/>
<p n="version" t="version" v="0.0.0"/>
</capability>
<capability name="package">
<p n="package" v="com.sun.xml.bind.v2.runtime.output"/>
<p n="uses:" v="javax.xml.stream.events,com.sun.xml.bind,javax.xml.bind.attachment,org.xml.sax,javax.activation,org.w3c.dom,com.sun.xml.bind.util,com.sun.xml.bind.v2.runtime.unmarshaller,org.xml.sax.helpers,com.sun.xml.bind.v2.runtime,com.sun.xml.bind.marshaller,org.jvnet.staxex,com.sun.xml.fastinfoset.stax,com.sun.istack,javax.xml.stream"/>
<p n="version" t="version" v="0.0.0"/>
</capability>
<capability name="package">
<p n="package" v="com.sun.xml.bind.v2.bytecode"/>
<p n="uses:" v="com.sun.xml.bind"/>
<p n="version" t="version" v="0.0.0"/>
</capability>
<capability name="package">
<p n="package" v="com.sun.xml.bind.api"/>
<p n="uses:" v="javax.xml.bind.attachment,org.xml.sax,javax.xml.namespace,org.w3c.dom,com.sun.xml.bind.api.impl,javax.xml.transform,com.sun.xml.bind.v2.model.nav,com.sun.xml.bind.v2.runtime.unmarshaller,com.sun.xml.bind.v2.runtime,javax.xml.bind,javax.xml.stream,com.sun.istack"/>
<p n="version" t="version" v="0.0.0"/>
</capability>
<capability name="package">
<p n="package" v="com.sun.xml.bind.v2.model.impl"/>
<p n="uses:" v="com.sun.xml.bind.v2,com.sun.xml.bind.v2.model.annotation,javax.xml.namespace,javax.xml.bind.annotation.adapters,com.sun.xml.bind.api.impl,javax.xml.datatype,javax.xml.transform,com.sun.xml.bind.v2.util,com.sun.xml.bind.v2.runtime.unmarshaller,com.sun.xml.bind.v2.model.runtime,javax.xml.transform.stream,com.sun.istack,javax.xml.stream,com.sun.xml.bind,com.sun.xml.bind.v2.model.core,org.xml.sax,com.sun.xml.bind.v2.runtime.output,javax.imageio,javax.activation,com.sun.xml.bind.api,javax.xml.bind.annotation,javax.imageio.stream,com.sun.xml.bind.v2.model.nav,com.sun.xml.bind.v2.runtime.reflect,javax.xml.bind.helpers,com.sun.xml.bind.v2.runtime,javax.xml.bind,com.sun.xml.bind.annotation"/>
<p n="version" t="version" v="0.0.0"/>
</capability>
<capability name="package">
<p n="package" v="com.sun.xml.bind.v2.model.nav"/>
<p n="uses:" v="com.sun.xml.bind.v2.runtime"/>
<p n="version" t="version" v="0.0.0"/>
</capability>
<capability name="package">
<p n="package" v="com.sun.xml.txw2.annotation"/>
<p n="version" t="version" v="2.0.3"/>
</capability>
<capability name="package">
<p n="package" v="com.sun.xml.bind.v2.schemagen"/>
<p n="uses:" v="com.sun.xml.bind.v2,com.sun.xml.bind,com.sun.xml.bind.v2.model.core,com.sun.xml.txw2,javax.activation,javax.xml.namespace,com.sun.xml.bind.api,javax.xml.bind.annotation,com.sun.xml.txw2.output,javax.xml.transform,com.sun.xml.bind.v2.model.nav,com.sun.xml.bind.v2.runtime,javax.xml.transform.stream,javax.xml.bind,com.sun.xml.bind.v2.schemagen.xmlschema"/>
<p n="version" t="version" v="0.0.0"/>
</capability>
<capability name="package">
<p n="package" v="com.sun.xml.bind.util"/>
<p n="uses:" v="com.sun.xml.bind,org.xml.sax,javax.xml.bind.helpers,org.w3c.dom"/>
<p n="version" t="version" v="0.0.0"/>
</capability>
<capability name="package">
<p n="package" v="com.sun.xml.bind.v2.runtime.reflect"/>
<p n="uses:" v="com.sun.xml.bind.v2,com.sun.xml.bind,com.sun.xml.bind.v2.model.core,org.xml.sax,javax.xml.bind.annotation.adapters,com.sun.xml.bind.api,com.sun.xml.bind.v2.model.impl,com.sun.xml.bind.v2.model.nav,com.sun.xml.bind.v2.runtime.unmarshaller,com.sun.xml.bind.v2.runtime,com.sun.xml.bind.v2.model.runtime,javax.xml.bind,com.sun.xml.bind.v2.runtime.reflect.opt,com.sun.istack,javax.xml.stream"/>
<p n="version" t="version" v="0.0.0"/>
</capability>
<capability name="package">
<p n="package" v="com.sun.xml.bind.v2.runtime"/>
<p n="uses:" v="com.sun.xml.bind.v2,javax.xml.bind.attachment,com.sun.xml.bind.v2.model.annotation,javax.xml.namespace,com.sun.xml.bind.unmarshaller,javax.xml.bind.annotation.adapters,javax.xml.transform,com.sun.xml.bind.v2.util,com.sun.xml.bind.v2.runtime.unmarshaller,javax.xml.validation,javax.xml.parsers,com.sun.xml.bind.marshaller,com.sun.xml.bind.v2.model.runtime,javax.xml.transform.stream,com.sun.istack,javax.xml.stream,com.sun.xml.bind,com.sun.xml.bind.v2.model.core,org.xml.sax,com.sun.xml.bind.v2.runtime.output,javax.activation,org.w3c.dom,com.sun.xml.bind.api,com.sun.xml.bind.v2.model.impl,javax.xml.bind.annotation,javax.xml.transform.dom,com.sun.xml.bind.v2.model.nav,javax.xml.transform.sax,com.sun.xml.bind.v2.schemagen,com.sun.xml.bind.util,com.sun.xml.bind.v2.runtime.reflect,org.xml.sax.helpers,javax.xml.bind.helpers,javax.xml.bind,com.sun.xml.bind.v2.runtime.property"/>
<p n="version" t="version" v="0.0.0"/>
</capability>
<capability name="package">
<p n="package" v="com.sun.xml.bind.annotation"/>
<p n="version" t="version" v="0.0.0"/>
</capability>
<capability name="package">
<p n="package" v="com.sun.xml.bind.v2.runtime.property"/>
<p n="uses:" v="com.sun.xml.bind.v2,com.sun.xml.bind.v2.model.core,org.xml.sax,javax.xml.namespace,com.sun.xml.bind.api,javax.xml.bind.annotation,com.sun.xml.bind.v2.model.nav,com.sun.xml.bind.v2.util,com.sun.xml.bind.v2.runtime.unmarshaller,com.sun.xml.bind.v2.runtime.reflect,com.sun.xml.bind.v2.runtime,com.sun.xml.bind.v2.model.runtime,javax.xml.bind,javax.xml.stream"/>
<p n="version" t="version" v="0.0.0"/>
</capability>
<require extend="false" filter="(&amp;(package=com.sun.istack)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package com.sun.istack</require>
<require extend="false" filter="(&amp;(package=com.sun.xml.bind)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package com.sun.xml.bind</require>
<require extend="false" filter="(&amp;(package=com.sun.xml.bind.annotation)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package com.sun.xml.bind.annotation</require>
<require extend="false" filter="(&amp;(package=com.sun.xml.bind.api)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package com.sun.xml.bind.api</require>
<require extend="false" filter="(&amp;(package=com.sun.xml.bind.api.impl)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package com.sun.xml.bind.api.impl</require>
<require extend="false" filter="(&amp;(package=com.sun.xml.bind.marshaller)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package com.sun.xml.bind.marshaller</require>
<require extend="false" filter="(&amp;(package=com.sun.xml.bind.unmarshaller)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package com.sun.xml.bind.unmarshaller</require>
<require extend="false" filter="(&amp;(package=com.sun.xml.bind.util)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package com.sun.xml.bind.util</require>
<require extend="false" filter="(&amp;(package=com.sun.xml.bind.v2)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package com.sun.xml.bind.v2</require>
<require extend="false" filter="(&amp;(package=com.sun.xml.bind.v2.bytecode)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package com.sun.xml.bind.v2.bytecode</require>
<require extend="false" filter="(&amp;(package=com.sun.xml.bind.v2.model.annotation)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package com.sun.xml.bind.v2.model.annotation</require>
<require extend="false" filter="(&amp;(package=com.sun.xml.bind.v2.model.core)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package com.sun.xml.bind.v2.model.core</require>
<require extend="false" filter="(&amp;(package=com.sun.xml.bind.v2.model.impl)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package com.sun.xml.bind.v2.model.impl</require>
<require extend="false" filter="(&amp;(package=com.sun.xml.bind.v2.model.nav)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package com.sun.xml.bind.v2.model.nav</require>
<require extend="false" filter="(&amp;(package=com.sun.xml.bind.v2.model.runtime)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package com.sun.xml.bind.v2.model.runtime</require>
<require extend="false" filter="(&amp;(package=com.sun.xml.bind.v2.runtime)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package com.sun.xml.bind.v2.runtime</require>
<require extend="false" filter="(&amp;(package=com.sun.xml.bind.v2.runtime.output)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package com.sun.xml.bind.v2.runtime.output</require>
<require extend="false" filter="(&amp;(package=com.sun.xml.bind.v2.runtime.property)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package com.sun.xml.bind.v2.runtime.property</require>
<require extend="false" filter="(&amp;(package=com.sun.xml.bind.v2.runtime.reflect)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package com.sun.xml.bind.v2.runtime.reflect</require>
<require extend="false" filter="(&amp;(package=com.sun.xml.bind.v2.runtime.reflect.opt)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package com.sun.xml.bind.v2.runtime.reflect.opt</require>
<require extend="false" filter="(&amp;(package=com.sun.xml.bind.v2.runtime.unmarshaller)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package com.sun.xml.bind.v2.runtime.unmarshaller</require>
<require extend="false" filter="(&amp;(package=com.sun.xml.bind.v2.schemagen)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package com.sun.xml.bind.v2.schemagen</require>
<require extend="false" filter="(&amp;(package=com.sun.xml.bind.v2.schemagen.xmlschema)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package com.sun.xml.bind.v2.schemagen.xmlschema</require>
<require extend="false" filter="(&amp;(package=com.sun.xml.bind.v2.util)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package com.sun.xml.bind.v2.util</require>
<require extend="false" filter="(&amp;(package=com.sun.xml.fastinfoset.sax)(version&gt;=0.0.0))" multiple="false" name="package" optional="true">Import package com.sun.xml.fastinfoset.sax</require>
<require extend="false" filter="(&amp;(package=com.sun.xml.fastinfoset.stax)(version&gt;=0.0.0))" multiple="false" name="package" optional="true">Import package com.sun.xml.fastinfoset.stax</require>
<require extend="false" filter="(&amp;(package=com.sun.xml.txw2)(version&gt;=2.0.3))" multiple="false" name="package" optional="false">Import package com.sun.xml.txw2 ;version=2.0.3</require>
<require extend="false" filter="(&amp;(package=com.sun.xml.txw2.annotation)(version&gt;=2.0.3))" multiple="false" name="package" optional="false">Import package com.sun.xml.txw2.annotation ;version=2.0.3</require>
<require extend="false" filter="(&amp;(package=com.sun.xml.txw2.output)(version&gt;=2.0.3))" multiple="false" name="package" optional="false">Import package com.sun.xml.txw2.output ;version=2.0.3</require>
<require extend="false" filter="(&amp;(package=javax.activation)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package javax.activation</require>
<require extend="false" filter="(&amp;(package=javax.imageio)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package javax.imageio</require>
<require extend="false" filter="(&amp;(package=javax.imageio.stream)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package javax.imageio.stream</require>
<require extend="false" filter="(&amp;(package=javax.xml.bind)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package javax.xml.bind</require>
<require extend="false" filter="(&amp;(package=javax.xml.bind.annotation)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package javax.xml.bind.annotation</require>
<require extend="false" filter="(&amp;(package=javax.xml.bind.annotation.adapters)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package javax.xml.bind.annotation.adapters</require>
<require extend="false" filter="(&amp;(package=javax.xml.bind.attachment)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package javax.xml.bind.attachment</require>
<require extend="false" filter="(&amp;(package=javax.xml.bind.helpers)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package javax.xml.bind.helpers</require>
<require extend="false" filter="(&amp;(package=javax.xml.datatype)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package javax.xml.datatype</require>
<require extend="false" filter="(&amp;(package=javax.xml.namespace)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package javax.xml.namespace</require>
<require extend="false" filter="(&amp;(package=javax.xml.parsers)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package javax.xml.parsers</require>
<require extend="false" filter="(&amp;(package=javax.xml.stream)(version&gt;=0.0.0))" multiple="false" name="package" optional="true">Import package javax.xml.stream</require>
<require extend="false" filter="(&amp;(package=javax.xml.stream.events)(version&gt;=0.0.0))" multiple="false" name="package" optional="true">Import package javax.xml.stream.events</require>
<require extend="false" filter="(&amp;(package=javax.xml.transform)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package javax.xml.transform</require>
<require extend="false" filter="(&amp;(package=javax.xml.transform.dom)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package javax.xml.transform.dom</require>
<require extend="false" filter="(&amp;(package=javax.xml.transform.sax)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package javax.xml.transform.sax</require>
<require extend="false" filter="(&amp;(package=javax.xml.transform.stream)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package javax.xml.transform.stream</require>
<require extend="false" filter="(&amp;(package=javax.xml.validation)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package javax.xml.validation</require>
<require extend="false" filter="(&amp;(package=org.jvnet.staxex)(version&gt;=0.0.0))" multiple="false" name="package" optional="true">Import package org.jvnet.staxex</require>
<require extend="false" filter="(&amp;(package=org.w3c.dom)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package org.w3c.dom</require>
<require extend="false" filter="(&amp;(package=org.xml.sax)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package org.xml.sax</require>
<require extend="false" filter="(&amp;(package=org.xml.sax.ext)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package org.xml.sax.ext</require>
<require extend="false" filter="(&amp;(package=org.xml.sax.helpers)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package org.xml.sax.helpers</require>
</resource>
<resource id="82" presentationname="ServiceMix OSGI Common Bundles: jaxws-api" symbolicname="org.apache.servicemix.bundles.jaxws-api" uri="http://people.apache.org/repo/m2-snapshot-repository/org/apache/servicemix/bundles/org.apache.servicemix.bundles.jaxws-api/2.0-4.0-SNAPSHOT/org.apache.servicemix.bundles.jaxws-api-2.0-4.0-SNAPSHOT.jar" version="2.0.0.SNAPSHOT">
<description>This bundle simply wraps jaxws-api-2.0.jar.</description>
<size>27047</size>
<category id="org.apache.servicemix.bundles"/>
<capability name="bundle">
<p n="manifestversion" v="2"/>
<p n="presentationname" v="ServiceMix OSGI Common Bundles: jaxws-api"/>
<p n="symbolicname" v="org.apache.servicemix.bundles.jaxws-api"/>
<p n="version" t="version" v="2.0.0.SNAPSHOT"/>
</capability>
<capability name="package">
<p n="package" v="javax.xml.ws.soap"/>
<p n="uses:" v="javax.xml.soap,javax.xml.ws"/>
<p n="version" t="version" v="2.0.0"/>
</capability>
<capability name="package">
<p n="package" v="javax.xml.ws.handler"/>
<p n="uses:" v="javax.xml.namespace,javax.xml.ws"/>
<p n="version" t="version" v="2.0.0"/>
</capability>
<capability name="package">
<p n="package" v="javax.xml.ws.http"/>
<p n="uses:" v="javax.xml.ws"/>
<p n="version" t="version" v="2.0.0"/>
</capability>
<capability name="package">
<p n="package" v="javax.xml.ws.handler.soap"/>
<p n="uses:" v="javax.xml.ws.handler,javax.xml.soap,javax.xml.namespace,javax.xml.bind"/>
<p n="version" t="version" v="2.0.0"/>
</capability>
<capability name="package">
<p n="package" v="javax.xml.ws.spi"/>
<p n="uses:" v="javax.xml.ws.handler,javax.xml.namespace,javax.xml.bind,javax.xml.ws"/>
<p n="version" t="version" v="2.0.0"/>
</capability>
<capability name="package">
<p n="package" v="javax.xml.ws"/>
<p n="uses:" v="javax.xml.ws.handler,javax.xml.namespace,javax.xml.ws.spi,javax.xml.bind,javax.xml.transform"/>
<p n="version" t="version" v="2.0.0"/>
</capability>
<require extend="false" filter="(&amp;(package=javax.xml.bind)(version&gt;=2.0.0))" multiple="false" name="package" optional="false">Import package javax.xml.bind ;version=2.0.0</require>
<require extend="false" filter="(&amp;(package=javax.xml.namespace)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package javax.xml.namespace</require>
<require extend="false" filter="(&amp;(package=javax.xml.soap)(version&gt;=1.1.0))" multiple="false" name="package" optional="true">Import package javax.xml.soap ;version=1.1.0</require>
<require extend="false" filter="(&amp;(package=javax.xml.transform)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package javax.xml.transform</require>
<require extend="false" filter="(&amp;(package=javax.xml.ws)(version&gt;=2.0.0))" multiple="false" name="package" optional="false">Import package javax.xml.ws ;version=2.0.0</require>
<require extend="false" filter="(&amp;(package=javax.xml.ws.handler)(version&gt;=2.0.0))" multiple="false" name="package" optional="false">Import package javax.xml.ws.handler ;version=2.0.0</require>
<require extend="false" filter="(&amp;(package=javax.xml.ws.handler.soap)(version&gt;=2.0.0))" multiple="false" name="package" optional="false">Import package javax.xml.ws.handler.soap ;version=2.0.0</require>
<require extend="false" filter="(&amp;(package=javax.xml.ws.http)(version&gt;=2.0.0))" multiple="false" name="package" optional="false">Import package javax.xml.ws.http ;version=2.0.0</require>
<require extend="false" filter="(&amp;(package=javax.xml.ws.soap)(version&gt;=2.0.0))" multiple="false" name="package" optional="false">Import package javax.xml.ws.soap ;version=2.0.0</require>
<require extend="false" filter="(&amp;(package=javax.xml.ws.spi)(version&gt;=2.0.0))" multiple="false" name="package" optional="false">Import package javax.xml.ws.spi ;version=2.0.0</require>
</resource>
<resource id="83" presentationname="ServiceMix OSGI Common Bundles: httpcore" symbolicname="org.apache.servicemix.bundles.httpcore" uri="http://people.apache.org/repo/m2-snapshot-repository/org/apache/servicemix/bundles/org.apache.servicemix.bundles.httpcore/4.0-alpha5-4.0-SNAPSHOT/org.apache.servicemix.bundles.httpcore-4.0-alpha5-4.0-SNAPSHOT.jar" version="4.0.0.alpha5-40-SNAPSHOT">
<description>This bundle simply wraps httpcore-4.0-alpha5.jar.</description>
<size>266680</size>
<category id="org.apache.servicemix.bundles"/>
<capability name="bundle">
<p n="manifestversion" v="2"/>
<p n="presentationname" v="ServiceMix OSGI Common Bundles: httpcore"/>
<p n="symbolicname" v="org.apache.servicemix.bundles.httpcore"/>
<p n="version" t="version" v="4.0.0.alpha5-40-SNAPSHOT"/>
</capability>
<capability name="package">
<p n="package" v="org.apache.http.nio.reactor"/>
<p n="version" t="version" v="4.0.0.alpha5"/>
</capability>
<capability name="package">
<p n="package" v="org.apache.http.util.concurrent"/>
<p n="version" t="version" v="4.0.0.alpha5"/>
</capability>
<capability name="package">
<p n="package" v="org.apache.http.message"/>
<p n="uses:" v="org.apache.http,org.apache.http.params,org.apache.http.protocol,org.apache.http.util"/>
<p n="version" t="version" v="4.0.0.alpha5"/>
</capability>
<capability name="package">
<p n="package" v="org.apache.http.impl.nio.codecs"/>
<p n="uses:" v="org.apache.http.message,org.apache.http.params,org.apache.http,org.apache.http.impl.nio.reactor,org.apache.http.nio,org.apache.http.util,org.apache.http.protocol"/>
<p n="version" t="version" v="4.0.0.alpha5"/>
</capability>
<capability name="package">
<p n="package" v="org.apache.http.impl"/>
<p n="uses:" v="org.apache.http.message,org.apache.http.entity,org.apache.http.params,org.apache.http.impl.entity,org.apache.http,org.apache.http.io,org.apache.http.impl.io,org.apache.http.protocol,org.apache.http.util"/>
<p n="version" t="version" v="4.0.0.alpha5"/>
</capability>
<capability name="package">
<p n="package" v="org.apache.http.entity"/>
<p n="uses:" v="org.apache.http,org.apache.http.message,org.apache.http.util"/>
<p n="version" t="version" v="4.0.0.alpha5"/>
</capability>
<capability name="package">
<p n="package" v="org.apache.http.nio.entity"/>
<p n="uses:" v="org.apache.http,org.apache.http.entity,org.apache.http.nio.util"/>
<p n="version" t="version" v="4.0.0.alpha5"/>
</capability>
<capability name="package">
<p n="package" v="org.apache.http.params"/>
<p n="uses:" v="org.apache.http"/>
<p n="version" t="version" v="4.0.0.alpha5"/>
</capability>
<capability name="package">
<p n="package" v="org.apache.http.impl.entity"/>
<p n="uses:" v="org.apache.http,org.apache.http.io,org.apache.http.impl.io,org.apache.http.entity,org.apache.http.params"/>
<p n="version" t="version" v="4.0.0.alpha5"/>
</capability>
<capability name="package">
<p n="package" v="org.apache.http"/>
<p n="uses:" v="org.apache.http.params,org.apache.http.util,org.apache.http.protocol"/>
<p n="version" t="version" v="4.0.0.alpha5"/>
</capability>
<capability name="package">
<p n="package" v="org.apache.http.impl.nio"/>
<p n="uses:" v="org.apache.http.nio.reactor,org.apache.http.message,org.apache.http.impl.nio.codecs,org.apache.http.entity,org.apache.http.impl,org.apache.http.params,org.apache.http.impl.entity,org.apache.http,org.apache.http.io,org.apache.http.impl.nio.reactor,org.apache.http.nio,org.apache.http.protocol,org.apache.http.util,org.apache.http.nio.util"/>
<p n="version" t="version" v="4.0.0.alpha5"/>
</capability>
<capability name="package">
<p n="package" v="org.apache.http.io"/>
<p n="uses:" v="org.apache.http.util"/>
<p n="version" t="version" v="4.0.0.alpha5"/>
</capability>
<capability name="package">
<p n="package" v="org.apache.http.impl.io"/>
<p n="uses:" v="org.apache.http,org.apache.http.io,org.apache.http.params,org.apache.http.util"/>
<p n="version" t="version" v="4.0.0.alpha5"/>
</capability>
<capability name="package">
<p n="package" v="org.apache.http.impl.nio.reactor"/>
<p n="uses:" v="org.apache.http.nio.reactor,org.apache.http.util.concurrent,org.apache.http.impl,org.apache.http.params,org.apache.http,org.apache.http.impl.nio,org.apache.http.nio.params,org.apache.http.nio,org.apache.http.util,org.apache.http.nio.util,javax.net.ssl"/>
<p n="version" t="version" v="4.0.0.alpha5"/>
</capability>
<capability name="package">
<p n="package" v="org.apache.http.nio.params"/>
<p n="uses:" v="org.apache.http.params"/>
<p n="version" t="version" v="4.0.0.alpha5"/>
</capability>
<capability name="package">
<p n="package" v="org.apache.http.nio"/>
<p n="uses:" v="org.apache.http,org.apache.http.protocol"/>
<p n="version" t="version" v="4.0.0.alpha5"/>
</capability>
<capability name="package">
<p n="package" v="org.apache.http.util"/>
<p n="uses:" v="org.apache.http,org.apache.http.io,org.apache.http.message,org.apache.http.protocol"/>
<p n="version" t="version" v="4.0.0.alpha5"/>
</capability>
<capability name="package">
<p n="package" v="org.apache.http.protocol"/>
<p n="uses:" v="org.apache.http,org.apache.http.entity,org.apache.http.params,org.apache.http.util"/>
<p n="version" t="version" v="4.0.0.alpha5"/>
</capability>
<capability name="package">
<p n="package" v="org.apache.http.nio.util"/>
<p n="uses:" v="org.apache.http.nio"/>
<p n="version" t="version" v="4.0.0.alpha5"/>
</capability>
<capability name="package">
<p n="package" v="org.apache.http.nio.protocol"/>
<p n="uses:" v="org.apache.http.util.concurrent,org.apache.http.entity,org.apache.http.nio.entity,org.apache.http.params,org.apache.http,org.apache.http.nio,org.apache.http.nio.util,org.apache.http.protocol,org.apache.http.util"/>
<p n="version" t="version" v="4.0.0.alpha5"/>
</capability>
<require extend="false" filter="(&amp;(package=javax.net.ssl)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package javax.net.ssl</require>
<require extend="false" filter="(&amp;(package=org.apache.http)(version&gt;=4.0.0.alpha5))" multiple="false" name="package" optional="false">Import package org.apache.http ;version=4.0.0.alpha5</require>
<require extend="false" filter="(&amp;(package=org.apache.http.entity)(version&gt;=4.0.0.alpha5))" multiple="false" name="package" optional="false">Import package org.apache.http.entity ;version=4.0.0.alpha5</require>
<require extend="false" filter="(&amp;(package=org.apache.http.impl)(version&gt;=4.0.0.alpha5))" multiple="false" name="package" optional="false">Import package org.apache.http.impl ;version=4.0.0.alpha5</require>
<require extend="false" filter="(&amp;(package=org.apache.http.impl.entity)(version&gt;=4.0.0.alpha5))" multiple="false" name="package" optional="false">Import package org.apache.http.impl.entity ;version=4.0.0.alpha5</require>
<require extend="false" filter="(&amp;(package=org.apache.http.impl.io)(version&gt;=4.0.0.alpha5))" multiple="false" name="package" optional="false">Import package org.apache.http.impl.io ;version=4.0.0.alpha5</require>
<require extend="false" filter="(&amp;(package=org.apache.http.impl.nio)(version&gt;=4.0.0.alpha5))" multiple="false" name="package" optional="false">Import package org.apache.http.impl.nio ;version=4.0.0.alpha5</require>
<require extend="false" filter="(&amp;(package=org.apache.http.impl.nio.codecs)(version&gt;=4.0.0.alpha5))" multiple="false" name="package" optional="false">Import package org.apache.http.impl.nio.codecs ;version=4.0.0.alpha5</require>
<require extend="false" filter="(&amp;(package=org.apache.http.impl.nio.reactor)(version&gt;=4.0.0.alpha5))" multiple="false" name="package" optional="false">Import package org.apache.http.impl.nio.reactor ;version=4.0.0.alpha5</require>
<require extend="false" filter="(&amp;(package=org.apache.http.io)(version&gt;=4.0.0.alpha5))" multiple="false" name="package" optional="false">Import package org.apache.http.io ;version=4.0.0.alpha5</require>
<require extend="false" filter="(&amp;(package=org.apache.http.message)(version&gt;=4.0.0.alpha5))" multiple="false" name="package" optional="false">Import package org.apache.http.message ;version=4.0.0.alpha5</require>
<require extend="false" filter="(&amp;(package=org.apache.http.nio)(version&gt;=4.0.0.alpha5))" multiple="false" name="package" optional="false">Import package org.apache.http.nio ;version=4.0.0.alpha5</require>
<require extend="false" filter="(&amp;(package=org.apache.http.nio.entity)(version&gt;=4.0.0.alpha5))" multiple="false" name="package" optional="false">Import package org.apache.http.nio.entity ;version=4.0.0.alpha5</require>
<require extend="false" filter="(&amp;(package=org.apache.http.nio.params)(version&gt;=4.0.0.alpha5))" multiple="false" name="package" optional="false">Import package org.apache.http.nio.params ;version=4.0.0.alpha5</require>
<require extend="false" filter="(&amp;(package=org.apache.http.nio.protocol)(version&gt;=4.0.0.alpha5))" multiple="false" name="package" optional="false">Import package org.apache.http.nio.protocol ;version=4.0.0.alpha5</require>
<require extend="false" filter="(&amp;(package=org.apache.http.nio.reactor)(version&gt;=4.0.0.alpha5))" multiple="false" name="package" optional="false">Import package org.apache.http.nio.reactor ;version=4.0.0.alpha5</require>
<require extend="false" filter="(&amp;(package=org.apache.http.nio.util)(version&gt;=4.0.0.alpha5))" multiple="false" name="package" optional="false">Import package org.apache.http.nio.util ;version=4.0.0.alpha5</require>
<require extend="false" filter="(&amp;(package=org.apache.http.params)(version&gt;=4.0.0.alpha5))" multiple="false" name="package" optional="false">Import package org.apache.http.params ;version=4.0.0.alpha5</require>
<require extend="false" filter="(&amp;(package=org.apache.http.protocol)(version&gt;=4.0.0.alpha5))" multiple="false" name="package" optional="false">Import package org.apache.http.protocol ;version=4.0.0.alpha5</require>
<require extend="false" filter="(&amp;(package=org.apache.http.util)(version&gt;=4.0.0.alpha5))" multiple="false" name="package" optional="false">Import package org.apache.http.util ;version=4.0.0.alpha5</require>
<require extend="false" filter="(&amp;(package=org.apache.http.util.concurrent)(version&gt;=4.0.0.alpha5))" multiple="false" name="package" optional="false">Import package org.apache.http.util.concurrent ;version=4.0.0.alpha5</require>
</resource>
<resource id="84" presentationname="ServiceMix OSGI Common Bundles: openejb" symbolicname="org.apache.servicemix.bundles.openejb" uri="http://people.apache.org/repo/m2-snapshot-repository/org/apache/servicemix/bundles/org.apache.servicemix.bundles.openejb/3.0.0-SNAPSHOT-4.0-SNAPSHOT/org.apache.servicemix.bundles.openejb-3.0.0-SNAPSHOT-4.0-SNAPSHOT.jar" version="3.0.0.SNAPSHOT-40-SNAPSHOT">
<description>This bundle simply wraps openejb-3.0.0-SNAPSHOT.jar.</description>
<size>2444984</size>
<documentation>http://www.apache.org</documentation>
<license>http://www.apache.org/licenses/LICENSE-2.0.txt</license>
<category id="org.apache.servicemix.bundles"/>
<capability name="bundle">
<p n="manifestversion" v="2"/>
<p n="presentationname" v="ServiceMix OSGI Common Bundles: openejb"/>
<p n="symbolicname" v="org.apache.servicemix.bundles.openejb"/>
<p n="version" t="version" v="3.0.0.SNAPSHOT-40-SNAPSHOT"/>
</capability>
<capability name="package">
<p n="package" v="org.apache.openejb.server.admin"/>
<p n="uses:" v="org.apache.openejb.server"/>
<p n="version" t="version" v="3.0.0.SNAPSHOT"/>
</capability>
<capability name="package">
<p n="package" v="org.apache.openejb.client.java"/>
<p n="uses:" v="javax.naming,javax.naming.spi,org.apache.openejb.client"/>
<p n="version" t="version" v="3.0.0.SNAPSHOT"/>
</capability>
<capability name="package">
<p n="package" v="org.apache.openejb.core.security.jacc"/>
<p n="uses:" v="org.apache.openejb.loader,javax.security.jacc,org.apache.openejb.core.security"/>
<p n="version" t="version" v="3.0.0.SNAPSHOT"/>
</capability>
<capability name="package">
<p n="package" v="org.apache.openejb.ri.sp"/>
<p n="uses:" v="org.apache.openejb.util,org.apache.openejb.spi,javax.security.auth.login,javax.security.jacc,javax.transaction.xa,javax.transaction,org.apache.openejb"/>
<p n="version" t="version" v="3.0.0.SNAPSHOT"/>
</capability>
<capability name="package">
<p n="package" v="org.apache.openejb.core.webservices"/>
<p n="uses:" v="javax.xml.ws.handler,javax.xml.ws.soap,org.apache.openejb.util,javax.wsdl.xml,org.xml.sax,javax.xml.namespace,org.apache.openejb,javax.naming,javax.jws,javax.xml.ws.spi,javax.xml.ws,javax.xml.bind"/>
<p n="version" t="version" v="3.0.0.SNAPSHOT"/>
</capability>
<capability name="package">
<p n="package" v="org.apache.openejb.cli"/>
<p n="uses:" v="org.apache.openejb.util,org.apache.openejb.loader,org.apache.xbean.finder,org.apache.commons.cli"/>
<p n="version" t="version" v="3.0.0.SNAPSHOT"/>
</capability>
<capability name="package">
<p n="package" v="org.apache.openejb"/>
<p n="uses:" v="org.apache.openejb.util,org.apache.xbean.recipe,org.apache.openejb.spi,javax.ejb,javax.naming,org.apache.openejb.core.timer,org.apache.openejb.loader,org.apache.openejb.core,javax.transaction"/>
<p n="version" t="version" v="3.0.0.SNAPSHOT"/>
</capability>
<capability name="package">
<p n="package" v="org.apache.openejb.server.httpd"/>
<p n="uses:" v="org.apache.openejb.util,org.apache.openejb.server,org.apache.openejb.loader,org.apache.openejb.server.ejbd,org.apache.openejb"/>
<p n="version" t="version" v="3.0.0.SNAPSHOT"/>
</capability>
<capability name="package">
<p n="package" v="org.apache.openejb.util.urlhandler.resource"/>
<p n="version" t="version" v="3.0.0.SNAPSHOT"/>
</capability>
<capability name="package">
<p n="package" v="org.apache.openejb.server.ejbd"/>
<p n="uses:" v="org.apache.openejb.util,javax.xml.namespace,org.apache.openejb.core.webservices,org.omg.CORBA,org.apache.commons.dbcp,org.apache.openejb.client,org.apache.openejb,org.apache.openejb.spi,javax.ejb,javax.naming,org.apache.openejb.server,org.apache.openejb.loader,org.apache.openejb.core.ivm,org.apache.openejb.core,org.apache.openejb.util.proxy,javax.jms"/>
<p n="version" t="version" v="3.0.0.SNAPSHOT"/>
</capability>
<capability name="package">
<p n="package" v="org.apache.openejb.core"/>
<p n="uses:" v="javax.resource.spi,org.apache.openejb.core.transaction,org.apache.openejb.core.mdb,org.apache.openejb,org.apache.openejb.spi,org.apache.openejb.core.cmp,javax.naming,javax.xml.rpc.handler,org.apache.openejb.core.ivm,javax.transaction,org.apache.openejb.core.ivm.naming,org.apache.openejb.core.stateful,org.objectweb.asm.commons,org.apache.openejb.util,org.apache.openejb.core.stateless,org.objectweb.asm,org.omg.CORBA,javax.ejb,org.apache.openejb.core.timer,org.apache.openejb.loader,javax.resource,javax.mail,org.apache.openejb.util.proxy"/>
<p n="version" t="version" v="3.0.0.SNAPSHOT"/>
</capability>
<capability name="package">
<p n="package" v="org.apache.openejb.util"/>
<p n="uses:" v="org.apache.xbean.finder,org.apache.openejb,org.apache.log4j,javax.naming,org.apache.openejb.loader,javax.transaction"/>
<p n="version" t="version" v="3.0.0.SNAPSHOT"/>
</capability>
<capability name="package">
<p n="package" v="org.apache.openejb.server.cxf.client"/>
<p n="uses:" v="org.apache.openejb.server.webservices.saaj,org.apache.cxf.message,org.apache.cxf,org.apache.cxf.phase,org.apache.cxf.interceptor"/>
<p n="version" t="version" v="3.0.0.SNAPSHOT"/>
</capability>
<capability name="package">
<p n="package" v="org.apache.openejb.alt.util.resources"/>
<p n="version" t="version" v="3.0.0.SNAPSHOT"/>
</capability>
<capability name="package">
<p n="package" v="org.apache.openejb.core.stateless"/>
<p n="uses:" v="javax.xml.ws.handler,org.apache.openejb.util,org.apache.openejb.core.transaction,org.apache.xbean.recipe,org.apache.openejb.core.interceptor,javax.interceptor,org.apache.xbean.finder,org.apache.openejb,org.apache.openejb.spi,javax.ejb,javax.naming,org.apache.openejb.core.timer,javax.xml.rpc.handler,org.apache.openejb.core.ivm,org.apache.openejb.core,javax.xml.ws,javax.transaction,org.apache.openejb.util.proxy"/>
<p n="version" t="version" v="3.0.0.SNAPSHOT"/>
</capability>
<capability name="package">
<p n="package" v="org.apache.openejb.core.security.jaas"/>
<p n="uses:" v="org.apache.openejb.util,javax.security.auth.spi,javax.security.auth.login,javax.security.auth,javax.security.auth.callback"/>
<p n="version" t="version" v="3.0.0.SNAPSHOT"/>
</capability>
<capability name="package">
<p n="package" v="org.apache.openejb.core.interceptor"/>
<p n="uses:" v="javax.xml.ws.handler,javax.xml.rpc.handler,javax.interceptor,org.apache.openejb.core"/>
<p n="version" t="version" v="3.0.0.SNAPSHOT"/>
</capability>
<capability name="package">
<p n="package" v="org.apache.openejb.jee.sun"/>
<p n="uses:" v="org.xml.sax,javax.xml.bind.annotation.adapters,javax.xml.bind.annotation,javax.xml.transform,javax.xml.transform.sax,org.xml.sax.helpers,javax.xml.parsers,org.apache.openejb.jee,javax.xml.bind"/>
<p n="version" t="version" v="3.0.0.SNAPSHOT"/>
</capability>
<capability name="package">
<p n="package" v="org.apache.openejb.mgmt"/>
<p n="uses:" v="javax.ejb,javax.management,javax.management.j2ee"/>
<p n="version" t="version" v="3.0.0.SNAPSHOT"/>
</capability>
<capability name="package">
<p n="package" v="org.apache.openejb.server.cxf.ejb"/>
<p n="uses:" v="javax.xml.ws.handler,org.apache.cxf.service.invoker,org.apache.cxf.jaxws.context,javax.interceptor,org.apache.openejb.core.webservices,org.apache.cxf.phase,org.apache.openejb,javax.xml.transform,org.apache.cxf.jaxws.support,org.apache.cxf.message,javax.naming,org.apache.cxf.binding,org.apache.cxf.binding.soap.interceptor,org.apache.cxf.jaxws.handler.logical,javax.xml.ws,org.apache.cxf.service,javax.xml.stream,org.apache.openejb.util,org.apache.cxf.endpoint,org.apache.cxf.jaxws.handler.soap,org.w3c.dom,org.apache.cxf.transport,org.apache.cxf.interceptor,javax.xml.transform.dom,javax.xml.soap,org.apache.cxf.binding.soap,org.apache.openejb.server.cxf,org.apache.cxf.binding.soap.saaj,org.apache.cxf,org.apache.cxf.staxutils"/>
<p n="version" t="version" v="3.0.0.SNAPSHOT"/>
</capability>
<capability name="package">
<p n="package" v="org.apache.openejb.assembler.classic.cmd"/>
<p n="uses:" v="org.apache.openejb.util,javax.ejb,javax.naming,org.apache.openejb.loader,org.apache.openejb.assembler.classic,org.apache.commons.cli"/>
<p n="version" t="version" v="3.0.0.SNAPSHOT"/>
</capability>
<capability name="package">
<p n="package" v="org.apache.openejb.resource.jdbc"/>
<p n="uses:" v="org.apache.openejb.loader,org.apache.commons.dbcp.managed,org.apache.xbean.finder,org.apache.commons.dbcp,javax.sql"/>
<p n="version" t="version" v="3.0.0.SNAPSHOT"/>
</capability>
<capability name="package">
<p n="package" v="org.apache.openejb.core.security"/>
<p n="uses:" v="org.apache.openejb.util,javax.security.auth.login,org.apache.openejb.core.security.jaas,org.apache.openejb.core.security.jacc,org.apache.openejb,org.apache.openejb.spi,org.apache.openejb.loader,javax.security.jacc,org.apache.openejb.core,javax.security.auth,javax.security.auth.callback"/>
<p n="version" t="version" v="3.0.0.SNAPSHOT"/>
</capability>
<capability name="package">
<p n="package" v="org.apache.openejb.jee.wls"/>
<p n="uses:" v="org.xml.sax,javax.xml.namespace,javax.xml.bind.annotation.adapters,javax.xml.bind.annotation,javax.xml.transform,javax.xml.transform.sax,org.xml.sax.helpers,javax.xml.parsers,javax.xml.bind"/>
<p n="version" t="version" v="3.0.0.SNAPSHOT"/>
</capability>
<capability name="package">
<p n="package" v="org.apache.openejb.core.entity"/>
<p n="uses:" v="org.apache.openejb.util,org.apache.openejb.core.transaction,org.apache.openejb,javax.ejb,org.apache.openejb.spi,org.apache.openejb.core.timer,org.apache.openejb.loader,org.apache.openejb.core.ivm,org.apache.openejb.core,javax.transaction,org.apache.openejb.util.proxy"/>
<p n="version" t="version" v="3.0.0.SNAPSHOT"/>
</capability>
<capability name="package">
<p n="package" v="org.apache.openejb.assembler.dynamic"/>
<p n="uses:" v="org.apache.openejb.assembler.classic"/>
<p n="version" t="version" v="3.0.0.SNAPSHOT"/>
</capability>
<capability name="package">
<p n="package" v="org.apache.openejb.core.timer"/>
<p n="uses:" v="org.apache.openejb.util,javax.sql,org.apache.openejb,org.apache.openejb.spi,javax.ejb,org.apache.openejb.loader,org.apache.openejb.core,javax.transaction"/>
<p n="version" t="version" v="3.0.0.SNAPSHOT"/>
</capability>
<capability name="package">
<p n="package" v="org.apache.openejb.assembler"/>
<p n="uses:" v="org.apache.openejb.spi,javax.ejb,org.apache.openejb.config,org.apache.openejb.loader,org.apache.openejb.assembler.classic,org.apache.openejb"/>
<p n="version" t="version" v="3.0.0.SNAPSHOT"/>
</capability>
<capability name="package">
<p n="package" v="org.apache.openejb.loader"/>
<p n="uses:" v="org.apache.catalina.core,sun.misc,org.apache.catalina,javax.servlet.http,javax.servlet"/>
<p n="version" t="version" v="3.0.0.SNAPSHOT"/>
</capability>
<capability name="package">
<p n="package" v="org.apache.openejb.util.io"/>
<p n="uses:" v="org.apache.openejb.util"/>
<p n="version" t="version" v="3.0.0.SNAPSHOT"/>
</capability>
<capability name="package">
<p n="package" v="org.apache.openejb.jee"/>
<p n="uses:" v="org.xml.sax,javax.xml.namespace,javax.xml.bind.annotation.adapters,javax.xml.bind.annotation,javax.xml.transform,javax.xml.transform.sax,org.xml.sax.helpers,javax.xml.parsers,javax.xml.bind"/>
<p n="version" t="version" v="3.0.0.SNAPSHOT"/>
</capability>
<capability name="package">
<p n="package" v="org.apache.openejb.assembler.classic"/>
<p n="uses:" v="org.codehaus.swizzle.stream,org.apache.openejb.resource,org.apache.openejb.core.cmp.cmp2,javax.resource.spi,javax.resource.spi.work,javax.ejb.spi,javax.xml.namespace,javax.interceptor,org.apache.openejb.core.webservices,javax.sql,org.apache.openejb,org.apache.openejb.core.cmp,org.apache.openejb.spi,javax.naming,javax.persistence,org.apache.openejb.core,javax.xml.ws,javax.transaction,org.apache.openejb.core.ivm.naming,org.apache.openejb.javaagent,org.apache.geronimo.connector,javax.persistence.spi,org.apache.geronimo.transaction.manager,org.apache.openejb.util,org.apache.openejb.persistence,org.apache.xbean.recipe,org.apache.openejb.core.interceptor,org.apache.xbean.naming.context,org.omg.CORBA,org.apache.geronimo.connector.work,javax.ejb,org.apache.openejb.core.timer,org.apache.openejb.loader,javax.security.jacc,javax.jms,org.apache.openejb.util.proxy"/>
<p n="version" t="version" v="3.0.0.SNAPSHOT"/>
</capability>
<capability name="package">
<p n="package" v="org.apache.openejb.config.rules"/>
<p n="uses:" v="javax.ejb,org.apache.openejb.util,org.apache.openejb.config,org.apache.openejb.jee,javax.interceptor,org.apache.openejb"/>
<p n="version" t="version" v="3.0.0.SNAPSHOT"/>
</capability>
<capability name="package">
<p n="package" v="org.apache.openejb.server.webservices.saaj"/>
<p n="uses:" v="javax.xml.soap,org.apache.openejb.util,javax.xml.namespace"/>
<p n="version" t="version" v="3.0.0.SNAPSHOT"/>
</capability>
<capability name="package">
<p n="package" v="org.apache.openejb.resource"/>
<p n="uses:" v="org.apache.geronimo.transaction.manager,javax.resource.spi,javax.resource,org.apache.geronimo.connector.outbound.connectionmanagerconfig,javax.transaction,org.apache.geronimo.connector.outbound.connectiontracking,org.apache.geronimo.connector.outbound"/>
<p n="version" t="version" v="3.0.0.SNAPSHOT"/>
</capability>
<capability name="package">
<p n="package" v="org.apache.openejb.core.cmp.cmp2"/>
<p n="uses:" v="org.objectweb.asm,org.apache.openejb,javax.ejb,org.apache.openejb.core.cmp,org.apache.openejb.loader,org.apache.openejb.core.ivm,org.apache.openejb.core,javax.transaction,org.apache.openejb.util.proxy"/>
<p n="version" t="version" v="3.0.0.SNAPSHOT"/>
</capability>
<capability name="package">
<p n="package" v="org.apache.openejb.config"/>
<p n="uses:" v="javax.wsdl.extensions.soap,javax.xml.namespace,javax.enterprise.deploy.model,org.apache.openejb.core.webservices,org.apache.openejb,org.apache.openejb.cli,javax.naming,javax.wsdl.factory,javax.xml.parsers,javax.persistence,org.apache.openejb.core,javax.xml.ws,org.objectweb.asm.commons,org.apache.openejb.util,javax.enterprise.deploy.spi,javax.wsdl.xml,org.apache.openejb.jee.sun,org.apache.openejb.jee.wls,javax.wsdl.extensions.http,org.apache.openejb.assembler,javax.enterprise.deploy.spi.factories,org.apache.openejb.loader,org.xml.sax.helpers,org.apache.openejb.jee,org.apache.openejb.assembler.classic,javax.annotation.security,javax.xml.bind,javax.jms,org.apache.openejb.config.rules,org.codehaus.swizzle.stream,javax.enterprise.deploy.spi.exceptions,org.apache.openejb.jee.oejb2,javax.interceptor,javax.sql,org.apache.openejb.core.cmp,org.apache.openejb.jee.jpa,org.apache.openejb.jee.jpa.unit,javax.wsdl,org.apache.openejb.config.sys,org.xml.sax,org.apache.openejb.jee.oejb3,javax.enterprise.deploy.spi.status,org.apache.xbean.finder,org.objectweb.asm,javax.ejb,javax.enterprise.deploy.shared,javax.annotation,javax.jws,org.apache.commons.cli"/>
<p n="version" t="version" v="3.0.0.SNAPSHOT"/>
</capability>
<capability name="package">
<p n="package" v="org.apache.openejb.core.transaction"/>
<p n="uses:" v="org.apache.openejb.util,org.apache.openejb.core,javax.transaction,org.apache.openejb"/>
<p n="version" t="version" v="3.0.0.SNAPSHOT"/>
</capability>
<capability name="package">
<p n="package" v="org.apache.openejb.jee.oejb2"/>
<p n="uses:" v="org.xml.sax,javax.xml.namespace,javax.xml.bind.annotation.adapters,javax.xml.bind.annotation,javax.xml.transform,javax.xml.transform.sax,javax.xml.parsers,org.xml.sax.helpers,javax.xml.bind,org.apache.openejb.jee.jpa.unit"/>
<p n="version" t="version" v="3.0.0.SNAPSHOT"/>
</capability>
<capability name="package">
<p n="package" v="org.apache.openejb.core.mdb"/>
<p n="uses:" v="org.apache.openejb.util,javax.resource.spi,org.apache.openejb.core.transaction,org.apache.xbean.recipe,org.apache.openejb.core.interceptor,javax.transaction.xa,org.apache.openejb,javax.resource.spi.endpoint,org.apache.openejb.spi,javax.ejb,javax.naming,org.apache.openejb.core.timer,javax.resource,org.apache.openejb.core,javax.transaction"/>
<p n="version" t="version" v="3.0.0.SNAPSHOT"/>
</capability>
<capability name="package">
<p n="package" v="org.apache.openejb.client"/>
<p n="uses:" v="javax.xml.ws.handler,javax.security.auth.login,javax.xml.namespace,javax.naming.spi,javax.sql,javax.naming,javax.security.auth.spi,javax.xml.ws.spi,javax.rmi.CORBA,javax.xml.ws,javax.transaction,javax.security.auth.callback,javax.xml.ws.soap,org.apache.openejb.client.proxy,org.omg.CORBA,javax.ejb,org.apache.openejb.loader,javax.jws,javax.mail,javax.xml.bind,javax.rmi,javax.security.auth"/>
<p n="version" t="version" v="3.0.0.SNAPSHOT"/>
</capability>
<capability name="package">
<p n="package" v="org.apache.openejb.core.cmp"/>
<p n="uses:" v="org.apache.openejb.util,org.apache.openejb.core.transaction,org.apache.openejb,org.apache.openejb.core.entity,javax.ejb,org.apache.openejb.spi,org.apache.openejb.core.timer,org.apache.openejb.loader,org.apache.openejb.core,javax.transaction,org.apache.openejb.util.proxy"/>
<p n="version" t="version" v="3.0.0.SNAPSHOT"/>
</capability>
<capability name="package">
<p n="package" v="org.apache.openejb.spi"/>
<p n="uses:" v="javax.ejb,javax.naming,javax.security.auth.login,javax.resource.spi,javax.resource,org.apache.openejb.core,javax.transaction,org.apache.openejb"/>
<p n="version" t="version" v="3.0.0.SNAPSHOT"/>
</capability>
<capability name="package">
<p n="package" v="org.apache.openejb.jee.jpa"/>
<p n="uses:" v="org.xml.sax,javax.xml.parsers,javax.xml.bind.annotation.adapters,javax.xml.bind,javax.xml.bind.annotation"/>
<p n="version" t="version" v="3.0.0.SNAPSHOT"/>
</capability>
<capability name="package">
<p n="package" v="org.apache.openejb.util.resources"/>
<p n="version" t="version" v="3.0.0.SNAPSHOT"/>
</capability>
<capability name="package">
<p n="package" v="org.apache.openejb.server"/>
<p n="uses:" v="org.apache.openejb.server.admin,org.apache.openejb.util,javax.resource.spi,org.apache.xbean.finder,org.apache.openejb.cli,org.apache.openejb,org.apache.log4j,org.apache.openejb.spi,javax.naming,org.apache.openejb.loader,org.apache.openejb.assembler.classic,org.apache.openejb.core,org.apache.commons.cli"/>
<p n="version" t="version" v="3.0.0.SNAPSHOT"/>
</capability>
<capability name="package">
<p n="package" v="org.apache.openejb.core.ivm"/>
<p n="uses:" v="org.apache.openejb.util,org.apache.openejb.core.stateless,org.apache.openejb,org.apache.openejb.core.entity,javax.ejb,org.apache.openejb.spi,org.apache.openejb.loader,org.apache.openejb.core,javax.transaction,org.apache.openejb.util.proxy,org.apache.openejb.core.stateful"/>
<p n="version" t="version" v="3.0.0.SNAPSHOT"/>
</capability>
<capability name="package">
<p n="package" v="org.apache.openejb.core.ivm.naming"/>
<p n="uses:" v="javax.xml.ws.handler,org.apache.openejb.util,javax.security.auth.login,javax.xml.namespace,org.apache.xbean.naming.context,org.apache.openejb.core.webservices,javax.naming.spi,org.apache.openejb,org.apache.openejb.spi,javax.naming,javax.xml.rpc,org.apache.openejb.loader,javax.persistence,org.apache.openejb.core,org.apache.openejb.core.ivm,javax.xml.ws,org.apache.xbean.naming.reference,javax.xml.registry"/>
<p n="version" t="version" v="3.0.0.SNAPSHOT"/>
</capability>
<capability name="package">
<p n="package" v="org.apache.openejb.jee.jpa.unit"/>
<p n="uses:" v="org.xml.sax,javax.xml.bind.annotation.adapters,javax.xml.bind.annotation,javax.xml.transform,javax.xml.transform.sax,org.xml.sax.helpers,javax.xml.parsers,javax.xml.bind"/>
<p n="version" t="version" v="3.0.0.SNAPSHOT"/>
</capability>
<capability name="package">
<p n="package" v="org.apache.openejb.core.stateful"/>
<p n="uses:" v="org.apache.openejb.util,org.apache.openejb.persistence,org.apache.openejb.core.transaction,org.apache.xbean.recipe,org.apache.openejb.core.interceptor,org.apache.openejb,org.apache.openejb.spi,javax.ejb,javax.naming,javax.xml.rpc.handler,org.apache.openejb.loader,javax.persistence,org.apache.openejb.core.ivm,org.apache.openejb.core,javax.transaction,org.apache.openejb.util.proxy"/>
<p n="version" t="version" v="3.0.0.SNAPSHOT"/>
</capability>
<capability name="package">
<p n="package" v="org.apache.openejb.javaagent"/>
<p n="version" t="version" v="3.0.0.SNAPSHOT"/>
</capability>
<capability name="package">
<p n="package" v="org.apache.openejb.client.proxy"/>
<p n="version" t="version" v="3.0.0.SNAPSHOT"/>
</capability>
<capability name="package">
<p n="package" v="org.apache.openejb.config.sys"/>
<p n="uses:" v="org.apache.openejb.util,org.xml.sax,org.apache.openejb.config,javax.xml.bind.annotation.adapters,javax.xml.bind.annotation,org.apache.xbean.finder,org.apache.openejb,javax.xml.transform,javax.xml.transform.sax,javax.xml.parsers,org.xml.sax.helpers,javax.xml.bind"/>
<p n="version" t="version" v="3.0.0.SNAPSHOT"/>
</capability>
<capability name="package">
<p n="package" v="org.apache.openejb.persistence"/>
<p n="uses:" v="javax.persistence.spi,javax.persistence,javax.transaction,javax.sql"/>
<p n="version" t="version" v="3.0.0.SNAPSHOT"/>
</capability>
<capability name="package">
<p n="package" v="org.apache.openejb.core.cmp.jpa"/>
<p n="uses:" v="org.apache.openejb.core.cmp.cmp2,org.apache.openjpa.event,org.apache.openjpa.persistence,org.apache.openejb,javax.ejb,org.apache.openejb.core.cmp,javax.naming,javax.persistence,org.apache.openejb.core,javax.transaction"/>
<p n="version" t="version" v="3.0.0.SNAPSHOT"/>
</capability>
<capability name="package">
<p n="package" v="org.apache.openejb.server.cxf.pojo"/>
<p n="uses:" v="org.apache.cxf.jaxws,org.apache.cxf.service.invoker,org.apache.openejb.core.webservices,org.apache.openejb,org.apache.cxf.jaxws.support,javax.naming,org.apache.openejb.server.cxf,org.apache.cxf,javax.xml.ws,org.apache.cxf.service"/>
<p n="version" t="version" v="3.0.0.SNAPSHOT"/>
</capability>
<capability name="package">
<p n="package" v="org.apache.openejb.jee.jba"/>
<p n="uses:" v="javax.xml.bind.annotation.adapters,javax.xml.bind.annotation"/>
<p n="version" t="version" v="3.0.0.SNAPSHOT"/>
</capability>
<capability name="package">
<p n="package" v="org.apache.openejb.jee.jba.cmp"/>
<p n="uses:" v="javax.xml.bind.annotation.adapters,javax.xml.bind.annotation"/>
<p n="version" t="version" v="3.0.0.SNAPSHOT"/>
</capability>
<capability name="package">
<p n="package" v="org.apache.openejb.jee.oejb3"/>
<p n="uses:" v="org.xml.sax,javax.xml.namespace,javax.xml.bind.annotation.adapters,javax.xml.bind.annotation,javax.xml.transform,javax.xml.transform.sax,org.xml.sax.helpers,javax.xml.parsers,javax.xml.bind"/>
<p n="version" t="version" v="3.0.0.SNAPSHOT"/>
</capability>
<capability name="package">
<p n="package" v="org.apache.openejb.server.cxf"/>
<p n="uses:" v="javax.xml.ws.handler,javax.servlet.http,org.apache.openejb.server.webservices.saaj,org.apache.cxf.tools.common.extensions.soap,org.apache.cxf.jaxws,org.apache.cxf.catalog,javax.xml.namespace,org.apache.openejb.core.webservices,org.apache.openejb,org.apache.openejb.server.httpd,org.apache.cxf.service.factory,org.apache.cxf.message,org.apache.cxf.jaxws.support,javax.servlet,javax.naming,org.xmlsoap.schemas.wsdl.http,org.apache.cxf.transport.http,org.apache.cxf.ws.addressing,javax.xml.ws,org.apache.cxf.service,javax.wsdl,javax.xml.ws.soap,org.apache.openejb.util,org.apache.cxf.endpoint,org.apache.openejb.server.cxf.client,org.apache.openejb.server.cxf.pojo,org.apache.cxf.bus.extension,org.apache.cxf.service.model,org.apache.openejb.server.cxf.ejb,org.apache.cxf.tools.util,org.apache.cxf.transport,javax.wsdl.extensions,org.apache.openejb.server.webservices,org.apache.cxf.bus.resource,org.apache.xml.resolver,org.apache.cxf.jaxws.handler,org.apache.cxf,org.apache.cxf.security"/>
<p n="version" t="version" v="3.0.0.SNAPSHOT"/>
</capability>
<capability name="package">
<p n="package" v="org.apache.openejb.server.webservices"/>
<p n="uses:" v="org.codehaus.swizzle.stream,javax.servlet.http,javax.wsdl.extensions.soap,org.apache.openejb.config,javax.xml.namespace,org.apache.openejb.core.webservices,org.apache.openejb,org.apache.openejb.server.httpd,org.apache.openejb.spi,javax.naming,javax.servlet,javax.xml.rpc.handler,org.apache.openejb.server,org.apache.openejb.core,javax.wsdl,org.apache.openejb.util,javax.xml.rpc,org.apache.openejb.loader,org.apache.openejb.assembler.classic,javax.xml.rpc.server"/>
<p n="version" t="version" v="3.0.0.SNAPSHOT"/>
</capability>
<capability name="package">
<p n="package" v="org.apache.openejb.core.ivm.naming.java"/>
<p n="uses:" v="org.apache.openejb.spi,javax.naming,org.apache.openejb.loader,org.apache.openejb.core,javax.naming.spi"/>
<p n="version" t="version" v="3.0.0.SNAPSHOT"/>
</capability>
<capability name="package">
<p n="package" v="org.apache.openejb.util.proxy"/>
<p n="uses:" v="org.apache.openejb"/>
<p n="version" t="version" v="3.0.0.SNAPSHOT"/>
</capability>
<require extend="false" filter="(&amp;(package=javax.annotation)(version&gt;=1.0.0))" multiple="false" name="package" optional="false">Import package javax.annotation ;version=1.0.0</require>
<require extend="false" filter="(&amp;(package=javax.annotation.security)(version&gt;=1.0.0))" multiple="false" name="package" optional="false">Import package javax.annotation.security ;version=1.0.0</require>
<require extend="false" filter="(&amp;(package=javax.ejb)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package javax.ejb</require>
<require extend="false" filter="(&amp;(package=javax.ejb.spi)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package javax.ejb.spi</require>
<require extend="false" filter="(&amp;(package=javax.enterprise.deploy.model)(version&gt;=0.0.0))" multiple="false" name="package" optional="true">Import package javax.enterprise.deploy.model</require>
<require extend="false" filter="(&amp;(package=javax.enterprise.deploy.shared)(version&gt;=0.0.0))" multiple="false" name="package" optional="true">Import package javax.enterprise.deploy.shared</require>
<require extend="false" filter="(&amp;(package=javax.enterprise.deploy.spi)(version&gt;=0.0.0))" multiple="false" name="package" optional="true">Import package javax.enterprise.deploy.spi</require>
<require extend="false" filter="(&amp;(package=javax.enterprise.deploy.spi.exceptions)(version&gt;=0.0.0))" multiple="false" name="package" optional="true">Import package javax.enterprise.deploy.spi.exceptions</require>
<require extend="false" filter="(&amp;(package=javax.enterprise.deploy.spi.factories)(version&gt;=0.0.0))" multiple="false" name="package" optional="true">Import package javax.enterprise.deploy.spi.factories</require>
<require extend="false" filter="(&amp;(package=javax.enterprise.deploy.spi.status)(version&gt;=0.0.0))" multiple="false" name="package" optional="true">Import package javax.enterprise.deploy.spi.status</require>
<require extend="false" filter="(&amp;(package=javax.interceptor)(version&gt;=3.0.0))" multiple="false" name="package" optional="false">Import package javax.interceptor ;version=3.0.0</require>
<require extend="false" filter="(&amp;(package=javax.jms)(version&gt;=1.1.0))" multiple="false" name="package" optional="true">Import package javax.jms ;version=1.1.0</require>
<require extend="false" filter="(&amp;(package=javax.jws)(version&gt;=2.0.0))" multiple="false" name="package" optional="false">Import package javax.jws ;version=2.0.0</require>
<require extend="false" filter="(&amp;(package=javax.mail)(version&gt;=1.4.0))" multiple="false" name="package" optional="false">Import package javax.mail ;version=1.4.0</require>
<require extend="false" filter="(&amp;(package=javax.management)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package javax.management</require>
<require extend="false" filter="(&amp;(package=javax.management.j2ee)(version&gt;=1.1.0))" multiple="false" name="package" optional="false">Import package javax.management.j2ee ;version=1.1.0</require>
<require extend="false" filter="(&amp;(package=javax.naming)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package javax.naming</require>
<require extend="false" filter="(&amp;(package=javax.naming.spi)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package javax.naming.spi</require>
<require extend="false" filter="(&amp;(package=javax.persistence)(version&gt;=3.0.0))" multiple="false" name="package" optional="false">Import package javax.persistence ;version=3.0.0</require>
<require extend="false" filter="(&amp;(package=javax.persistence.spi)(version&gt;=3.0.0))" multiple="false" name="package" optional="false">Import package javax.persistence.spi ;version=3.0.0</require>
<require extend="false" filter="(&amp;(package=javax.resource)(version&gt;=1.5.0))" multiple="false" name="package" optional="false">Import package javax.resource ;version=1.5.0</require>
<require extend="false" filter="(&amp;(package=javax.resource.spi)(version&gt;=1.5.0))" multiple="false" name="package" optional="false">Import package javax.resource.spi ;version=1.5.0</require>
<require extend="false" filter="(&amp;(package=javax.resource.spi.endpoint)(version&gt;=1.5.0))" multiple="false" name="package" optional="false">Import package javax.resource.spi.endpoint ;version=1.5.0</require>
<require extend="false" filter="(&amp;(package=javax.resource.spi.work)(version&gt;=1.5.0))" multiple="false" name="package" optional="false">Import package javax.resource.spi.work ;version=1.5.0</require>
<require extend="false" filter="(&amp;(package=javax.rmi)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package javax.rmi</require>
<require extend="false" filter="(&amp;(package=javax.rmi.CORBA)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package javax.rmi.CORBA</require>
<require extend="false" filter="(&amp;(package=javax.security.auth)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package javax.security.auth</require>
<require extend="false" filter="(&amp;(package=javax.security.auth.callback)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package javax.security.auth.callback</require>
<require extend="false" filter="(&amp;(package=javax.security.auth.login)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package javax.security.auth.login</require>
<require extend="false" filter="(&amp;(package=javax.security.auth.spi)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package javax.security.auth.spi</require>
<require extend="false" filter="(&amp;(package=javax.security.jacc)(version&gt;=1.1.0))" multiple="false" name="package" optional="false">Import package javax.security.jacc ;version=1.1.0</require>
<require extend="false" filter="(&amp;(package=javax.servlet)(version&gt;=2.5.0))" multiple="false" name="package" optional="false">Import package javax.servlet ;version=2.5.0</require>
<require extend="false" filter="(&amp;(package=javax.servlet.http)(version&gt;=2.5.0))" multiple="false" name="package" optional="false">Import package javax.servlet.http ;version=2.5.0</require>
<require extend="false" filter="(&amp;(package=javax.sql)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package javax.sql</require>
<require extend="false" filter="(&amp;(package=javax.transaction)(version&gt;=1.1.0))" multiple="false" name="package" optional="false">Import package javax.transaction ;version=1.1.0</require>
<require extend="false" filter="(&amp;(package=javax.transaction.xa)(version&gt;=1.1.0))" multiple="false" name="package" optional="false">Import package javax.transaction.xa ;version=1.1.0</require>
<require extend="false" filter="(&amp;(package=javax.wsdl)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package javax.wsdl</require>
<require extend="false" filter="(&amp;(package=javax.wsdl.extensions)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package javax.wsdl.extensions</require>
<require extend="false" filter="(&amp;(package=javax.wsdl.extensions.http)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package javax.wsdl.extensions.http</require>
<require extend="false" filter="(&amp;(package=javax.wsdl.extensions.soap)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package javax.wsdl.extensions.soap</require>
<require extend="false" filter="(&amp;(package=javax.wsdl.factory)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package javax.wsdl.factory</require>
<require extend="false" filter="(&amp;(package=javax.wsdl.xml)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package javax.wsdl.xml</require>
<require extend="false" filter="(&amp;(package=javax.xml.bind)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package javax.xml.bind</require>
<require extend="false" filter="(&amp;(package=javax.xml.bind.annotation)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package javax.xml.bind.annotation</require>
<require extend="false" filter="(&amp;(package=javax.xml.bind.annotation.adapters)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package javax.xml.bind.annotation.adapters</require>
<require extend="false" filter="(&amp;(package=javax.xml.namespace)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package javax.xml.namespace</require>
<require extend="false" filter="(&amp;(package=javax.xml.parsers)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package javax.xml.parsers</require>
<require extend="false" filter="(&amp;(package=javax.xml.registry)(version&gt;=1.1.0))" multiple="false" name="package" optional="true">Import package javax.xml.registry ;version=1.1.0</require>
<require extend="false" filter="(&amp;(package=javax.xml.rpc)(version&gt;=1.1.0))" multiple="false" name="package" optional="true">Import package javax.xml.rpc ;version=1.1.0</require>
<require extend="false" filter="(&amp;(package=javax.xml.rpc.handler)(version&gt;=1.1.0))" multiple="false" name="package" optional="true">Import package javax.xml.rpc.handler ;version=1.1.0</require>
<require extend="false" filter="(&amp;(package=javax.xml.rpc.server)(version&gt;=1.1.0))" multiple="false" name="package" optional="true">Import package javax.xml.rpc.server ;version=1.1.0</require>
<require extend="false" filter="(&amp;(package=javax.xml.soap)(version&gt;=0.0.0))" multiple="false" name="package" optional="true">Import package javax.xml.soap</require>
<require extend="false" filter="(&amp;(package=javax.xml.stream)(version&gt;=1.0.0))" multiple="false" name="package" optional="false">Import package javax.xml.stream ;version=1.0.0</require>
<require extend="false" filter="(&amp;(package=javax.xml.transform)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package javax.xml.transform</require>
<require extend="false" filter="(&amp;(package=javax.xml.transform.dom)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package javax.xml.transform.dom</require>
<require extend="false" filter="(&amp;(package=javax.xml.transform.sax)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package javax.xml.transform.sax</require>
<require extend="false" filter="(&amp;(package=javax.xml.ws)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package javax.xml.ws</require>
<require extend="false" filter="(&amp;(package=javax.xml.ws.handler)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package javax.xml.ws.handler</require>
<require extend="false" filter="(&amp;(package=javax.xml.ws.soap)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package javax.xml.ws.soap</require>
<require extend="false" filter="(&amp;(package=javax.xml.ws.spi)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package javax.xml.ws.spi</require>
<require extend="false" filter="(&amp;(package=org.apache.catalina)(version&gt;=0.0.0))" multiple="false" name="package" optional="true">Import package org.apache.catalina</require>
<require extend="false" filter="(&amp;(package=org.apache.catalina.core)(version&gt;=0.0.0))" multiple="false" name="package" optional="true">Import package org.apache.catalina.core</require>
<require extend="false" filter="(&amp;(package=org.apache.commons.cli)(version&gt;=0.0.0))" multiple="false" name="package" optional="true">Import package org.apache.commons.cli</require>
<require extend="false" filter="(&amp;(package=org.apache.commons.dbcp)(version&gt;=0.0.0))" multiple="false" name="package" optional="true">Import package org.apache.commons.dbcp</require>
<require extend="false" filter="(&amp;(package=org.apache.commons.dbcp.managed)(version&gt;=0.0.0))" multiple="false" name="package" optional="true">Import package org.apache.commons.dbcp.managed</require>
<require extend="false" filter="(&amp;(package=org.apache.cxf)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package org.apache.cxf</require>
<require extend="false" filter="(&amp;(package=org.apache.cxf.binding)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package org.apache.cxf.binding</require>
<require extend="false" filter="(&amp;(package=org.apache.cxf.binding.soap)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package org.apache.cxf.binding.soap</require>
<require extend="false" filter="(&amp;(package=org.apache.cxf.binding.soap.interceptor)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package org.apache.cxf.binding.soap.interceptor</require>
<require extend="false" filter="(&amp;(package=org.apache.cxf.binding.soap.saaj)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package org.apache.cxf.binding.soap.saaj</require>
<require extend="false" filter="(&amp;(package=org.apache.cxf.bus.extension)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package org.apache.cxf.bus.extension</require>
<require extend="false" filter="(&amp;(package=org.apache.cxf.bus.resource)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package org.apache.cxf.bus.resource</require>
<require extend="false" filter="(&amp;(package=org.apache.cxf.catalog)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package org.apache.cxf.catalog</require>
<require extend="false" filter="(&amp;(package=org.apache.cxf.endpoint)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package org.apache.cxf.endpoint</require>
<require extend="false" filter="(&amp;(package=org.apache.cxf.interceptor)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package org.apache.cxf.interceptor</require>
<require extend="false" filter="(&amp;(package=org.apache.cxf.jaxws)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package org.apache.cxf.jaxws</require>
<require extend="false" filter="(&amp;(package=org.apache.cxf.jaxws.context)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package org.apache.cxf.jaxws.context</require>
<require extend="false" filter="(&amp;(package=org.apache.cxf.jaxws.handler)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package org.apache.cxf.jaxws.handler</require>
<require extend="false" filter="(&amp;(package=org.apache.cxf.jaxws.handler.logical)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package org.apache.cxf.jaxws.handler.logical</require>
<require extend="false" filter="(&amp;(package=org.apache.cxf.jaxws.handler.soap)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package org.apache.cxf.jaxws.handler.soap</require>
<require extend="false" filter="(&amp;(package=org.apache.cxf.jaxws.support)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package org.apache.cxf.jaxws.support</require>
<require extend="false" filter="(&amp;(package=org.apache.cxf.message)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package org.apache.cxf.message</require>
<require extend="false" filter="(&amp;(package=org.apache.cxf.phase)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package org.apache.cxf.phase</require>
<require extend="false" filter="(&amp;(package=org.apache.cxf.security)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package org.apache.cxf.security</require>
<require extend="false" filter="(&amp;(package=org.apache.cxf.service)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package org.apache.cxf.service</require>
<require extend="false" filter="(&amp;(package=org.apache.cxf.service.factory)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package org.apache.cxf.service.factory</require>
<require extend="false" filter="(&amp;(package=org.apache.cxf.service.invoker)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package org.apache.cxf.service.invoker</require>
<require extend="false" filter="(&amp;(package=org.apache.cxf.service.model)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package org.apache.cxf.service.model</require>
<require extend="false" filter="(&amp;(package=org.apache.cxf.staxutils)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package org.apache.cxf.staxutils</require>
<require extend="false" filter="(&amp;(package=org.apache.cxf.tools.common.extensions.soap)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package org.apache.cxf.tools.common.extensions.soap</require>
<require extend="false" filter="(&amp;(package=org.apache.cxf.tools.util)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package org.apache.cxf.tools.util</require>
<require extend="false" filter="(&amp;(package=org.apache.cxf.transport)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package org.apache.cxf.transport</require>
<require extend="false" filter="(&amp;(package=org.apache.cxf.transport.http)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package org.apache.cxf.transport.http</require>
<require extend="false" filter="(&amp;(package=org.apache.cxf.ws.addressing)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package org.apache.cxf.ws.addressing</require>
<require extend="false" filter="(&amp;(package=org.apache.geronimo.connector)(version&gt;=0.0.0))" multiple="false" name="package" optional="true">Import package org.apache.geronimo.connector</require>
<require extend="false" filter="(&amp;(package=org.apache.geronimo.connector.outbound)(version&gt;=0.0.0))" multiple="false" name="package" optional="true">Import package org.apache.geronimo.connector.outbound</require>
<require extend="false" filter="(&amp;(package=org.apache.geronimo.connector.outbound.connectionmanagerconfig)(version&gt;=0.0.0))" multiple="false" name="package" optional="true">Import package org.apache.geronimo.connector.outbound.connectionmanagerconfig</require>
<require extend="false" filter="(&amp;(package=org.apache.geronimo.connector.outbound.connectiontracking)(version&gt;=0.0.0))" multiple="false" name="package" optional="true">Import package org.apache.geronimo.connector.outbound.connectiontracking</require>
<require extend="false" filter="(&amp;(package=org.apache.geronimo.connector.work)(version&gt;=0.0.0))" multiple="false" name="package" optional="true">Import package org.apache.geronimo.connector.work</require>
<require extend="false" filter="(&amp;(package=org.apache.geronimo.transaction.manager)(version&gt;=0.0.0))" multiple="false" name="package" optional="true">Import package org.apache.geronimo.transaction.manager</require>
<require extend="false" filter="(&amp;(package=org.apache.log4j)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package org.apache.log4j</require>
<require extend="false" filter="(&amp;(package=org.apache.openejb)(version&gt;=3.0.0.SNAPSHOT))" multiple="false" name="package" optional="false">Import package org.apache.openejb ;version=3.0.0.SNAPSHOT</require>
<require extend="false" filter="(&amp;(package=org.apache.openejb.alt.util.resources)(version&gt;=3.0.0.SNAPSHOT))" multiple="false" name="package" optional="false">Import package org.apache.openejb.alt.util.resources ;version=3.0.0.SNAPSHOT</require>
<require extend="false" filter="(&amp;(package=org.apache.openejb.assembler)(version&gt;=3.0.0.SNAPSHOT))" multiple="false" name="package" optional="false">Import package org.apache.openejb.assembler ;version=3.0.0.SNAPSHOT</require>
<require extend="false" filter="(&amp;(package=org.apache.openejb.assembler.classic)(version&gt;=3.0.0.SNAPSHOT))" multiple="false" name="package" optional="false">Import package org.apache.openejb.assembler.classic ;version=3.0.0.SNAPSHOT</require>
<require extend="false" filter="(&amp;(package=org.apache.openejb.assembler.classic.cmd)(version&gt;=3.0.0.SNAPSHOT))" multiple="false" name="package" optional="false">Import package org.apache.openejb.assembler.classic.cmd ;version=3.0.0.SNAPSHOT</require>
<require extend="false" filter="(&amp;(package=org.apache.openejb.assembler.dynamic)(version&gt;=3.0.0.SNAPSHOT))" multiple="false" name="package" optional="false">Import package org.apache.openejb.assembler.dynamic ;version=3.0.0.SNAPSHOT</require>
<require extend="false" filter="(&amp;(package=org.apache.openejb.cli)(version&gt;=3.0.0.SNAPSHOT))" multiple="false" name="package" optional="false">Import package org.apache.openejb.cli ;version=3.0.0.SNAPSHOT</require>
<require extend="false" filter="(&amp;(package=org.apache.openejb.client)(version&gt;=3.0.0.SNAPSHOT))" multiple="false" name="package" optional="false">Import package org.apache.openejb.client ;version=3.0.0.SNAPSHOT</require>
<require extend="false" filter="(&amp;(package=org.apache.openejb.client.java)(version&gt;=3.0.0.SNAPSHOT))" multiple="false" name="package" optional="false">Import package org.apache.openejb.client.java ;version=3.0.0.SNAPSHOT</require>
<require extend="false" filter="(&amp;(package=org.apache.openejb.client.proxy)(version&gt;=3.0.0.SNAPSHOT))" multiple="false" name="package" optional="false">Import package org.apache.openejb.client.proxy ;version=3.0.0.SNAPSHOT</require>
<require extend="false" filter="(&amp;(package=org.apache.openejb.config)(version&gt;=3.0.0.SNAPSHOT))" multiple="false" name="package" optional="false">Import package org.apache.openejb.config ;version=3.0.0.SNAPSHOT</require>
<require extend="false" filter="(&amp;(package=org.apache.openejb.config.rules)(version&gt;=3.0.0.SNAPSHOT))" multiple="false" name="package" optional="false">Import package org.apache.openejb.config.rules ;version=3.0.0.SNAPSHOT</require>
<require extend="false" filter="(&amp;(package=org.apache.openejb.config.sys)(version&gt;=3.0.0.SNAPSHOT))" multiple="false" name="package" optional="false">Import package org.apache.openejb.config.sys ;version=3.0.0.SNAPSHOT</require>
<require extend="false" filter="(&amp;(package=org.apache.openejb.core)(version&gt;=3.0.0.SNAPSHOT))" multiple="false" name="package" optional="false">Import package org.apache.openejb.core ;version=3.0.0.SNAPSHOT</require>
<require extend="false" filter="(&amp;(package=org.apache.openejb.core.cmp)(version&gt;=3.0.0.SNAPSHOT))" multiple="false" name="package" optional="false">Import package org.apache.openejb.core.cmp ;version=3.0.0.SNAPSHOT</require>
<require extend="false" filter="(&amp;(package=org.apache.openejb.core.cmp.cmp2)(version&gt;=3.0.0.SNAPSHOT))" multiple="false" name="package" optional="false">Import package org.apache.openejb.core.cmp.cmp2 ;version=3.0.0.SNAPSHOT</require>
<require extend="false" filter="(&amp;(package=org.apache.openejb.core.cmp.jpa)(version&gt;=3.0.0.SNAPSHOT))" multiple="false" name="package" optional="false">Import package org.apache.openejb.core.cmp.jpa ;version=3.0.0.SNAPSHOT</require>
<require extend="false" filter="(&amp;(package=org.apache.openejb.core.entity)(version&gt;=3.0.0.SNAPSHOT))" multiple="false" name="package" optional="false">Import package org.apache.openejb.core.entity ;version=3.0.0.SNAPSHOT</require>
<require extend="false" filter="(&amp;(package=org.apache.openejb.core.interceptor)(version&gt;=3.0.0.SNAPSHOT))" multiple="false" name="package" optional="false">Import package org.apache.openejb.core.interceptor ;version=3.0.0.SNAPSHOT</require>
<require extend="false" filter="(&amp;(package=org.apache.openejb.core.ivm)(version&gt;=3.0.0.SNAPSHOT))" multiple="false" name="package" optional="false">Import package org.apache.openejb.core.ivm ;version=3.0.0.SNAPSHOT</require>
<require extend="false" filter="(&amp;(package=org.apache.openejb.core.ivm.naming)(version&gt;=3.0.0.SNAPSHOT))" multiple="false" name="package" optional="false">Import package org.apache.openejb.core.ivm.naming ;version=3.0.0.SNAPSHOT</require>
<require extend="false" filter="(&amp;(package=org.apache.openejb.core.ivm.naming.java)(version&gt;=3.0.0.SNAPSHOT))" multiple="false" name="package" optional="false">Import package org.apache.openejb.core.ivm.naming.java ;version=3.0.0.SNAPSHOT</require>
<require extend="false" filter="(&amp;(package=org.apache.openejb.core.mdb)(version&gt;=3.0.0.SNAPSHOT))" multiple="false" name="package" optional="false">Import package org.apache.openejb.core.mdb ;version=3.0.0.SNAPSHOT</require>
<require extend="false" filter="(&amp;(package=org.apache.openejb.core.security)(version&gt;=3.0.0.SNAPSHOT))" multiple="false" name="package" optional="false">Import package org.apache.openejb.core.security ;version=3.0.0.SNAPSHOT</require>
<require extend="false" filter="(&amp;(package=org.apache.openejb.core.security.jaas)(version&gt;=3.0.0.SNAPSHOT))" multiple="false" name="package" optional="false">Import package org.apache.openejb.core.security.jaas ;version=3.0.0.SNAPSHOT</require>
<require extend="false" filter="(&amp;(package=org.apache.openejb.core.security.jacc)(version&gt;=3.0.0.SNAPSHOT))" multiple="false" name="package" optional="false">Import package org.apache.openejb.core.security.jacc ;version=3.0.0.SNAPSHOT</require>
<require extend="false" filter="(&amp;(package=org.apache.openejb.core.stateful)(version&gt;=3.0.0.SNAPSHOT))" multiple="false" name="package" optional="false">Import package org.apache.openejb.core.stateful ;version=3.0.0.SNAPSHOT</require>
<require extend="false" filter="(&amp;(package=org.apache.openejb.core.stateless)(version&gt;=3.0.0.SNAPSHOT))" multiple="false" name="package" optional="false">Import package org.apache.openejb.core.stateless ;version=3.0.0.SNAPSHOT</require>
<require extend="false" filter="(&amp;(package=org.apache.openejb.core.timer)(version&gt;=3.0.0.SNAPSHOT))" multiple="false" name="package" optional="false">Import package org.apache.openejb.core.timer ;version=3.0.0.SNAPSHOT</require>
<require extend="false" filter="(&amp;(package=org.apache.openejb.core.transaction)(version&gt;=3.0.0.SNAPSHOT))" multiple="false" name="package" optional="false">Import package org.apache.openejb.core.transaction ;version=3.0.0.SNAPSHOT</require>
<require extend="false" filter="(&amp;(package=org.apache.openejb.core.webservices)(version&gt;=3.0.0.SNAPSHOT))" multiple="false" name="package" optional="false">Import package org.apache.openejb.core.webservices ;version=3.0.0.SNAPSHOT</require>
<require extend="false" filter="(&amp;(package=org.apache.openejb.javaagent)(version&gt;=3.0.0.SNAPSHOT))" multiple="false" name="package" optional="false">Import package org.apache.openejb.javaagent ;version=3.0.0.SNAPSHOT</require>
<require extend="false" filter="(&amp;(package=org.apache.openejb.jee)(version&gt;=3.0.0.SNAPSHOT))" multiple="false" name="package" optional="false">Import package org.apache.openejb.jee ;version=3.0.0.SNAPSHOT</require>
<require extend="false" filter="(&amp;(package=org.apache.openejb.jee.jba)(version&gt;=3.0.0.SNAPSHOT))" multiple="false" name="package" optional="false">Import package org.apache.openejb.jee.jba ;version=3.0.0.SNAPSHOT</require>
<require extend="false" filter="(&amp;(package=org.apache.openejb.jee.jba.cmp)(version&gt;=3.0.0.SNAPSHOT))" multiple="false" name="package" optional="false">Import package org.apache.openejb.jee.jba.cmp ;version=3.0.0.SNAPSHOT</require>
<require extend="false" filter="(&amp;(package=org.apache.openejb.jee.jpa)(version&gt;=3.0.0.SNAPSHOT))" multiple="false" name="package" optional="false">Import package org.apache.openejb.jee.jpa ;version=3.0.0.SNAPSHOT</require>
<require extend="false" filter="(&amp;(package=org.apache.openejb.jee.jpa.unit)(version&gt;=3.0.0.SNAPSHOT))" multiple="false" name="package" optional="false">Import package org.apache.openejb.jee.jpa.unit ;version=3.0.0.SNAPSHOT</require>
<require extend="false" filter="(&amp;(package=org.apache.openejb.jee.oejb2)(version&gt;=3.0.0.SNAPSHOT))" multiple="false" name="package" optional="false">Import package org.apache.openejb.jee.oejb2 ;version=3.0.0.SNAPSHOT</require>
<require extend="false" filter="(&amp;(package=org.apache.openejb.jee.oejb3)(version&gt;=3.0.0.SNAPSHOT))" multiple="false" name="package" optional="false">Import package org.apache.openejb.jee.oejb3 ;version=3.0.0.SNAPSHOT</require>
<require extend="false" filter="(&amp;(package=org.apache.openejb.jee.sun)(version&gt;=3.0.0.SNAPSHOT))" multiple="false" name="package" optional="false">Import package org.apache.openejb.jee.sun ;version=3.0.0.SNAPSHOT</require>
<require extend="false" filter="(&amp;(package=org.apache.openejb.jee.wls)(version&gt;=3.0.0.SNAPSHOT))" multiple="false" name="package" optional="false">Import package org.apache.openejb.jee.wls ;version=3.0.0.SNAPSHOT</require>
<require extend="false" filter="(&amp;(package=org.apache.openejb.loader)(version&gt;=3.0.0.SNAPSHOT))" multiple="false" name="package" optional="false">Import package org.apache.openejb.loader ;version=3.0.0.SNAPSHOT</require>
<require extend="false" filter="(&amp;(package=org.apache.openejb.mgmt)(version&gt;=3.0.0.SNAPSHOT))" multiple="false" name="package" optional="false">Import package org.apache.openejb.mgmt ;version=3.0.0.SNAPSHOT</require>
<require extend="false" filter="(&amp;(package=org.apache.openejb.persistence)(version&gt;=3.0.0.SNAPSHOT))" multiple="false" name="package" optional="false">Import package org.apache.openejb.persistence ;version=3.0.0.SNAPSHOT</require>
<require extend="false" filter="(&amp;(package=org.apache.openejb.resource)(version&gt;=3.0.0.SNAPSHOT))" multiple="false" name="package" optional="false">Import package org.apache.openejb.resource ;version=3.0.0.SNAPSHOT</require>
<require extend="false" filter="(&amp;(package=org.apache.openejb.resource.jdbc)(version&gt;=3.0.0.SNAPSHOT))" multiple="false" name="package" optional="false">Import package org.apache.openejb.resource.jdbc ;version=3.0.0.SNAPSHOT</require>
<require extend="false" filter="(&amp;(package=org.apache.openejb.ri.sp)(version&gt;=3.0.0.SNAPSHOT))" multiple="false" name="package" optional="false">Import package org.apache.openejb.ri.sp ;version=3.0.0.SNAPSHOT</require>
<require extend="false" filter="(&amp;(package=org.apache.openejb.server)(version&gt;=3.0.0.SNAPSHOT))" multiple="false" name="package" optional="false">Import package org.apache.openejb.server ;version=3.0.0.SNAPSHOT</require>
<require extend="false" filter="(&amp;(package=org.apache.openejb.server.admin)(version&gt;=3.0.0.SNAPSHOT))" multiple="false" name="package" optional="false">Import package org.apache.openejb.server.admin ;version=3.0.0.SNAPSHOT</require>
<require extend="false" filter="(&amp;(package=org.apache.openejb.server.cxf)(version&gt;=3.0.0.SNAPSHOT))" multiple="false" name="package" optional="false">Import package org.apache.openejb.server.cxf ;version=3.0.0.SNAPSHOT</require>
<require extend="false" filter="(&amp;(package=org.apache.openejb.server.cxf.client)(version&gt;=3.0.0.SNAPSHOT))" multiple="false" name="package" optional="false">Import package org.apache.openejb.server.cxf.client ;version=3.0.0.SNAPSHOT</require>
<require extend="false" filter="(&amp;(package=org.apache.openejb.server.cxf.ejb)(version&gt;=3.0.0.SNAPSHOT))" multiple="false" name="package" optional="false">Import package org.apache.openejb.server.cxf.ejb ;version=3.0.0.SNAPSHOT</require>
<require extend="false" filter="(&amp;(package=org.apache.openejb.server.cxf.pojo)(version&gt;=3.0.0.SNAPSHOT))" multiple="false" name="package" optional="false">Import package org.apache.openejb.server.cxf.pojo ;version=3.0.0.SNAPSHOT</require>
<require extend="false" filter="(&amp;(package=org.apache.openejb.server.ejbd)(version&gt;=3.0.0.SNAPSHOT))" multiple="false" name="package" optional="false">Import package org.apache.openejb.server.ejbd ;version=3.0.0.SNAPSHOT</require>
<require extend="false" filter="(&amp;(package=org.apache.openejb.server.httpd)(version&gt;=3.0.0.SNAPSHOT))" multiple="false" name="package" optional="false">Import package org.apache.openejb.server.httpd ;version=3.0.0.SNAPSHOT</require>
<require extend="false" filter="(&amp;(package=org.apache.openejb.server.webservices)(version&gt;=3.0.0.SNAPSHOT))" multiple="false" name="package" optional="false">Import package org.apache.openejb.server.webservices ;version=3.0.0.SNAPSHOT</require>
<require extend="false" filter="(&amp;(package=org.apache.openejb.server.webservices.saaj)(version&gt;=3.0.0.SNAPSHOT))" multiple="false" name="package" optional="false">Import package org.apache.openejb.server.webservices.saaj ;version=3.0.0.SNAPSHOT</require>
<require extend="false" filter="(&amp;(package=org.apache.openejb.spi)(version&gt;=3.0.0.SNAPSHOT))" multiple="false" name="package" optional="false">Import package org.apache.openejb.spi ;version=3.0.0.SNAPSHOT</require>
<require extend="false" filter="(&amp;(package=org.apache.openejb.util)(version&gt;=3.0.0.SNAPSHOT))" multiple="false" name="package" optional="false">Import package org.apache.openejb.util ;version=3.0.0.SNAPSHOT</require>
<require extend="false" filter="(&amp;(package=org.apache.openejb.util.io)(version&gt;=3.0.0.SNAPSHOT))" multiple="false" name="package" optional="false">Import package org.apache.openejb.util.io ;version=3.0.0.SNAPSHOT</require>
<require extend="false" filter="(&amp;(package=org.apache.openejb.util.proxy)(version&gt;=3.0.0.SNAPSHOT))" multiple="false" name="package" optional="false">Import package org.apache.openejb.util.proxy ;version=3.0.0.SNAPSHOT</require>
<require extend="false" filter="(&amp;(package=org.apache.openejb.util.resources)(version&gt;=3.0.0.SNAPSHOT))" multiple="false" name="package" optional="false">Import package org.apache.openejb.util.resources ;version=3.0.0.SNAPSHOT</require>
<require extend="false" filter="(&amp;(package=org.apache.openejb.util.urlhandler.resource)(version&gt;=3.0.0.SNAPSHOT))" multiple="false" name="package" optional="false">Import package org.apache.openejb.util.urlhandler.resource ;version=3.0.0.SNAPSHOT</require>
<require extend="false" filter="(&amp;(package=org.apache.openjpa.event)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package org.apache.openjpa.event</require>
<require extend="false" filter="(&amp;(package=org.apache.openjpa.persistence)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package org.apache.openjpa.persistence</require>
<require extend="false" filter="(&amp;(package=org.apache.xbean.finder)(version&gt;=3.3.0.SNAPSHOT))" multiple="false" name="package" optional="false">Import package org.apache.xbean.finder ;version=3.3.0.SNAPSHOT</require>
<require extend="false" filter="(&amp;(package=org.apache.xbean.naming.context)(version&gt;=3.3.0.SNAPSHOT))" multiple="false" name="package" optional="false">Import package org.apache.xbean.naming.context ;version=3.3.0.SNAPSHOT</require>
<require extend="false" filter="(&amp;(package=org.apache.xbean.naming.reference)(version&gt;=3.3.0.SNAPSHOT))" multiple="false" name="package" optional="false">Import package org.apache.xbean.naming.reference ;version=3.3.0.SNAPSHOT</require>
<require extend="false" filter="(&amp;(package=org.apache.xbean.recipe)(version&gt;=3.3.0.SNAPSHOT))" multiple="false" name="package" optional="false">Import package org.apache.xbean.recipe ;version=3.3.0.SNAPSHOT</require>
<require extend="false" filter="(&amp;(package=org.apache.xml.resolver)(version&gt;=0.0.0))" multiple="false" name="package" optional="true">Import package org.apache.xml.resolver</require>
<require extend="false" filter="(&amp;(package=org.objectweb.asm)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package org.objectweb.asm</require>
<require extend="false" filter="(&amp;(package=org.objectweb.asm.commons)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package org.objectweb.asm.commons</require>
<require extend="false" filter="(&amp;(package=org.omg.CORBA)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package org.omg.CORBA</require>
<require extend="false" filter="(&amp;(package=org.w3c.dom)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package org.w3c.dom</require>
<require extend="false" filter="(&amp;(package=org.xml.sax)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package org.xml.sax</require>
<require extend="false" filter="(&amp;(package=org.xml.sax.helpers)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package org.xml.sax.helpers</require>
<require extend="false" filter="(&amp;(package=org.xmlsoap.schemas.wsdl.http)(version&gt;=0.0.0))" multiple="false" name="package" optional="true">Import package org.xmlsoap.schemas.wsdl.http</require>
<require extend="false" filter="(&amp;(package=sun.misc)(version&gt;=0.0.0))" multiple="false" name="package" optional="true">Import package sun.misc</require>
</resource>
<resource id="85" presentationname="ServiceMix OSGI Common Bundles: openjpa" symbolicname="org.apache.servicemix.bundles.openjpa" uri="http://people.apache.org/repo/m2-snapshot-repository/org/apache/servicemix/bundles/org.apache.servicemix.bundles.openjpa/1.0.1-4.0-SNAPSHOT/org.apache.servicemix.bundles.openjpa-1.0.1-4.0-SNAPSHOT.jar" version="1.0.1.SNAPSHOT">
<description>This bundle simply wraps openjpa-1.0.1.jar.</description>
<size>2928098</size>
<category id="org.apache.servicemix.bundles"/>
<capability name="bundle">
<p n="manifestversion" v="2"/>
<p n="presentationname" v="ServiceMix OSGI Common Bundles: openjpa"/>
<p n="symbolicname" v="org.apache.servicemix.bundles.openjpa"/>
<p n="version" t="version" v="1.0.1.SNAPSHOT"/>
</capability>
<capability name="package">
<p n="package" v="org.apache.openjpa.lib.meta"/>
<p n="uses:" v="org.apache.openjpa.lib.util,org.xml.sax,org.apache.xerces.impl,serp.util,org.apache.commons.lang.exception,org.apache.commons.lang,javax.xml.transform,javax.xml.transform.sax,serp.bytecode.lowlevel,org.apache.openjpa.lib.log,org.apache.openjpa.lib.xml,org.xml.sax.ext,org.xml.sax.helpers,javax.xml.parsers,javax.xml.transform.stream"/>
<p n="version" t="version" v="1.0.1"/>
</capability>
<capability name="package">
<p n="package" v="org.apache.openjpa.jdbc.conf"/>
<p n="uses:" v="org.apache.openjpa.lib.util,org.apache.openjpa.kernel,serp.util,org.apache.openjpa.meta,org.apache.openjpa.jdbc.sql,org.apache.commons.lang,javax.sql,org.apache.openjpa.jdbc.meta,serp.bytecode.lowlevel,org.apache.openjpa.lib.log,org.apache.openjpa.jdbc.kernel,org.apache.openjpa.conf,serp.bytecode,org.apache.openjpa.lib.jdbc,org.apache.openjpa.jdbc.schema,org.apache.openjpa.lib.conf"/>
<p n="version" t="version" v="1.0.1"/>
</capability>
<capability name="package">
<p n="package" v="org.apache.openjpa.lib.ant"/>
<p n="uses:" v="org.apache.openjpa.lib.util,org.apache.tools.ant.types,org.apache.tools.ant.taskdefs,org.apache.tools.ant,org.apache.openjpa.lib.conf"/>
<p n="version" t="version" v="1.0.1"/>
</capability>
<capability name="package">
<p n="package" v="org.apache.openjpa.enhance"/>
<p n="uses:" v="org.apache.openjpa.lib.util,org.apache.openjpa.kernel,serp.util,org.apache.openjpa.lib.meta,org.apache.openjpa.meta,org.apache.commons.lang,serp.bytecode.lowlevel,org.apache.openjpa.lib.log,org.apache.openjpa.conf,serp.bytecode,org.apache.openjpa.util,org.apache.openjpa.lib.conf,org.apache.openjpa.lib.util.concurrent"/>
<p n="version" t="version" v="1.0.1"/>
</capability>
<capability name="package">
<p n="package" v="org.apache.openjpa.kernel.exps"/>
<p n="uses:" v="org.apache.openjpa.lib.util,org.apache.openjpa.kernel,serp.util,org.apache.openjpa.meta,org.apache.openjpa.enhance,org.apache.commons.lang,org.apache.commons.collections.map,org.apache.openjpa.conf,org.apache.openjpa.util"/>
<p n="version" t="version" v="1.0.1"/>
</capability>
<capability name="package">
<p n="package" v="org.apache.openjpa.lib.xml"/>
<p n="uses:" v="org.apache.openjpa.lib.util,org.xml.sax,javax.xml.parsers,serp.util,org.apache.commons.lang.exception,org.w3c.dom"/>
<p n="version" t="version" v="1.0.1"/>
</capability>
<capability name="package">
<p n="package" v="org.apache.openjpa.conf"/>
<p n="uses:" v="org.apache.openjpa.lib.util,org.apache.openjpa.kernel,org.apache.openjpa.datacache,org.apache.openjpa.ee,org.apache.openjpa.meta,org.apache.openjpa.event,org.apache.commons.lang,org.apache.openjpa.kernel.exps,org.apache.openjpa.lib.log,org.apache.openjpa.abstractstore,org.apache.openjpa.util,org.apache.openjpa.lib.conf,org.apache.openjpa.lib.util.concurrent"/>
<p n="version" t="version" v="1.0.1"/>
</capability>
<capability name="package">
<p n="package" v="org.apache.openjpa.abstractstore"/>
<p n="uses:" v="org.apache.openjpa.lib.rop,org.apache.openjpa.lib.util,org.apache.openjpa.kernel,org.apache.openjpa.conf,org.apache.openjpa.meta,org.apache.openjpa.util,org.apache.openjpa.lib.conf"/>
<p n="version" t="version" v="1.0.1"/>
</capability>
<capability name="package">
<p n="package" v="org.apache.openjpa.persistence.jdbc"/>
<p n="uses:" v="org.apache.openjpa.lib.util,org.apache.openjpa.kernel,org.xml.sax,serp.util,org.apache.openjpa.meta,org.apache.openjpa.persistence,org.apache.openjpa.jdbc.sql,org.apache.openjpa.jdbc.conf,org.apache.commons.lang,org.apache.openjpa.jdbc.meta,org.apache.openjpa.jdbc.kernel,org.apache.openjpa.lib.log,org.apache.openjpa.conf,org.apache.openjpa.jdbc.schema,javax.persistence,org.apache.openjpa.util,org.apache.openjpa.lib.conf,org.apache.openjpa.jdbc.meta.strats"/>
<p n="version" t="version" v="1.0.1"/>
</capability>
<capability name="package">
<p n="package" v="org.apache.openjpa.lib.util"/>
<p n="uses:" v="serp.util,org.apache.commons.lang.exception,org.apache.commons.collections.set,org.apache.commons.lang,org.apache.commons.collections.map,serp.bytecode.lowlevel,serp.bytecode,org.apache.openjpa.lib.util.concurrent"/>
<p n="version" t="version" v="1.0.1"/>
</capability>
<capability name="package">
<p n="package" v="org.apache.openjpa.kernel"/>
<p n="uses:" v="org.apache.commons.collections.iterators,org.apache.commons.collections.set,org.apache.openjpa.enhance,org.apache.commons.collections,org.apache.openjpa.kernel.exps,org.apache.commons.collections.map,org.apache.openjpa.conf,javax.transaction,org.apache.openjpa.lib.util,org.apache.openjpa.datacache,org.apache.openjpa.ee,serp.util,org.apache.openjpa.event,org.apache.openjpa.meta,javax.transaction.xa,org.apache.commons.lang,org.apache.openjpa.lib.rop,org.apache.openjpa.lib.log,org.apache.openjpa.util,org.apache.openjpa.lib.conf,org.apache.openjpa.lib.util.concurrent"/>
<p n="version" t="version" v="1.0.1"/>
</capability>
<capability name="package">
<p n="package" v="org.apache.openjpa.jdbc.ant"/>
<p n="uses:" v="org.apache.openjpa.lib.util,org.apache.tools.ant.types,org.apache.tools.ant,org.apache.openjpa.lib.ant,org.apache.openjpa.jdbc.conf,org.apache.commons.lang,org.apache.openjpa.jdbc.meta,org.apache.openjpa.jdbc.schema,org.apache.openjpa.util,org.apache.openjpa.lib.conf"/>
<p n="version" t="version" v="1.0.1"/>
</capability>
<capability name="package">
<p n="package" v="org.apache.openjpa.ant"/>
<p n="uses:" v="org.apache.openjpa.lib.util,org.apache.tools.ant.types,org.apache.openjpa.conf,org.apache.tools.ant,org.apache.openjpa.meta,org.apache.openjpa.lib.ant,org.apache.openjpa.enhance,org.apache.openjpa.lib.conf"/>
<p n="version" t="version" v="1.0.1"/>
</capability>
<capability name="package">
<p n="package" v="org.apache.openjpa.datacache"/>
<p n="uses:" v="org.apache.openjpa.lib.util,org.apache.openjpa.kernel,serp.util,org.apache.openjpa.event,org.apache.openjpa.meta,org.apache.commons.lang,org.apache.openjpa.enhance,org.apache.openjpa.kernel.exps,org.apache.commons.collections.map,org.apache.openjpa.lib.rop,org.apache.openjpa.lib.log,org.apache.openjpa.conf,serp.bytecode,org.apache.openjpa.util,org.apache.openjpa.lib.conf,org.apache.openjpa.lib.util.concurrent"/>
<p n="version" t="version" v="1.0.1"/>
</capability>
<capability name="package">
<p n="package" v="org.apache.openjpa.ee"/>
<p n="uses:" v="org.apache.openjpa.lib.util,weblogic.transaction,javax.transaction.xa,com.ibm.websphere.jtaextensions,javax.naming,org.apache.openjpa.lib.log,org.apache.openjpa.conf,serp.bytecode,javax.transaction,org.apache.openjpa.util,org.apache.openjpa.lib.conf"/>
<p n="version" t="version" v="1.0.1"/>
</capability>
<capability name="package">
<p n="package" v="org.apache.openjpa.event"/>
<p n="uses:" v="org.apache.openjpa.lib.util,org.apache.openjpa.kernel,serp.util,org.apache.commons.pool.impl,org.apache.openjpa.meta,javax.naming,org.apache.openjpa.lib.log,org.apache.openjpa.conf,org.apache.commons.pool,org.apache.openjpa.util,javax.jms,org.apache.openjpa.lib.conf,org.apache.openjpa.lib.util.concurrent"/>
<p n="version" t="version" v="1.0.1"/>
</capability>
<capability name="package">
<p n="package" v="org.apache.openjpa.meta"/>
<p n="uses:" v="org.apache.openjpa.lib.meta,org.apache.commons.collections.bidimap,org.apache.openjpa.enhance,org.apache.openjpa.conf,org.apache.openjpa.lib.xml,serp.bytecode,org.apache.openjpa.lib.util,org.apache.openjpa.kernel,org.apache.openjpa.datacache,serp.util,org.apache.openjpa.event,org.apache.commons.lang,org.apache.openjpa.lib.log,org.apache.commons.collections.comparators,org.apache.openjpa.util,org.apache.openjpa.lib.conf"/>
<p n="version" t="version" v="1.0.1"/>
</capability>
<capability name="package">
<p n="package" v="org.apache.openjpa.persistence"/>
<p n="uses:" v="org.apache.openjpa.lib.meta,org.apache.openjpa.enhance,javax.sql,org.apache.openjpa.kernel.exps,org.apache.commons.collections.map,javax.naming,org.apache.openjpa.conf,javax.persistence,javax.persistence.spi,org.apache.openjpa.lib.util,org.apache.openjpa.kernel,org.xml.sax,org.apache.openjpa.datacache,serp.util,org.apache.openjpa.ee,org.apache.openjpa.event,org.apache.openjpa.meta,org.apache.commons.lang,org.apache.openjpa.lib.rop,org.apache.openjpa.lib.log,org.apache.openjpa.util,javax.rmi,org.apache.openjpa.lib.conf"/>
<p n="version" t="version" v="1.0.1"/>
</capability>
<capability name="package">
<p n="package" v="org.apache.openjpa.jdbc.sql"/>
<p n="uses:" v="org.apache.commons.collections.iterators,org.apache.openjpa.jdbc.conf,javax.sql,org.apache.openjpa.lib.util,org.apache.openjpa.kernel,serp.util,org.apache.openjpa.meta,org.apache.commons.lang,org.apache.openjpa.jdbc.meta,oracle.jdbc,org.apache.openjpa.jdbc.kernel,org.apache.openjpa.lib.log,oracle.sql,org.apache.openjpa.jdbc.kernel.exps,org.apache.openjpa.lib.jdbc,org.apache.openjpa.jdbc.schema,org.apache.openjpa.util,org.apache.openjpa.lib.conf"/>
<p n="version" t="version" v="1.0.1"/>
</capability>
<capability name="package">
<p n="package" v="org.apache.openjpa.jdbc.meta"/>
<p n="uses:" v="org.apache.openjpa.lib.meta,org.apache.openjpa.jdbc.conf,org.apache.openjpa.enhance,org.apache.openjpa.conf,org.apache.openjpa.lib.xml,serp.bytecode,org.apache.openjpa.lib.util,org.apache.openjpa.kernel,serp.util,org.apache.openjpa.meta,org.apache.openjpa.jdbc.sql,org.apache.commons.lang,org.apache.openjpa.lib.rop,org.apache.openjpa.jdbc.kernel,org.apache.openjpa.lib.log,org.apache.openjpa.jdbc.schema,org.apache.openjpa.util,org.apache.openjpa.jdbc.meta.strats,org.apache.openjpa.lib.conf"/>
<p n="version" t="version" v="1.0.1"/>
</capability>
<capability name="package">
<p n="package" v="org.apache.openjpa.lib.rop"/>
<p n="uses:" v="org.apache.openjpa.lib.util,serp.util,org.apache.commons.lang.exception,org.apache.commons.lang,org.apache.commons.collections"/>
<p n="version" t="version" v="1.0.1"/>
</capability>
<capability name="package">
<p n="package" v="org.apache.openjpa.lib.log"/>
<p n="uses:" v="org.apache.openjpa.lib.util,org.apache.log4j,org.apache.commons.logging,org.apache.openjpa.lib.conf,org.apache.openjpa.lib.util.concurrent"/>
<p n="version" t="version" v="1.0.1"/>
</capability>
<capability name="package">
<p n="package" v="org.apache.openjpa.jdbc.kernel"/>
<p n="uses:" v="org.apache.openjpa.lib.meta,org.apache.openjpa.jdbc.conf,org.apache.openjpa.enhance,javax.sql,org.apache.openjpa.kernel.exps,org.apache.openjpa.conf,javax.transaction,org.apache.openjpa.lib.util,org.apache.openjpa.kernel,serp.util,org.apache.openjpa.ee,org.apache.openjpa.meta,org.apache.openjpa.event,org.apache.openjpa.jdbc.sql,org.apache.commons.lang,org.apache.openjpa.jdbc.meta,org.apache.openjpa.lib.rop,org.apache.openjpa.lib.log,org.apache.openjpa.lib.graph,org.apache.openjpa.jdbc.kernel.exps,org.apache.openjpa.lib.jdbc,org.apache.openjpa.jdbc.schema,org.apache.openjpa.util,org.apache.openjpa.jdbc.meta.strats,org.apache.openjpa.lib.conf"/>
<p n="version" t="version" v="1.0.1"/>
</capability>
<capability name="package">
<p n="package" v="org.apache.openjpa.lib.graph"/>
<p n="uses:" v="org.apache.openjpa.lib.util"/>
<p n="version" t="version" v="1.0.1"/>
</capability>
<capability name="package">
<p n="package" v="org.apache.openjpa.jdbc.kernel.exps"/>
<p n="uses:" v="org.apache.openjpa.lib.util,org.apache.openjpa.kernel,serp.util,org.apache.openjpa.meta,org.apache.openjpa.jdbc.sql,org.apache.openjpa.jdbc.conf,org.apache.commons.lang,org.apache.openjpa.enhance,org.apache.openjpa.kernel.exps,org.apache.openjpa.jdbc.meta,org.apache.openjpa.jdbc.kernel,org.apache.openjpa.conf,org.apache.openjpa.jdbc.schema,org.apache.openjpa.util,org.apache.openjpa.jdbc.meta.strats"/>
<p n="version" t="version" v="1.0.1"/>
</capability>
<capability name="package">
<p n="package" v="org.apache.openjpa.kernel.jpql"/>
<p n="uses:" v="org.apache.openjpa.lib.util,org.apache.openjpa.kernel,serp.util,org.apache.openjpa.meta,org.apache.openjpa.kernel.exps,org.apache.commons.collections.map,org.apache.openjpa.conf,org.apache.openjpa.util"/>
<p n="version" t="version" v="1.0.1"/>
</capability>
<capability name="package">
<p n="package" v="org.apache.openjpa.lib.jdbc"/>
<p n="uses:" v="org.apache.openjpa.lib.util,org.apache.openjpa.lib.log,serp.util,org.apache.commons.lang.exception,org.apache.openjpa.lib.util.concurrent,javax.sql"/>
<p n="version" t="version" v="1.0.1"/>
</capability>
<capability name="package">
<p n="package" v="org.apache.openjpa.jdbc.schema"/>
<p n="uses:" v="org.apache.openjpa.lib.util,org.apache.openjpa.kernel,org.xml.sax,org.apache.openjpa.lib.meta,serp.util,org.apache.openjpa.jdbc.sql,org.apache.openjpa.jdbc.conf,org.apache.commons.lang,javax.sql,org.apache.openjpa.jdbc.meta,org.apache.openjpa.jdbc.kernel,org.apache.openjpa.lib.log,org.apache.openjpa.lib.jdbc,org.apache.openjpa.util,org.apache.openjpa.lib.conf"/>
<p n="version" t="version" v="1.0.1"/>
</capability>
<capability name="package">
<p n="package" v="org.apache.openjpa.util"/>
<p n="uses:" v="org.apache.openjpa.lib.util,org.apache.openjpa.kernel,serp.util,org.apache.commons.collections.iterators,org.apache.openjpa.meta,org.apache.commons.collections.set,org.apache.commons.lang,org.apache.openjpa.enhance,org.apache.commons.collections,org.apache.openjpa.lib.log,org.apache.openjpa.conf,serp.bytecode,org.apache.openjpa.lib.util.concurrent"/>
<p n="version" t="version" v="1.0.1"/>
</capability>
<capability name="package">
<p n="package" v="org.apache.openjpa.jdbc.meta.strats"/>
<p n="uses:" v="org.apache.openjpa.lib.util,org.apache.openjpa.kernel,serp.util,org.apache.openjpa.meta,org.apache.openjpa.jdbc.sql,org.apache.openjpa.jdbc.conf,org.apache.openjpa.enhance,org.apache.commons.lang,javax.xml.transform,org.apache.openjpa.jdbc.meta,org.apache.openjpa.lib.rop,org.apache.openjpa.jdbc.kernel,org.apache.openjpa.lib.log,org.apache.openjpa.jdbc.schema,javax.xml.bind,javax.xml.transform.stream,org.apache.openjpa.util"/>
<p n="version" t="version" v="1.0.1"/>
</capability>
<capability name="package">
<p n="package" v="org.apache.openjpa.lib.conf"/>
<p n="uses:" v="org.apache.openjpa.lib.util,serp.util,org.apache.commons.lang.exception,org.apache.commons.lang,org.apache.openjpa.lib.log,javax.naming,org.apache.openjpa.lib.util.concurrent"/>
<p n="version" t="version" v="1.0.1"/>
</capability>
<capability name="package">
<p n="package" v="org.apache.openjpa.lib.util.concurrent"/>
<p n="uses:" v="sun.misc,org.apache.openjpa.lib.util,org.apache.commons.collections.set"/>
<p n="version" t="version" v="1.0.1"/>
</capability>
<require extend="false" filter="(&amp;(package=com.ibm.websphere.jtaextensions)(version&gt;=0.0.0))" multiple="false" name="package" optional="true">Import package com.ibm.websphere.jtaextensions</require>
<require extend="false" filter="(&amp;(package=javax.jms)(version&gt;=1.1.0))" multiple="false" name="package" optional="true">Import package javax.jms ;version=1.1.0</require>
<require extend="false" filter="(&amp;(package=javax.naming)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package javax.naming</require>
<require extend="false" filter="(&amp;(package=javax.persistence)(version&gt;=3.0.0))" multiple="false" name="package" optional="false">Import package javax.persistence ;version=3.0.0</require>
<require extend="false" filter="(&amp;(package=javax.persistence.spi)(version&gt;=3.0.0))" multiple="false" name="package" optional="false">Import package javax.persistence.spi ;version=3.0.0</require>
<require extend="false" filter="(&amp;(package=javax.rmi)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package javax.rmi</require>
<require extend="false" filter="(&amp;(package=javax.sql)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package javax.sql</require>
<require extend="false" filter="(&amp;(package=javax.transaction)(version&gt;=1.1.0))" multiple="false" name="package" optional="false">Import package javax.transaction ;version=1.1.0</require>
<require extend="false" filter="(&amp;(package=javax.transaction.xa)(version&gt;=1.1.0))" multiple="false" name="package" optional="false">Import package javax.transaction.xa ;version=1.1.0</require>
<require extend="false" filter="(&amp;(package=javax.xml.bind)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package javax.xml.bind</require>
<require extend="false" filter="(&amp;(package=javax.xml.parsers)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package javax.xml.parsers</require>
<require extend="false" filter="(&amp;(package=javax.xml.transform)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package javax.xml.transform</require>
<require extend="false" filter="(&amp;(package=javax.xml.transform.sax)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package javax.xml.transform.sax</require>
<require extend="false" filter="(&amp;(package=javax.xml.transform.stream)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package javax.xml.transform.stream</require>
<require extend="false" filter="(&amp;(package=oracle.jdbc)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package oracle.jdbc</require>
<require extend="false" filter="(&amp;(package=oracle.sql)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package oracle.sql</require>
<require extend="false" filter="(&amp;(package=org.apache.commons.collections)(version&gt;=0.0.0))" multiple="false" name="package" optional="true">Import package org.apache.commons.collections</require>
<require extend="false" filter="(&amp;(package=org.apache.commons.collections.bidimap)(version&gt;=0.0.0))" multiple="false" name="package" optional="true">Import package org.apache.commons.collections.bidimap</require>
<require extend="false" filter="(&amp;(package=org.apache.commons.collections.comparators)(version&gt;=0.0.0))" multiple="false" name="package" optional="true">Import package org.apache.commons.collections.comparators</require>
<require extend="false" filter="(&amp;(package=org.apache.commons.collections.iterators)(version&gt;=0.0.0))" multiple="false" name="package" optional="true">Import package org.apache.commons.collections.iterators</require>
<require extend="false" filter="(&amp;(package=org.apache.commons.collections.map)(version&gt;=0.0.0))" multiple="false" name="package" optional="true">Import package org.apache.commons.collections.map</require>
<require extend="false" filter="(&amp;(package=org.apache.commons.collections.set)(version&gt;=0.0.0))" multiple="false" name="package" optional="true">Import package org.apache.commons.collections.set</require>
<require extend="false" filter="(&amp;(package=org.apache.commons.lang)(version&gt;=0.0.0))" multiple="false" name="package" optional="true">Import package org.apache.commons.lang</require>
<require extend="false" filter="(&amp;(package=org.apache.commons.lang.exception)(version&gt;=0.0.0))" multiple="false" name="package" optional="true">Import package org.apache.commons.lang.exception</require>
<require extend="false" filter="(&amp;(package=org.apache.commons.logging)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package org.apache.commons.logging</require>
<require extend="false" filter="(&amp;(package=org.apache.commons.pool)(version&gt;=0.0.0))" multiple="false" name="package" optional="true">Import package org.apache.commons.pool</require>
<require extend="false" filter="(&amp;(package=org.apache.commons.pool.impl)(version&gt;=0.0.0))" multiple="false" name="package" optional="true">Import package org.apache.commons.pool.impl</require>
<require extend="false" filter="(&amp;(package=org.apache.log4j)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package org.apache.log4j</require>
<require extend="false" filter="(&amp;(package=org.apache.openjpa.abstractstore)(version&gt;=1.0.1))" multiple="false" name="package" optional="false">Import package org.apache.openjpa.abstractstore ;version=1.0.1</require>
<require extend="false" filter="(&amp;(package=org.apache.openjpa.ant)(version&gt;=1.0.1))" multiple="false" name="package" optional="false">Import package org.apache.openjpa.ant ;version=1.0.1</require>
<require extend="false" filter="(&amp;(package=org.apache.openjpa.conf)(version&gt;=1.0.1))" multiple="false" name="package" optional="false">Import package org.apache.openjpa.conf ;version=1.0.1</require>
<require extend="false" filter="(&amp;(package=org.apache.openjpa.datacache)(version&gt;=1.0.1))" multiple="false" name="package" optional="false">Import package org.apache.openjpa.datacache ;version=1.0.1</require>
<require extend="false" filter="(&amp;(package=org.apache.openjpa.ee)(version&gt;=1.0.1))" multiple="false" name="package" optional="false">Import package org.apache.openjpa.ee ;version=1.0.1</require>
<require extend="false" filter="(&amp;(package=org.apache.openjpa.enhance)(version&gt;=1.0.1))" multiple="false" name="package" optional="false">Import package org.apache.openjpa.enhance ;version=1.0.1</require>
<require extend="false" filter="(&amp;(package=org.apache.openjpa.event)(version&gt;=1.0.1))" multiple="false" name="package" optional="false">Import package org.apache.openjpa.event ;version=1.0.1</require>
<require extend="false" filter="(&amp;(package=org.apache.openjpa.jdbc.ant)(version&gt;=1.0.1))" multiple="false" name="package" optional="false">Import package org.apache.openjpa.jdbc.ant ;version=1.0.1</require>
<require extend="false" filter="(&amp;(package=org.apache.openjpa.jdbc.conf)(version&gt;=1.0.1))" multiple="false" name="package" optional="false">Import package org.apache.openjpa.jdbc.conf ;version=1.0.1</require>
<require extend="false" filter="(&amp;(package=org.apache.openjpa.jdbc.kernel)(version&gt;=1.0.1))" multiple="false" name="package" optional="false">Import package org.apache.openjpa.jdbc.kernel ;version=1.0.1</require>
<require extend="false" filter="(&amp;(package=org.apache.openjpa.jdbc.kernel.exps)(version&gt;=1.0.1))" multiple="false" name="package" optional="false">Import package org.apache.openjpa.jdbc.kernel.exps ;version=1.0.1</require>
<require extend="false" filter="(&amp;(package=org.apache.openjpa.jdbc.meta)(version&gt;=1.0.1))" multiple="false" name="package" optional="false">Import package org.apache.openjpa.jdbc.meta ;version=1.0.1</require>
<require extend="false" filter="(&amp;(package=org.apache.openjpa.jdbc.meta.strats)(version&gt;=1.0.1))" multiple="false" name="package" optional="false">Import package org.apache.openjpa.jdbc.meta.strats ;version=1.0.1</require>
<require extend="false" filter="(&amp;(package=org.apache.openjpa.jdbc.schema)(version&gt;=1.0.1))" multiple="false" name="package" optional="false">Import package org.apache.openjpa.jdbc.schema ;version=1.0.1</require>
<require extend="false" filter="(&amp;(package=org.apache.openjpa.jdbc.sql)(version&gt;=1.0.1))" multiple="false" name="package" optional="false">Import package org.apache.openjpa.jdbc.sql ;version=1.0.1</require>
<require extend="false" filter="(&amp;(package=org.apache.openjpa.kernel)(version&gt;=1.0.1))" multiple="false" name="package" optional="false">Import package org.apache.openjpa.kernel ;version=1.0.1</require>
<require extend="false" filter="(&amp;(package=org.apache.openjpa.kernel.exps)(version&gt;=1.0.1))" multiple="false" name="package" optional="false">Import package org.apache.openjpa.kernel.exps ;version=1.0.1</require>
<require extend="false" filter="(&amp;(package=org.apache.openjpa.kernel.jpql)(version&gt;=1.0.1))" multiple="false" name="package" optional="false">Import package org.apache.openjpa.kernel.jpql ;version=1.0.1</require>
<require extend="false" filter="(&amp;(package=org.apache.openjpa.lib.ant)(version&gt;=1.0.1))" multiple="false" name="package" optional="false">Import package org.apache.openjpa.lib.ant ;version=1.0.1</require>
<require extend="false" filter="(&amp;(package=org.apache.openjpa.lib.conf)(version&gt;=1.0.1))" multiple="false" name="package" optional="false">Import package org.apache.openjpa.lib.conf ;version=1.0.1</require>
<require extend="false" filter="(&amp;(package=org.apache.openjpa.lib.graph)(version&gt;=1.0.1))" multiple="false" name="package" optional="false">Import package org.apache.openjpa.lib.graph ;version=1.0.1</require>
<require extend="false" filter="(&amp;(package=org.apache.openjpa.lib.jdbc)(version&gt;=1.0.1))" multiple="false" name="package" optional="false">Import package org.apache.openjpa.lib.jdbc ;version=1.0.1</require>
<require extend="false" filter="(&amp;(package=org.apache.openjpa.lib.log)(version&gt;=1.0.1))" multiple="false" name="package" optional="false">Import package org.apache.openjpa.lib.log ;version=1.0.1</require>
<require extend="false" filter="(&amp;(package=org.apache.openjpa.lib.meta)(version&gt;=1.0.1))" multiple="false" name="package" optional="false">Import package org.apache.openjpa.lib.meta ;version=1.0.1</require>
<require extend="false" filter="(&amp;(package=org.apache.openjpa.lib.rop)(version&gt;=1.0.1))" multiple="false" name="package" optional="false">Import package org.apache.openjpa.lib.rop ;version=1.0.1</require>
<require extend="false" filter="(&amp;(package=org.apache.openjpa.lib.util)(version&gt;=1.0.1))" multiple="false" name="package" optional="false">Import package org.apache.openjpa.lib.util ;version=1.0.1</require>
<require extend="false" filter="(&amp;(package=org.apache.openjpa.lib.util.concurrent)(version&gt;=1.0.1))" multiple="false" name="package" optional="false">Import package org.apache.openjpa.lib.util.concurrent ;version=1.0.1</require>
<require extend="false" filter="(&amp;(package=org.apache.openjpa.lib.xml)(version&gt;=1.0.1))" multiple="false" name="package" optional="false">Import package org.apache.openjpa.lib.xml ;version=1.0.1</require>
<require extend="false" filter="(&amp;(package=org.apache.openjpa.meta)(version&gt;=1.0.1))" multiple="false" name="package" optional="false">Import package org.apache.openjpa.meta ;version=1.0.1</require>
<require extend="false" filter="(&amp;(package=org.apache.openjpa.persistence)(version&gt;=1.0.1))" multiple="false" name="package" optional="false">Import package org.apache.openjpa.persistence ;version=1.0.1</require>
<require extend="false" filter="(&amp;(package=org.apache.openjpa.persistence.jdbc)(version&gt;=1.0.1))" multiple="false" name="package" optional="false">Import package org.apache.openjpa.persistence.jdbc ;version=1.0.1</require>
<require extend="false" filter="(&amp;(package=org.apache.openjpa.util)(version&gt;=1.0.1))" multiple="false" name="package" optional="false">Import package org.apache.openjpa.util ;version=1.0.1</require>
<require extend="false" filter="(&amp;(package=org.apache.tools.ant)(version&gt;=0.0.0))" multiple="false" name="package" optional="true">Import package org.apache.tools.ant</require>
<require extend="false" filter="(&amp;(package=org.apache.tools.ant.taskdefs)(version&gt;=0.0.0))" multiple="false" name="package" optional="true">Import package org.apache.tools.ant.taskdefs</require>
<require extend="false" filter="(&amp;(package=org.apache.tools.ant.types)(version&gt;=0.0.0))" multiple="false" name="package" optional="true">Import package org.apache.tools.ant.types</require>
<require extend="false" filter="(&amp;(package=org.apache.xerces.impl)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package org.apache.xerces.impl</require>
<require extend="false" filter="(&amp;(package=org.w3c.dom)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package org.w3c.dom</require>
<require extend="false" filter="(&amp;(package=org.xml.sax)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package org.xml.sax</require>
<require extend="false" filter="(&amp;(package=org.xml.sax.ext)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package org.xml.sax.ext</require>
<require extend="false" filter="(&amp;(package=org.xml.sax.helpers)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package org.xml.sax.helpers</require>
<require extend="false" filter="(&amp;(package=serp.bytecode)(version&gt;=0.0.0))" multiple="false" name="package" optional="true">Import package serp.bytecode</require>
<require extend="false" filter="(&amp;(package=serp.bytecode.lowlevel)(version&gt;=0.0.0))" multiple="false" name="package" optional="true">Import package serp.bytecode.lowlevel</require>
<require extend="false" filter="(&amp;(package=serp.util)(version&gt;=0.0.0))" multiple="false" name="package" optional="true">Import package serp.util</require>
<require extend="false" filter="(&amp;(package=sun.misc)(version&gt;=0.0.0))" multiple="false" name="package" optional="true">Import package sun.misc</require>
<require extend="false" filter="(&amp;(package=weblogic.transaction)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package weblogic.transaction</require>
</resource>
<resource id="86" presentationname="ServiceMix OSGI Common Bundles: wsdl4j" symbolicname="org.apache.servicemix.bundles.wsdl4j" uri="http://people.apache.org/repo/m2-snapshot-repository/org/apache/servicemix/bundles/org.apache.servicemix.bundles.wsdl4j/1.6.1-4.0-SNAPSHOT/org.apache.servicemix.bundles.wsdl4j-1.6.1-4.0-SNAPSHOT.jar" version="1.6.1.SNAPSHOT">
<description>This bundle simply wraps wsdl4j-1.6.1.jar.</description>
<size>153883</size>
<category id="org.apache.servicemix.bundles"/>
<capability name="bundle">
<p n="manifestversion" v="2"/>
<p n="presentationname" v="ServiceMix OSGI Common Bundles: wsdl4j"/>
<p n="symbolicname" v="org.apache.servicemix.bundles.wsdl4j"/>
<p n="version" t="version" v="1.6.1.SNAPSHOT"/>
</capability>
<capability name="package">
<p n="package" v="javax.wsdl"/>
<p n="uses:" v="javax.wsdl.extensions,javax.xml.namespace,org.w3c.dom"/>
<p n="version" t="version" v="1.6.1"/>
</capability>
<capability name="package">
<p n="package" v="javax.wsdl.extensions"/>
<p n="uses:" v="javax.wsdl,javax.xml.namespace,org.w3c.dom,com.ibm.wsdl.util.xml"/>
<p n="version" t="version" v="1.6.1"/>
</capability>
<capability name="package">
<p n="package" v="javax.wsdl.extensions.soap"/>
<p n="uses:" v="javax.wsdl.extensions,javax.xml.namespace"/>
<p n="version" t="version" v="1.6.1"/>
</capability>
<capability name="package">
<p n="package" v="javax.wsdl.factory"/>
<p n="uses:" v="javax.wsdl,javax.wsdl.extensions,javax.wsdl.xml"/>
<p n="version" t="version" v="1.6.1"/>
</capability>
<capability name="package">
<p n="package" v="javax.wsdl.extensions.http"/>
<p n="uses:" v="javax.wsdl.extensions"/>
<p n="version" t="version" v="1.6.1"/>
</capability>
<capability name="package">
<p n="package" v="javax.wsdl.xml"/>
<p n="uses:" v="javax.wsdl,javax.wsdl.extensions,org.xml.sax,org.w3c.dom"/>
<p n="version" t="version" v="1.6.1"/>
</capability>
<capability name="package">
<p n="package" v="javax.wsdl.extensions.schema"/>
<p n="uses:" v="javax.wsdl.extensions,org.w3c.dom"/>
<p n="version" t="version" v="1.6.1"/>
</capability>
<capability name="package">
<p n="package" v="javax.wsdl.extensions.mime"/>
<p n="uses:" v="javax.wsdl.extensions"/>
<p n="version" t="version" v="1.6.1"/>
</capability>
<capability name="package">
<p n="package" v="javax.wsdl.extensions.soap12"/>
<p n="uses:" v="javax.wsdl.extensions,javax.xml.namespace"/>
<p n="version" t="version" v="1.6.1"/>
</capability>
<require extend="false" filter="(&amp;(package=javax.wsdl)(version&gt;=1.6.1))" multiple="false" name="package" optional="false">Import package javax.wsdl ;version=1.6.1</require>
<require extend="false" filter="(&amp;(package=javax.wsdl.extensions)(version&gt;=1.6.1))" multiple="false" name="package" optional="false">Import package javax.wsdl.extensions ;version=1.6.1</require>
<require extend="false" filter="(&amp;(package=javax.wsdl.extensions.http)(version&gt;=1.6.1))" multiple="false" name="package" optional="false">Import package javax.wsdl.extensions.http ;version=1.6.1</require>
<require extend="false" filter="(&amp;(package=javax.wsdl.extensions.mime)(version&gt;=1.6.1))" multiple="false" name="package" optional="false">Import package javax.wsdl.extensions.mime ;version=1.6.1</require>
<require extend="false" filter="(&amp;(package=javax.wsdl.extensions.schema)(version&gt;=1.6.1))" multiple="false" name="package" optional="false">Import package javax.wsdl.extensions.schema ;version=1.6.1</require>
<require extend="false" filter="(&amp;(package=javax.wsdl.extensions.soap)(version&gt;=1.6.1))" multiple="false" name="package" optional="false">Import package javax.wsdl.extensions.soap ;version=1.6.1</require>
<require extend="false" filter="(&amp;(package=javax.wsdl.extensions.soap12)(version&gt;=1.6.1))" multiple="false" name="package" optional="false">Import package javax.wsdl.extensions.soap12 ;version=1.6.1</require>
<require extend="false" filter="(&amp;(package=javax.wsdl.factory)(version&gt;=1.6.1))" multiple="false" name="package" optional="false">Import package javax.wsdl.factory ;version=1.6.1</require>
<require extend="false" filter="(&amp;(package=javax.wsdl.xml)(version&gt;=1.6.1))" multiple="false" name="package" optional="false">Import package javax.wsdl.xml ;version=1.6.1</require>
<require extend="false" filter="(&amp;(package=javax.xml.namespace)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package javax.xml.namespace</require>
<require extend="false" filter="(&amp;(package=javax.xml.parsers)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package javax.xml.parsers</require>
<require extend="false" filter="(&amp;(package=org.w3c.dom)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package org.w3c.dom</require>
<require extend="false" filter="(&amp;(package=org.xml.sax)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package org.xml.sax</require>
</resource>
<resource id="87" presentationname="ServiceMix OSGI Common Bundles: xstream" symbolicname="org.apache.servicemix.bundles.xstream" uri="http://people.apache.org/repo/m2-snapshot-repository/org/apache/servicemix/bundles/org.apache.servicemix.bundles.xstream/1.2.2-4.0-SNAPSHOT/org.apache.servicemix.bundles.xstream-1.2.2-4.0-SNAPSHOT.jar" version="1.2.2.SNAPSHOT">
<description>This bundle simply wraps xstream-1.2.2.jar.</description>
<size>379547</size>
<category id="org.apache.servicemix.bundles"/>
<capability name="bundle">
<p n="manifestversion" v="2"/>
<p n="presentationname" v="ServiceMix OSGI Common Bundles: xstream"/>
<p n="symbolicname" v="org.apache.servicemix.bundles.xstream"/>
<p n="version" t="version" v="1.2.2.SNAPSHOT"/>
</capability>
<capability name="package">
<p n="package" v="com.thoughtworks.xstream.io"/>
<p n="uses:" v="com.thoughtworks.xstream.core.util,com.thoughtworks.xstream.converters,com.thoughtworks.xstream.core"/>
<p n="version" t="version" v="1.2.2"/>
</capability>
<capability name="package">
<p n="package" v="com.thoughtworks.xstream.io.copy"/>
<p n="uses:" v="com.thoughtworks.xstream.io"/>
<p n="version" t="version" v="1.2.2"/>
</capability>
<capability name="package">
<p n="package" v="com.thoughtworks.xstream.converters.javabean"/>
<p n="uses:" v="com.thoughtworks.xstream.io,com.thoughtworks.xstream.mapper,com.thoughtworks.xstream.alias,com.thoughtworks.xstream.converters.reflection,com.thoughtworks.xstream.converters"/>
<p n="version" t="version" v="1.2.2"/>
</capability>
<capability name="package">
<p n="package" v="com.thoughtworks.xstream.io.binary"/>
<p n="uses:" v="com.thoughtworks.xstream.io,com.thoughtworks.xstream.converters"/>
<p n="version" t="version" v="1.2.2"/>
</capability>
<capability name="package">
<p n="package" v="com.thoughtworks.xstream.converters.extended"/>
<p n="uses:" v="com.thoughtworks.xstream.io,org.joda.time,com.thoughtworks.xstream.mapper,org.joda.time.format,com.thoughtworks.xstream.core.util,com.thoughtworks.xstream.converters.reflection,com.thoughtworks.xstream.converters,com.thoughtworks.xstream.converters.basic,com.thoughtworks.xstream.converters.collections,javax.swing.plaf,javax.security.auth"/>
<p n="version" t="version" v="1.2.2"/>
</capability>
<capability name="package">
<p n="package" v="com.thoughtworks.xstream.io.xml.xppdom"/>
<p n="uses:" v="org.xmlpull.mxp1,org.xmlpull.v1"/>
<p n="version" t="version" v="1.2.2"/>
</capability>
<capability name="package">
<p n="package" v="com.thoughtworks.xstream.mapper"/>
<p n="uses:" v="net.sf.cglib.proxy,com.thoughtworks.xstream.alias,com.thoughtworks.xstream.converters,com.thoughtworks.xstream.core"/>
<p n="version" t="version" v="1.2.2"/>
</capability>
<capability name="package">
<p n="package" v="com.thoughtworks.xstream.core.util"/>
<p n="uses:" v="com.thoughtworks.xstream.io,com.thoughtworks.xstream.converters.reflection,com.thoughtworks.xstream.converters"/>
<p n="version" t="version" v="1.2.2"/>
</capability>
<capability name="package">
<p n="package" v="com.thoughtworks.xstream.converters.reflection"/>
<p n="uses:" v="com.thoughtworks.xstream.io,com.thoughtworks.xstream.mapper,com.thoughtworks.xstream.core.util,com.thoughtworks.xstream.converters,com.thoughtworks.xstream.core,sun.misc,com.thoughtworks.xstream.converters.basic,net.sf.cglib.proxy,sun.reflect"/>
<p n="version" t="version" v="1.2.2"/>
</capability>
<capability name="package">
<p n="package" v="com.thoughtworks.xstream.converters"/>
<p n="uses:" v="com.thoughtworks.xstream.io,com.thoughtworks.xstream.core.util,com.thoughtworks.xstream.core"/>
<p n="version" t="version" v="1.2.2"/>
</capability>
<capability name="package">
<p n="package" v="com.thoughtworks.xstream.persistence"/>
<p n="uses:" v="com.thoughtworks.xstream.io,com.thoughtworks.xstream"/>
<p n="version" t="version" v="1.2.2"/>
</capability>
<capability name="package">
<p n="package" v="com.thoughtworks.xstream.core"/>
<p n="uses:" v="com.thoughtworks.xstream.io,com.thoughtworks.xstream.mapper,com.thoughtworks.xstream.core.util,com.thoughtworks.xstream.converters.reflection,com.thoughtworks.xstream.converters,com.thoughtworks.xstream,com.thoughtworks.xstream.alias,com.thoughtworks.xstream.io.path"/>
<p n="version" t="version" v="1.2.2"/>
</capability>
<capability name="package">
<p n="package" v="com.thoughtworks.xstream.converters.enums"/>
<p n="uses:" v="com.thoughtworks.xstream.io,com.thoughtworks.xstream.converters.collections,com.thoughtworks.xstream.mapper,com.thoughtworks.xstream.core.util,com.thoughtworks.xstream.converters"/>
<p n="version" t="version" v="1.2.2"/>
</capability>
<capability name="package">
<p n="package" v="com.thoughtworks.xstream.io.xml"/>
<p n="uses:" v="com.thoughtworks.xstream.io,nu.xom,org.dom4j.io,org.xml.sax,com.thoughtworks.xstream.io.xml.xppdom,org.xmlpull.mxp1,javax.xml.namespace,com.thoughtworks.xstream.core.util,org.w3c.dom,org.jdom,com.thoughtworks.xstream.converters,org.dom4j.tree,javax.xml.transform.sax,org.dom4j,org.jdom.input,org.xmlpull.v1,com.thoughtworks.xstream,org.xml.sax.helpers,javax.xml.parsers,javax.xml.stream"/>
<p n="version" t="version" v="1.2.2"/>
</capability>
<capability name="package">
<p n="package" v="com.thoughtworks.xstream.converters.basic"/>
<p n="uses:" v="com.thoughtworks.xstream.io,com.thoughtworks.xstream.mapper,com.thoughtworks.xstream.core.util,com.thoughtworks.xstream.converters"/>
<p n="version" t="version" v="1.2.2"/>
</capability>
<capability name="package">
<p n="package" v="com.thoughtworks.xstream.annotations"/>
<p n="uses:" v="com.thoughtworks.xstream,com.thoughtworks.xstream.converters.collections,com.thoughtworks.xstream.mapper,com.thoughtworks.xstream.converters.reflection,com.thoughtworks.xstream.converters"/>
<p n="version" t="version" v="1.2.2"/>
</capability>
<capability name="package">
<p n="package" v="com.thoughtworks.xstream.io.json"/>
<p n="uses:" v="com.thoughtworks.xstream.io,com.thoughtworks.xstream.io.xml,org.codehaus.jettison.mapped,com.thoughtworks.xstream.core.util,javax.xml.stream"/>
<p n="version" t="version" v="1.2.2"/>
</capability>
<capability name="package">
<p n="package" v="com.thoughtworks.xstream"/>
<p n="uses:" v="com.thoughtworks.xstream.io,com.thoughtworks.xstream.converters.extended,com.thoughtworks.xstream.mapper,com.thoughtworks.xstream.core.util,com.thoughtworks.xstream.converters.reflection,com.thoughtworks.xstream.converters,com.thoughtworks.xstream.core,com.thoughtworks.xstream.io.xml,com.thoughtworks.xstream.converters.basic,com.thoughtworks.xstream.converters.collections,com.thoughtworks.xstream.alias"/>
<p n="version" t="version" v="1.2.2"/>
</capability>
<capability name="package">
<p n="package" v="com.thoughtworks.xstream.converters.collections"/>
<p n="uses:" v="com.thoughtworks.xstream.io,com.thoughtworks.xstream.mapper,com.thoughtworks.xstream.core.util,com.thoughtworks.xstream.converters,com.thoughtworks.xstream.core"/>
<p n="version" t="version" v="1.2.2"/>
</capability>
<capability name="package">
<p n="package" v="com.thoughtworks.xstream.alias"/>
<p n="uses:" v="com.thoughtworks.xstream.mapper,com.thoughtworks.xstream.core"/>
<p n="version" t="version" v="1.2.2"/>
</capability>
<capability name="package">
<p n="package" v="com.thoughtworks.xstream.io.path"/>
<p n="uses:" v="com.thoughtworks.xstream.io,com.thoughtworks.xstream.core.util,com.thoughtworks.xstream.converters"/>
<p n="version" t="version" v="1.2.2"/>
</capability>
<require extend="false" filter="(&amp;(package=com.thoughtworks.xstream)(version&gt;=1.2.2))" multiple="false" name="package" optional="false">Import package com.thoughtworks.xstream ;version=1.2.2</require>
<require extend="false" filter="(&amp;(package=com.thoughtworks.xstream.alias)(version&gt;=1.2.2))" multiple="false" name="package" optional="false">Import package com.thoughtworks.xstream.alias ;version=1.2.2</require>
<require extend="false" filter="(&amp;(package=com.thoughtworks.xstream.annotations)(version&gt;=1.2.2))" multiple="false" name="package" optional="false">Import package com.thoughtworks.xstream.annotations ;version=1.2.2</require>
<require extend="false" filter="(&amp;(package=com.thoughtworks.xstream.converters)(version&gt;=1.2.2))" multiple="false" name="package" optional="false">Import package com.thoughtworks.xstream.converters ;version=1.2.2</require>
<require extend="false" filter="(&amp;(package=com.thoughtworks.xstream.converters.basic)(version&gt;=1.2.2))" multiple="false" name="package" optional="false">Import package com.thoughtworks.xstream.converters.basic ;version=1.2.2</require>
<require extend="false" filter="(&amp;(package=com.thoughtworks.xstream.converters.collections)(version&gt;=1.2.2))" multiple="false" name="package" optional="false">Import package com.thoughtworks.xstream.converters.collections ;version=1.2.2</require>
<require extend="false" filter="(&amp;(package=com.thoughtworks.xstream.converters.enums)(version&gt;=1.2.2))" multiple="false" name="package" optional="false">Import package com.thoughtworks.xstream.converters.enums ;version=1.2.2</require>
<require extend="false" filter="(&amp;(package=com.thoughtworks.xstream.converters.extended)(version&gt;=1.2.2))" multiple="false" name="package" optional="false">Import package com.thoughtworks.xstream.converters.extended ;version=1.2.2</require>
<require extend="false" filter="(&amp;(package=com.thoughtworks.xstream.converters.javabean)(version&gt;=1.2.2))" multiple="false" name="package" optional="false">Import package com.thoughtworks.xstream.converters.javabean ;version=1.2.2</require>
<require extend="false" filter="(&amp;(package=com.thoughtworks.xstream.converters.reflection)(version&gt;=1.2.2))" multiple="false" name="package" optional="false">Import package com.thoughtworks.xstream.converters.reflection ;version=1.2.2</require>
<require extend="false" filter="(&amp;(package=com.thoughtworks.xstream.core)(version&gt;=1.2.2))" multiple="false" name="package" optional="false">Import package com.thoughtworks.xstream.core ;version=1.2.2</require>
<require extend="false" filter="(&amp;(package=com.thoughtworks.xstream.core.util)(version&gt;=1.2.2))" multiple="false" name="package" optional="false">Import package com.thoughtworks.xstream.core.util ;version=1.2.2</require>
<require extend="false" filter="(&amp;(package=com.thoughtworks.xstream.io)(version&gt;=1.2.2))" multiple="false" name="package" optional="false">Import package com.thoughtworks.xstream.io ;version=1.2.2</require>
<require extend="false" filter="(&amp;(package=com.thoughtworks.xstream.io.binary)(version&gt;=1.2.2))" multiple="false" name="package" optional="false">Import package com.thoughtworks.xstream.io.binary ;version=1.2.2</require>
<require extend="false" filter="(&amp;(package=com.thoughtworks.xstream.io.copy)(version&gt;=1.2.2))" multiple="false" name="package" optional="false">Import package com.thoughtworks.xstream.io.copy ;version=1.2.2</require>
<require extend="false" filter="(&amp;(package=com.thoughtworks.xstream.io.json)(version&gt;=1.2.2))" multiple="false" name="package" optional="false">Import package com.thoughtworks.xstream.io.json ;version=1.2.2</require>
<require extend="false" filter="(&amp;(package=com.thoughtworks.xstream.io.path)(version&gt;=1.2.2))" multiple="false" name="package" optional="false">Import package com.thoughtworks.xstream.io.path ;version=1.2.2</require>
<require extend="false" filter="(&amp;(package=com.thoughtworks.xstream.io.xml)(version&gt;=1.2.2))" multiple="false" name="package" optional="false">Import package com.thoughtworks.xstream.io.xml ;version=1.2.2</require>
<require extend="false" filter="(&amp;(package=com.thoughtworks.xstream.io.xml.xppdom)(version&gt;=1.2.2))" multiple="false" name="package" optional="false">Import package com.thoughtworks.xstream.io.xml.xppdom ;version=1.2.2</require>
<require extend="false" filter="(&amp;(package=com.thoughtworks.xstream.mapper)(version&gt;=1.2.2))" multiple="false" name="package" optional="false">Import package com.thoughtworks.xstream.mapper ;version=1.2.2</require>
<require extend="false" filter="(&amp;(package=com.thoughtworks.xstream.persistence)(version&gt;=1.2.2))" multiple="false" name="package" optional="false">Import package com.thoughtworks.xstream.persistence ;version=1.2.2</require>
<require extend="false" filter="(&amp;(package=javax.security.auth)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package javax.security.auth</require>
<require extend="false" filter="(&amp;(package=javax.swing.plaf)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package javax.swing.plaf</require>
<require extend="false" filter="(&amp;(package=javax.xml.namespace)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package javax.xml.namespace</require>
<require extend="false" filter="(&amp;(package=javax.xml.parsers)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package javax.xml.parsers</require>
<require extend="false" filter="(&amp;(package=javax.xml.stream)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package javax.xml.stream</require>
<require extend="false" filter="(&amp;(package=javax.xml.transform.sax)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package javax.xml.transform.sax</require>
<require extend="false" filter="(&amp;(package=net.sf.cglib.proxy)(version&gt;=0.0.0))" multiple="false" name="package" optional="true">Import package net.sf.cglib.proxy</require>
<require extend="false" filter="(&amp;(package=nu.xom)(version&gt;=0.0.0))" multiple="false" name="package" optional="true">Import package nu.xom</require>
<require extend="false" filter="(&amp;(package=org.codehaus.jettison.mapped)(version&gt;=0.0.0))" multiple="false" name="package" optional="true">Import package org.codehaus.jettison.mapped</require>
<require extend="false" filter="(&amp;(package=org.dom4j)(version&gt;=0.0.0))" multiple="false" name="package" optional="true">Import package org.dom4j</require>
<require extend="false" filter="(&amp;(package=org.dom4j.io)(version&gt;=0.0.0))" multiple="false" name="package" optional="true">Import package org.dom4j.io</require>
<require extend="false" filter="(&amp;(package=org.dom4j.tree)(version&gt;=0.0.0))" multiple="false" name="package" optional="true">Import package org.dom4j.tree</require>
<require extend="false" filter="(&amp;(package=org.jdom)(version&gt;=0.0.0))" multiple="false" name="package" optional="true">Import package org.jdom</require>
<require extend="false" filter="(&amp;(package=org.jdom.input)(version&gt;=0.0.0))" multiple="false" name="package" optional="true">Import package org.jdom.input</require>
<require extend="false" filter="(&amp;(package=org.joda.time)(version&gt;=0.0.0))" multiple="false" name="package" optional="true">Import package org.joda.time</require>
<require extend="false" filter="(&amp;(package=org.joda.time.format)(version&gt;=0.0.0))" multiple="false" name="package" optional="true">Import package org.joda.time.format</require>
<require extend="false" filter="(&amp;(package=org.w3c.dom)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package org.w3c.dom</require>
<require extend="false" filter="(&amp;(package=org.xml.sax)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package org.xml.sax</require>
<require extend="false" filter="(&amp;(package=org.xml.sax.helpers)(version&gt;=0.0.0))" multiple="false" name="package" optional="false">Import package org.xml.sax.helpers</require>
<require extend="false" filter="(&amp;(package=org.xmlpull.mxp1)(version&gt;=0.0.0))" multiple="false" name="package" optional="true">Import package org.xmlpull.mxp1</require>
<require extend="false" filter="(&amp;(package=org.xmlpull.v1)(version&gt;=0.0.0))" multiple="false" name="package" optional="true">Import package org.xmlpull.v1</require>
<require extend="false" filter="(&amp;(package=sun.misc)(version&gt;=0.0.0))" multiple="false" name="package" optional="true">Import package sun.misc</require>
<require extend="false" filter="(&amp;(package=sun.reflect)(version&gt;=0.0.0))" multiple="false" name="package" optional="true">Import package sun.reflect</require>
</resource>
</repository>
